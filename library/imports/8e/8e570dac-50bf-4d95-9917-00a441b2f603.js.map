{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Scripts\\Game1/assets\\Scripts\\Game1\\BoxCollision.js"],"names":["cc","Class","extends","Component","properties","onLoad","isStationary","fCollisionTime","isCollision","start","update","dt","node","getPositionY","parent","getComponent","isJoin"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ,KAHP;AAoBL;AACAC,UArBK,oBAqBK;;AAEN;AACA;AACA;AACA,aAAKC,YAAL,GAAkB,KAAlB;AACA;AACA,aAAKC,cAAL,GAAoB,CAApB;AACA;AACA,aAAKC,WAAL,GAAiB,KAAjB;AACH,KA/BI;AAgCLC,SAhCK,mBAgCI,CAER,CAlCI;AAmCLC,UAnCK,kBAmCGC,EAnCH,EAmCO;AACR,YAAG,KAAKC,IAAL,CAAUC,YAAV,KAAyB,KAAKD,IAAL,CAAUE,MAAV,CAAiBD,YAAjB,EAAzB,GAAyD,IAA5D,EACA;AACI,iBAAKD,IAAL,CAAUE,MAAV,CAAiBC,YAAjB,CAA8B,cAA9B,EAA8CC,MAA9C,GAAqD,IAArD;AACH;AACJ;AAxCI;AAyCL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAvDJ","file":"BoxCollision.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Game1","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad () {\r\n     \r\n        // //初始化物体下落计时器\r\n        // this.fDownTime=0;\r\n        //判断下落方块是否固定\r\n        this.isStationary=false;\r\n        //初始化物体触底，触碰方块计时器\r\n        this.fCollisionTime=0;\r\n        //判断物体是否和底部或 方块触碰\r\n        this.isCollision=false;\r\n    },\r\n    start () {\r\n\r\n    },\r\n    update (dt) {\r\n        if(this.node.getPositionY()+this.node.parent.getPositionY()<1920)\r\n        {\r\n            this.node.parent.getComponent(\"OperateBlock\").isJoin=true;\r\n        }\r\n    },\r\n    // //俄罗斯方块旋转\r\n    // RotateBlock:function(){\r\n    //     if(this.isStationary==false)\r\n    //     {\r\n    //         //刷新1s计时时间\r\n    //         this.fCollisionTime=0;\r\n    //         //旋转次数自加1\r\n    //         this.nRotate++;\r\n    //         this.node.rotation=this.nRotate*90;\r\n    //         if(this.nRotate==4)\r\n    //         {\r\n    //             this.nRotate=1;\r\n    //         }\r\n    //     }\r\n    // },\r\n\r\n \r\n});\r\n"]}