{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Scripts\\Main1/assets\\Scripts\\Main1\\wxRankList.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Main1","sourcesContent":["let Consts = {\r\n\tOpenDataKeys: {\r\n\t\tInitKey: \"initKey\",\r\n\t\tGrade: \"testkey\",\r\n\t\tLevelKey: \"reachlevel\",\r\n\t\tScoreKey: \"levelScore\", // json.string\r\n\t},\r\n\tDomainAction: {\r\n\t\tFetchFriend: \"FetchFriend\",\r\n\t\tFetchGroup: \"FetchGroup\",\r\n\t\tFetchFriendLevel: \"FetchFriendLevel\", //好友关卡进度排行\r\n\t\tFetchFriendScore: \"FetchFriendScore\", //好友关卡得分排行\r\n\t\tHorConmpar: \"HorConmpar\", //横向比较 horizontal comparison\r\n\t\tPaging: \"Paging\",\r\n        Scrolling: \"Scrolling\",\r\n        SaveScore:\"SaveScore\",\r\n\t},\r\n}\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class wxRankList extends cc.Component {\r\n\r\n    static instance:wxRankList=null;\r\n\r\n    @property(cc.Sprite)\r\n    rankRender:cc.Sprite=null; // render spr\r\n    @property(cc.Node)\r\n    rankListNode:cc.Node=null;\r\n    @property(cc.Node)\r\n    horRankNode:cc.Node=null;\r\n\r\n    @property(cc.Node)\r\n    rankBgNode:cc.Node=null;\r\n\r\n    @property(cc.Label)\r\n    labelTitle:cc.Label=null;\r\n    @property(cc.Node)\r\n    touchLayer:cc.Node=null;\r\n\r\n    @property(Boolean)\r\n    enableScroll = false;//是否可滑动排行榜列表\r\n\r\n    _timeCounter=0;\r\n    rendInterval=0.5;//刷新排行画布间隔s\r\n\r\n    rankTexture:cc.Texture2D=null;\r\n    rankSpriteFrame : cc.SpriteFrame=null;\r\n    closeBackRank=0; // 关闭后操作\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        wxRankList.instance=this;\r\n        \r\n        this._timeCounter = 0\r\n        this.rankTexture = new cc.Texture2D();\r\n        this.rankSpriteFrame = new cc.SpriteFrame();\r\n        this.resizeSharedCanvas(this.rankRender.node.width, this.rankRender.node.height);\r\n        //当前用户\r\n        this.username = cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nameUser;\r\n    }\r\n\r\n    // start() {\r\n    // }\r\n\r\n    update(dt) {\r\n        // this._timeCounter += dt\r\n        // if (this._timeCounter < this.rendInterval) return\r\n        // this._timeCounter = 0\r\n\r\n        this.updateRankList()\r\n    }\r\n\r\n    resizeSharedCanvas(width, height){\r\n        if(!window[\"wx\"]) return;\r\n        let sharedCanvas = window[\"wx\"].getOpenDataContext().canvas\r\n        sharedCanvas.width = width\r\n        sharedCanvas.height = height\r\n    }\r\n\r\n    changeRender(renderNode:cc.Node){\r\n        if(renderNode.name === \"sprHorRank\"){\r\n            this.horRankNode.active = true;\r\n            this.rankListNode.active = false;\r\n            this.rankBgNode.active = false\r\n        }else if(renderNode.name === \"sprRankList\"){\r\n            this.horRankNode.active = false;\r\n            this.rankListNode.active = true;\r\n            this.rankBgNode.active = true\r\n        }\r\n        this.rankRender.node.width = renderNode.width\r\n        this.rankRender.node.height = renderNode.height\r\n        this.rankRender.node.position = renderNode.position\r\n        this.resizeSharedCanvas(renderNode.width, renderNode.height)\r\n    }\r\n\r\n    updateRankList() {\r\n        if(!window[\"wx\"]) return;\r\n        if(!this.rankTexture) return;\r\n        let sharedCanvas = window[\"wx\"].getOpenDataContext().canvas\r\n        this.rankTexture.initWithElement(sharedCanvas);\r\n        this.rankTexture.handleLoadedTexture();\r\n        this.rankSpriteFrame.setTexture(this.rankTexture);\r\n        this.rankRender.spriteFrame = this.rankSpriteFrame;\r\n    }\r\n    onEnable() {\r\n        this.touchLayer.active = true\r\n        if (this.enableScroll) {\r\n            this.rankRender.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n        }\r\n\r\n        // this.postMessage(Consts.DomainAction.FetchFriendLevel)\r\n    }\r\n\r\n    onDisable() {\r\n        if (this.enableScroll) {\r\n            this.rankRender.node.off(cc.Node.EventType.TOUCH_MOVE)\r\n        }\r\n    }\r\n\r\n    onViewDetailRank(){\r\n        this.closeBackRank = 1;\r\n        //加载分数排行\r\n        this.loadLevelScoreRank();\r\n    }\r\n\r\n    onPageUp() {\r\n        cc.log(this)\r\n        this.postMessage(\"Paging\", -1)\r\n    }\r\n\r\n    onPageDown() {\r\n        this.postMessage(\"Paging\", 1)\r\n    }\r\n\r\n    onClose() {\r\n        // if(this.closeBackRank===1){\r\n        //     this.closeBackRank = 0;\r\n        //     this.loadHorRank(utils.curLevel)\r\n        //     return\r\n        // }\r\n        this.node.active = false;\r\n        cc.find(\"PebmanentNode/dark\").active = false;\r\n        cc.find(\"Canvas/OneGame\").getComponent(cc.Button).interactable = true;\r\n        cc.find(\"Canvas/PersobsGame\").getComponent(cc.Button).interactable = true;\r\n        cc.find(\"Canvas/Help\").getComponent(cc.Button).interactable = true;\r\n        cc.find(\"Canvas/Back\").getComponent(cc.Button).interactable = true;\r\n        cc.find(\"Canvas\").getComponent(\"TurnScene\").canClick = true;\r\n        cc.find(\"Canvas/menuBottom/RankList\").getComponent(cc.Button).interactable = true;\r\n        cc.find(\"Canvas/menuBottom/Friend\").getComponent(cc.Button).interactable = true;\r\n    }\r\n\r\n    onTouchMove(event) {\r\n        const deltaY = event.getDeltaY();\r\n        // console.log(\"rank touchmove:\", deltaY);\r\n        this.postMessage(\"Scrolling\", deltaY)\r\n    }\r\n\r\n    //获取关卡得分排行\r\n    /**\r\n     * @param  {游戏类型} level\r\n     * @param  {该游戏类型的最高分} score\r\n     */\r\n    loadLevelScoreRank(level,score){\r\n        console.log(\"level is \",level);\r\n        console.log(\"score is \",score);\r\n        // this.labelTitle.string = \"俄罗斯方块排行\"\r\n        this.node.active = true;\r\n        this.touchLayer.active = true;\r\n        this.changeRender(this.rankListNode)        \r\n        this.postMessage(Consts.DomainAction.FetchFriendScore,level,score);\r\n    }\r\n\r\n    //获取关卡进度排行\r\n    loadLevelOpenRank(){\r\n        this.labelTitle.string = \"关卡排行\"\r\n        this.node.active = true;\r\n        this.touchLayer.active = true\r\n        this.changeRender(this.rankListNode)        \r\n        this.postMessage(Consts.DomainAction.FetchFriendLevel)\r\n    }\r\n\r\n    //横向比较\r\n    // loadHorRank(level=1){\r\n    //     this.node.active = true;\r\n    //     this.touchLayer.active = false        \r\n    //     this.changeRender(this.horRankNode)\r\n    //     this.postMessage(Consts.DomainAction.HorConmpar, level, utils.getScore(level))\r\n    // }\r\n    \r\n\r\n    //向子域发送消息\r\n    postMessage(action, type=null, score=null) {\r\n        if(!window[\"wx\"]) return;\r\n        let openDataContext = window[\"wx\"].getOpenDataContext();\r\n        openDataContext.postMessage({\r\n            action: action,\r\n            data  : type,\r\n            score : score,\r\n        })\r\n    }\r\n\r\n    // //检查得分\r\n    // checkScore(key, callback){\r\n    //     if (!window.wx) return\r\n    //     wx.getUserCloudStorage({\r\n    //         keyList:[key],\r\n    //         success:res=>{\r\n    //             res.data.\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    //wx api\r\n    // 上传关卡分数\r\n    uploadScore(level, score) {\r\n        if(!window[\"wx\"]) return;\r\n        score = score.toString()\r\n        window[\"wx\"].setUserCloudStorage({\r\n            KVDataList: [\r\n                { key: Consts.OpenDataKeys.ScoreKey+level, value: score },\r\n            ],\r\n            success: (res) => {\r\n                console.log(\"uploadScore success:res=>\", res)\r\n            },\r\n            fail: (res) => {\r\n                console.log(\"uploadScore fail:res=>\", res)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 上传关卡开启进度\r\n    uploadLevelOpen(level){\r\n        if (!window.window[\"wx\"]) return\r\n        level = level.toString()\r\n        window[\"wx\"].setUserCloudStorage({\r\n            KVDataList: [\r\n                { key: Consts.OpenDataKeys.LevelKey, value: level },\r\n            ],\r\n            success: (res) => {\r\n                console.log(\"uploadScore success:res=>\", res)\r\n            },\r\n            fail: (res) => {\r\n                console.log(\"uploadScore fail:res=>\", res)\r\n            }\r\n        })\r\n    }\r\n\r\n    //删除微信数据\r\n    removeUserKey(key_or_keys) {\r\n        if (!window.window[\"wx\"]) return\r\n        if(typeof(key_or_keys)===\"string\"){\r\n            key_or_keys = [key_or_keys]\r\n        }\r\n        window[\"wx\"].removeUserCloudStorage({\r\n            keyList: key_or_keys,\r\n            success: (res) => {\r\n                console.log(\"uploadScore success:res=>\", res)\r\n            },\r\n            fail: (res) => {\r\n                console.log(\"uploadScore fail:res=>\", res)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 分享\r\n    /* args:{\r\n                title: string\r\n                imageUrl: string\r\n                query: string\r\n                success: func\r\n                fail: func\r\n            }\r\n    */\r\n    share(args) {\r\n        if (!window.window[\"wx\"]) return\r\n        if(!args) args={}\r\n        args.imageUrl = args.imageUrl || \"http://img.zcool.cn/community/01c2ac57beb18d0000012e7eaa6d19.jpg@1280w_1l_2o_100sh.jpg\"\r\n        window[\"wx\"].shareAppMessage({\r\n            title: \"今天的方块，你来了吗？\",\r\n            // imageUrl: \"res/raw-assets/res/shengming.25929.png\",\r\n            imageUrl: args.imageUrl,\r\n            query: \"key=testshare\",\r\n            success: (res) => {\r\n                console.log(\"success:\", res)\r\n                if(args.success){\r\n                    args.success(res)\r\n                }\r\n            },\r\n            fail: res => {\r\n                console.log(\"fail:\", res)\r\n                if(args.fail){\r\n                    args.fail(res)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    initRank() {\r\n    }\r\n\r\n    snapshotSync(){\r\n        if(!window['wx']) return\r\n        var canvas = cc.game.canvas;\r\n        var width  = cc.winSize.width;\r\n        var height  = cc.winSize.height;\r\n\r\n        return canvas['toTempFilePathSync']({\r\n            x: 0,\r\n            y: 0,\r\n            width: width*1.5,\r\n            height: height,\r\n            destWidth: width*1.5,\r\n            destHeight: height\r\n        })\r\n    }\r\n    tetrisRank (){\r\n        //俄罗斯方块的最高分是\r\n        let tetrisScore = cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").tetrisTopScore;\r\n        //俄罗斯方块排行,将最高分加载进来\r\n        this.loadLevelScoreRank(\"tetrisRankScore\",tetrisScore);\r\n        //抓取好友数据\r\n        console.log(\"获取俄罗斯方块的排名\");\r\n    }\r\n    figureRank(){\r\n        //画像方块的排行\r\n        let figureScore = cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").figureTopScore;\r\n        console.log(\"figureScore is \",figureScore);\r\n        this.loadLevelScoreRank(\"figureRankScore\",figureScore);\r\n        //将自己的最高分交给微信服务器托管\r\n        console.log(\"获取画像方块的排名\");\r\n    }\r\n    stoneRank(){\r\n        //宝石方块的排行\r\n        let stoneScore = cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").stoneTopScore;\r\n        this.loadLevelScoreRank(\"stoneRankScore\",stoneScore);\r\n        console.log(\"获取宝石方块的排名\");\r\n    }\r\n\r\n}\r\n"]}