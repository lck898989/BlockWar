{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Scripts\\Game1/assets\\Scripts\\Game1\\PersonsGame1Main.js"],"names":["cc","Class","extends","Component","properties","nodeCanvas","default","type","Node","prefabEnemy","Prefab","prefabEnemy1","username","Label","nodeEnemyParent","prefabUser","nodeUserParent","groundUser","groundEnemy","prefabL","prefabSquare","prefabZ","prefabLong","prefabT","next1Node","blockParent","nodeDownButton","nodeMove","boxParent","punishPrefab","overBackGround","clickAudio","url","AudioClip","loseAudio","removeAudio","pauseMenu","pauseRestart","pauseReturn","pauseGiveIn","darkNode","operationNode","pauseFunction","active","onLoad","self","on","bind","nLine","find","getComponent","SendLongMsg","nUserScore","string","nameUser","Global","SetBackground","nWidth","nSide","nServerWidth","groundChild","CreatBackGround","enemyGroundChild","arrayChangeNode","isDisppearEnemy","isRotateState","isMoveState","isDisppearState","girdSize","isOver","isPunish","isWin","sys","isNative","positionTouchX","isOutSlide","isOutDown","LoadUser","pictureUser","EventType","TOUCH_START","event","TOUCH_END","getLocationX","TOUCH_MOVE","TOUCH_CANCEL","isFirst","game1Main","stringColor","stringShape","stringRotate","nCreat","isSend","boxParent1","getChildren","lose","jsonData","tag1","score","state1","changeMapList1","removeMapList1","nMapRow","nMapCol","loading1","playAudio","toString","director","loadScene","resume","GetBlock","colorBlock","shapeBlock","rotateBlock","nColor","Math","floor","random0To1","nShape","nRotate","IsShape","initRivalMap","up","lr","back","row","col","gameNode","y","height","x","width","console","log","map","i","tempY","Number","toFixed","j","outArr","mapData","tempX","tempPrefab","setPrefabPosition","arguments","length","isFilled","innerNode","prefab","parentNode","createPrefab","setPosition","addChild","prefabNode","instantiate","TraversalNodeBox","nPositionY","nLength","nDestroy","getPositionY","destroy","RotateBlock","nodeBlock","isStationary","stringBoloekShape","TraverseRotate","GetTouchLine","worldPosition","nodePosition","getPositionX","nWidth1","nodeBoxArray","isHasBox","isOutWall","isOutGround","nRowY","nLineX","arrayX","arrayY","nX1","nY1","push","k","l","oldX","oldY","isZero","v2RotateX","v2RotateY","nX","nY","isBox","p","fCollisionTime","nRotateAngle","nMove","nMoveX","nMoveY","arrayMoveX","arrayMoveY","v2RotateY1","positionX","positionY","v2RotateX1","setBlockPosition","stringShape1","v2WorldY","v1WorldX","OnLoadBlock","nBlock","stringColor3","parent","TarvelFalse","getPosition","parseInt","nodeBlock1","setBlock1Position","nodePosition3","blockChild","OnloadColor","stringColor1","nodeBlock3","CopyBlock","prefabLBlock","ChangeColor","nodeBlockChild","loader","loadRes","SpriteFrame","err","txt","Sprite","spriteFrame","fDownTime","nTimeInteval","nodeBlockChild1","stringColor0","IsRotate","stringShape2","ChangeRotate","nodeBoxArray1","isStartDown","nAngle","IsColor","start","nXArray","nYArray","node","audioSource","audioEngine","play","isCollision","childBox","nDisappearAll","inner","Console","undefined","isGameOver","nMaxDisappea","nDissppearRow","ShowScore","nDissppearRow1","nodeScore","nLine1","nArrayRow","nArrayList","nOldY","nOldX","isHas","nDisappear","nTrue","a","BoxDown","nMin","dt","showAdvice","opacity","isDownState","JSON","stringify","GetBlockLine","MoveRight","MoveLeft","DownQuick","GetBoxNode","isChangeParent","DisappearBox","CC_WECHATGAME","shareFriends","nativeShare"],"mappings":"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","file":"PersonsGame1Main.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Game1","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        nodeCanvas: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        //生成敌人背景的预制体\r\n        prefabEnemy: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        //敌人预制体数组\r\n        prefabEnemy1:{\r\n            default:[],\r\n            type:[cc.Prefab]\r\n        },\r\n        \r\n        username : cc.Label,\r\n        //敌人父体节点\r\n        nodeEnemyParent: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        //生成自己背景的预制体\r\n        prefabUser: {\r\n            default: null,\r\n            type: cc.Prefab,\r\n        },\r\n        nodeUserParent: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        //获取自己背景框节点\r\n        groundUser: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        //获取敌人背景框节点\r\n        groundEnemy: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        //获取L形状方块预制体\r\n        prefabL: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        //获取正方形方块预制体\r\n        prefabSquare: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        //获取Z形状方块预制体\r\n        prefabZ: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        }, //获取长条形状方块预制体\r\n        prefabLong: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        //获取T形状方块预制体\r\n        prefabT: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        next1Node: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        blockParent: {\r\n            default: null,\r\n            type: cc.Node\r\n        }\r\n        ,\r\n        nodeDownButton: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        nodeMove: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        boxParent: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        punishPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        //结束场景\r\n        overBackGround:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        //点击事件音效\r\n        clickAudio : {\r\n            url : cc.AudioClip,\r\n            default: null,\r\n        },\r\n        //失败音效\r\n        loseAudio : {\r\n            url : cc.AudioClip,\r\n            default  : null,\r\n        },\r\n        //消除音效\r\n        removeAudio : {\r\n            url : cc.AudioClip,\r\n            default : null,\r\n        },\r\n        //暂停界面\r\n        pauseMenu : cc.Node,\r\n        pauseRestart : cc.Node,\r\n        pauseReturn : cc.Node,\r\n        pauseGiveIn : cc.Node,\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        darkNode      : cc.Node,\r\n        operationNode : cc.Node,\r\n    },\r\n    pauseFunction : function(){\r\n        //显示暂停菜单\r\n        this.pauseMenu.active = true;\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad() {\r\n        var self = this;\r\n        this.darkNode.on(\"touchstart\",function(){\r\n            this.darkNode.active = false;\r\n            this.operationNode.active = false;\r\n        }.bind(this));\r\n        this.operationNode.on(\"touchstart\",function(){\r\n            this.darkNode.active =false;\r\n            this.operationNode.active = false;\r\n        }.bind(this));\r\n        this.pauseMenu.active = false;\r\n        this.nLine = 0;\r\n        //发送给服务器消息要初始化地图\r\n        cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg({ \"tag1\": 10, \"type\": \"\", \"score\": cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nUserScore, \"nMapRow\": \"\", \"nMapCol\": \"\", \"loading1\": 1 });\r\n        // // Global.CreatBackGround(this.groundChild,12,6,this.groundPrefab,this.nodeUserParent,Global.nWidthPuYo);\r\n        //显示自己的名字\r\n        this.username.string = cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nameUser;\r\n        //初始化自己背景父节点的位置\r\n        Global.SetBackground(this.groundUser, this.nodeUserParent, Global.nWidth, Global.nSide);\r\n        //初始化敌人背景父节点的位置\r\n        Global.SetBackground(this.groundEnemy, this.nodeEnemyParent, Global.nServerWidth, Global.nSide);\r\n        //初始h背景子节点\r\n        this.groundChild = [];\r\n        //显示自己的游戏背景\r\n        Global.CreatBackGround(this.groundChild, 20, 10, this.prefabUser, this.nodeUserParent, Global.nWidth);\r\n        //初始化d敌人背景子节点\r\n        this.enemyGroundChild = [];\r\n        this.arrayChangeNode = [];\r\n        //判断敌人是否消行\r\n        this.isDisppearEnemy = false;\r\n        //判断是否旋转状态\r\n        this.isRotateState = false;\r\n        //判断是否左右移动状态\r\n        this.isMoveState = false;\r\n        //判断敌人是否消除\r\n        this.isDisppearState = false;\r\n        this.girdSize = 50;\r\n        this.isOver=false;\r\n        //判断是否惩罚\r\n        this.isPunish = false;\r\n        //判断玩家是否胜利\r\n        this.isWin=false;\r\n        if (cc.sys.isNative) {\r\n            var self = this;\r\n            //判断手指是否离开滑动节点\r\n            //获取出点的世界坐标\r\n            this.positionTouchX = 0;\r\n            this.isOutSlide = true;\r\n            //判断手指是否离开下落节点\r\n            this.isOutDown = true;\r\n                 //显示用户信息\r\n              cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").LoadUser(cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").pictureUser,cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nameUser,cc.find(\"UserName\"),cc.find(\"UserPicture\"));\r\n            //  //旋转触屏\r\n            //  this.nodeRotateButton.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n\r\n            //      self.rotateBlock();\r\n            //   }, this);\r\n            //下落触屏 \r\n            //当手指落在下落节点上时\r\n            this.nodeDownButton.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n                self.isOutDown = false;\r\n            }, this);\r\n            //当手指离开下落节点上时\r\n            this.nodeDownButton.on(cc.Node.EventType.TOUCH_END, function (event) {\r\n                self.isOutDown = true;\r\n            }, this);\r\n            //左右滑动触屏\r\n            //当手指落在滑动节点上时\r\n            this.nodeMove.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n                self.isOutSlide = false;\r\n                self.positionTouchX = event.getLocationX();\r\n\r\n            }, this);\r\n            //当手指在滑动节点上移动时\r\n            this.nodeMove.on(cc.Node.EventType.TOUCH_MOVE, function (event) {\r\n                self.isOutSlide = false;\r\n                self.positionTouchX = event.getLocationX();\r\n            }, this);\r\n            //当手指离开滑动节点时\r\n            this.nodeMove.on(cc.Node.EventType.TOUCH_END, function (event) {\r\n                self.isOutSlide = true;\r\n            }, this);\r\n        }\r\n        else {\r\n            //获取出点的世界坐标\r\n            this.positionTouchX = 0;\r\n            //判断手指是否离开滑动节点\r\n            this.isOutSlide = true;\r\n            //判断手指是否落在滑动节点\r\n            this.isOutDown = true;\r\n            //当手指落在滑动节点上时\r\n            this.nodeMove.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n               \r\n\r\n            }, this);\r\n            //当手指在滑动节点上移动时\r\n            this.nodeMove.on(cc.Node.EventType.TOUCH_MOVE, function (event) {\r\n                self.isOutSlide = false;\r\n                self.positionTouchX = event.getLocationX();\r\n            }, this);\r\n            //当手指离开滑动节点时\r\n            this.nodeMove.on(cc.Node.EventType.TOUCH_END, function (event) {\r\n                self.isOutSlide = false;\r\n                self.positionTouchX = event.getLocationX();\r\n            }, this);\r\n            this.nodeMove.on(cc.Node.EventType.TOUCH_CANCEL, function (event) {\r\n                self.isOutSlide = false;\r\n                self.positionTouchX = event.getLocationX();\r\n            }, this);\r\n            //当手指落在下落节点上时\r\n            this.nodeDownButton.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n                self.isOutDown = false;\r\n            }, this);\r\n            //当手指离开下落节点上时\r\n            this.nodeDownButton.on(cc.Node.EventType.TOUCH_END, function (event) {\r\n                self.isOutDown = true;\r\n            }, this);\r\n        }\r\n        //判断是否第一次生成俄罗斯方块\r\n        this.isFirst = false;\r\n        // //显示用户信息\r\n        // cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").LoadUser(cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").pictureUser,cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nameUser,cc.find(\"Canvas/UserName\"),cc.find(\"UserPicture\"),cc.find(\"UserPicture1\"));\r\n        Global.game1Main = this;\r\n        //  this.nRotateAngle1=0;\r\n        //  this.nRotateAngle2=0;\r\n        //初始化当前俄罗斯方块颜色\r\n        this.stringColor = \"\";\r\n        //初始化当前俄罗斯方块形状\r\n        this.stringShape = \"\";\r\n        //初始化当前俄罗斯方块角度\r\n        this.stringRotate = \"\";\r\n        // cc.log(this.nodeCanvas.getComponent(\"Game1Main\").stringShape);\r\n        //初始化旋转角度\r\n        //  this.nRotateAngle=0; \r\n        this.nCreat = 0;\r\n        //判断是否发送服务\r\n        this.isSend=false;\r\n        //  //随机生成俄罗斯方块\r\n        //  this.GetBlock(); \r\n        this.boxParent1 = this.boxParent.getChildren();\r\n        //初始化比赛结果\r\n        this.lose=false;\r\n        //  //显示敌人的游戏场景\r\n        //  Global.CreatBackGround( this.enemyGroundChild2,20,10,this.prefabEnemy,this.nodeEnemyParent,Global.nServerWidth);\r\n        //给服务器发送游戏 场景信息\r\n        //重新开始界面\r\n        this.pauseGiveIn.on(\"touchstart\",function(){\r\n            // this.pauseMenu.active = false;\r\n            self.pauseMenu.active = false;\r\n            // //向服务器发送投降消息\r\n            // self.gameBye();\r\n            var jsonData = {\r\n                tag1            : 5,\r\n                score           : \"\",\r\n                type            : \"1\",\r\n                state1          : \"\",\r\n                changeMapList1  : [],\r\n                removeMapList1  : 0,\r\n                nMapRow         : \"\",\r\n                nMapCol         : \"\",\r\n                loading1        : \"\",\r\n            }\r\n            cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg(jsonData);\r\n            //显示失败\r\n            this.playAudio(this.loseAudio);\r\n            //自己失败显示失败\r\n            cc.find(\"NodeOverLose\").active = true;\r\n            //显示分数\r\n            cc.find(\"NodeOverLose/Score\").getComponent(cc.Label).string = this.score.toString();\r\n            //回到多人选择界面\r\n            cc.director.loadScene(\"PersonsChoose\");\r\n        }.bind(this));\r\n        this.pauseRestart.on('touchstart',function(){\r\n            cc.director.resume();\r\n            self.pauseMenu.active = false;\r\n            //发送消息给服务器\r\n            var jsonData = {\r\n                tag1            : 5,\r\n                score           : \"\",\r\n                type            : \"1\",\r\n                state1          : \"\",\r\n                changeMapList1  : [],\r\n                removeMapList1  : 0,\r\n                nMapRow         : \"\",\r\n                nMapCol         : \"\",\r\n                loading1        : \"\",\r\n            }\r\n            cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg(jsonData);\r\n            //加载多人选择界面\r\n            cc.director.loadScene(\"PersonsChoose\");\r\n        }.bind(this));\r\n        //返回按钮\r\n        this.pauseReturn.on(\"touchstart\",function(){\r\n            cc.director.resume();\r\n            self.pauseMenu.active = false;\r\n            //发送消息给服务器\r\n            var jsonData = {\r\n                tag1            : 5,\r\n                score           : \"\",\r\n                type            : \"1\",\r\n                state1          : \"\",\r\n                changeMapList1  : [],\r\n                removeMapList1  : 0,\r\n                nMapRow         : \"\",\r\n                nMapCol         : \"\",\r\n                loading1        : \"\",\r\n            }\r\n            cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg(jsonData);\r\n            //加载多人选择界面\r\n            cc.director.loadScene(\"PersonsChoose\");\r\n        }.bind(this));\r\n    },\r\n    //随机生成俄罗斯方块\r\n    GetBlock: function () {\r\n        //声明颜色数组\r\n        this.colorBlock = [\"blue\", \"green\", \"red\"];\r\n        //声明形状数组\r\n        this.shapeBlock = [\"T\", \"L\", \"Long\", \"Z\", \"Square\"];\r\n        //声明角度数组\r\n        this.rotateBlock = [\"0\", \"180\"];\r\n        this.nColor = Math.floor(cc.random0To1() * 3);\r\n        this.nShape = Math.floor(cc.random0To1() * 5);\r\n        this.nRotate = Math.floor(cc.random0To1() * 2);\r\n        //初始化声称俄罗斯方块的个数\r\n        if (this.isFirst == false) {\r\n            //根据俄罗斯方块形状生成\r\n            this.IsShape(this.shapeBlock, this.nShape);\r\n            this.nRotate = Math.floor(cc.random0To1() * 2);\r\n            this.nColor = Math.floor(cc.random0To1() * 3);\r\n            this.nShape = Math.floor(cc.random0To1() * 5);\r\n            //根据俄罗斯方块形状生成\r\n            this.IsShape(this.shapeBlock, this.nShape);\r\n        }\r\n        else {\r\n            //根据俄罗斯方块形状生成\r\n            this.IsShape(this.shapeBlock, this.nShape);\r\n        }\r\n    },\r\n/**\r\n * modified by lck 2018/7/12\r\n * start\r\n */\r\n    //初始化敌人地图针对游戏2和游戏4\r\n    initRivalMap : function(up,lr,back,row,col){\r\n        //找到对手游戏\r\n        var gameNode = cc.find(\"EnemyBox\");\r\n        //初始化y坐标(从下往上生成网格)\r\n        var y = gameNode.height/2 - this.girdSize/2 - up;\r\n        //初始化x坐标\r\n        var x = -gameNode.width/2 + this.girdSize/2 + lr;\r\n        console.log(\"--->>>>x is \" + x);\r\n        console.log(\"--->>>>row is \" + row);\r\n        console.log(\"--->>>>col is \" + col);\r\n        this.enemyGroundChild = [];\r\n        this.map = [];\r\n        //12行6列的网格\r\n        for(let i = 0;i < row;i++){\r\n            //设置它的y坐标\r\n            var tempY = y - i * this.girdSize - 1;\r\n            tempY = Number(tempY.toFixed(2));\r\n            console.log(\"--->>>>tempY is \" + tempY);\r\n            this.enemyGroundChild[i] = [];\r\n            this.map[i] = [];\r\n            for(let j = 0; j < col;j++){\r\n                var outArr = this.enemyGroundChild[i];\r\n                var mapData = this.map[i];\r\n                var tempX = x + j * this.girdSize + 1;\r\n                tempX = Number(tempX.toFixed(2));\r\n                console.log(\"--->>>>tempX is \" + tempX);\r\n                //y坐标不变，x坐标要变\r\n                var tempPrefab = this.setPrefabPosition(back,tempX,tempY,gameNode);\r\n                if(arguments.length === 6){\r\n                    tempPrefab.getComponent(arguments[5]).isFilled = 0;\r\n                    // tempPrefab.isFilled = 0;\r\n                    // console.log(\"tempPrefab.isFilled is \" + tempPrefab.isFilled);\r\n                    tempPrefab.getComponent(arguments[5]).type = -1;\r\n                    tempPrefab.getComponent(arguments[5]).innerNode = null;\r\n                }else if(arguments.length === 5){\r\n                    // var node = new Shape(tempPrefab,-1);\r\n                    tempPrefab.getComponent(\"Back\").isFilled = 0;\r\n                    // tempPrefab.isFilled = 0;\r\n                    // console.log(\"tempPrefab.isFilled is \" + tempPrefab.isFilled);\r\n                    tempPrefab.getComponent(\"Back\").type = -1;\r\n                    tempPrefab.getComponent(\"Back\").innerNode = null;\r\n                }\r\n                // var shape = new Shape(tempPrefab,-1);\r\n                outArr[j]=tempPrefab;\r\n                mapData[j] = 0;\r\n            }\r\n        }\r\n        console.log(\"enemyGroundChild is \" +this.enemyGroundChild);\r\n    },\r\n     /**\r\n    @param prefab:将要生成预制节点的预制体\r\n    @param x     :将要生成预制节点的x坐标\r\n    @param y     :将要生成预制节点的y坐标\r\n    @param parentNode : 生成的预制节点的父节点\r\n     */\r\n    setPrefabPosition : function(prefab,x,y,parentNode){\r\n        var prefab = this.createPrefab(prefab);\r\n        prefab.setPosition(x,y);\r\n        parentNode.addChild(prefab);\r\n        return prefab;\r\n    },\r\n    //创建一个预制体节点\r\n    createPrefab : function(prefab){\r\n        var prefabNode = cc.instantiate(prefab);\r\n        return prefabNode;\r\n    },\r\n/**\r\n * modified by lck 2018/7/12\r\n * end\r\n */\r\n    //遍历全局字块数组并消除整行方块isBox都为true的节点\r\n    TraversalNodeBox: function (nPositionY) {\r\n        // var boxParent1=this.boxParent.getChildren();\r\n        var nLength = this.boxParent1.length;\r\n        //存储被销毁的俄罗斯方块数组的下标\r\n        var nDestroy = [];\r\n        cc.log(nPositionY + \"nPositionY\");\r\n        for (var j = 0; j <= nLength - 1; j++) {\r\n            cc.log(this.boxParent1[j].getPositionY());\r\n        }\r\n        //    cc.log(boxParent1[0].getPositionY());\r\n        //    cc.log(nPositionY);\r\n        for (var i = 0; i <= nLength - 1; i++) {\r\n            // var boxParent1=this.boxParent.getChildren();\r\n            if (this.boxParent1[i].getPositionY() == nPositionY) {\r\n                //销毁该俄罗斯方块自方块\r\n                this.boxParent1[i].destroy();\r\n            }\r\n        }\r\n    },\r\n    //俄罗斯方块旋转\r\n    RotateBlock: function () {\r\n        if (this.nodeBlock.getComponent(\"OperateBlock\").isStationary == false) {\r\n            this.playAudio(this.clickAudio);\r\n            if (this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape == \"Square\") {\r\n                return;\r\n            }\r\n            else {\r\n                this.TraverseRotate();\r\n            }\r\n        }\r\n    },\r\n    //返回触摸点对应的俄罗斯方块的列数\r\n    GetTouchLine: function (worldPosition) {\r\n        //将触摸点的横坐标转化为本地坐标\r\n        var nodePosition = worldPosition - (this.nodeMove.getPositionX() + this.nodeCanvas.getPositionX());\r\n        cc.log(nodePosition);\r\n        if (nodePosition > 0) {\r\n            var nWidth1 = Math.floor(nodePosition / (this.nodeMove.width / 20));\r\n            if (nWidth1 == 0 || nWidth1 == 1) {\r\n                this.nLine = 6;\r\n            }\r\n            else if (nWidth1 == 2 || nWidth1 == 3) {\r\n                this.nLine = 7;\r\n            }\r\n            else if (nWidth1 == 4 || nWidth1 == 5) {\r\n                this.nLine = 8;\r\n            }\r\n            else if (nWidth1 == 6 || nWidth1 == 7) {\r\n                this.nLine = 9;\r\n            }\r\n            else {\r\n                this.nLine = 10;\r\n            }\r\n            cc.log(this.nLine);\r\n            return this.nLine;\r\n        }\r\n        if (nodePosition < 0) {\r\n            var nWidth1 = Math.floor((-nodePosition) / (this.nodeMove.width / 20));\r\n            if (nWidth1 == 0 || nWidth1 == 1) {\r\n                this.nLine = 5;\r\n            }\r\n            else if (nWidth1 == 2 || nWidth1 == 3) {\r\n                this.nLine = 4;\r\n            }\r\n            else if (nWidth1 == 4 || nWidth1 == 5) {\r\n                this.nLine = 3;\r\n            }\r\n            else if (nWidth1 == 6 || nWidth1 == 7) {\r\n                this.nLine = 2;\r\n            }\r\n            else {\r\n                this.nLine = 1;\r\n            }\r\n            cc.log(this.nLine);\r\n            return this.nLine;\r\n        }\r\n    },\r\n    TraverseRotate: function () {\r\n        //获取此方块的数组\r\n        var nodeBoxArray = this.nodeBlock.getChildren();\r\n        //判断俄罗斯方块旋转之后是否含有方块\r\n        var isHasBox = false;\r\n        //判断俄罗斯方块旋转之后是否超过墙\r\n        var isOutWall = false;\r\n        //判断俄罗斯方块旋转之后是否超过背景的上方或下方、\r\n        var isOutGround = false;\r\n        //存储俄罗斯方块未旋转前的行列\r\n        var nRowY = [];\r\n        var nLineX = [];\r\n        //存入俄罗斯方块旋转后子元素的行和列\r\n        var arrayX = [];\r\n        var arrayY = [];\r\n        //将俄罗斯方块的行数从小到大排列\r\n        for (var j = 0; j <= 3; j++) {\r\n            var nX1 = (nodeBoxArray[j].getPositionX() + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n            var nY1 = (nodeBoxArray[j].getPositionY() + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n            nLineX.push(nX1);\r\n            nRowY.push(nY1);\r\n            if (j == 3) {\r\n                for (var k = 0; k <= 3; k++) {\r\n                    if (k <= 2) {\r\n                        for (var l = k + 1; l <= 3; l++) {\r\n                            if (nRowY[l] < nRowY[k]) {\r\n                                var oldX = nLineX[k];\r\n                                nLineX[k] = nLineX[l];\r\n                                nLineX[l] = oldX;\r\n                                var oldY = nRowY[k];\r\n                                nRowY[k] = nRowY[l];\r\n                                nRowY[l] = oldY;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape == \"Long\") {\r\n            if (nRowY[0] == 21) {\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            if (nRowY[0] >= 19) {\r\n                return;\r\n            }\r\n        }\r\n        this.arrayChangeNode = [];\r\n        for (var i = 0; i <= 3; i++) {\r\n            //判断旋转的字块是否为原点\r\n            var isZero = false;\r\n            //获取旋转后的坐标 \r\n            var v2RotateX = nodeBoxArray[i].getPositionY();\r\n            var v2RotateY = -nodeBoxArray[i].getPositionX();\r\n            //当旋转后的坐标与旋转前的坐标相同时\r\n            if (v2RotateX == nodeBoxArray[i].getPositionX() && v2RotateY == nodeBoxArray[i].getPositionY()) {\r\n                //将旋转前的方块置为false\r\n                var nX1 = (nodeBoxArray[i].getPositionX() + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n                var nY1 = (nodeBoxArray[i].getPositionY() + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n                nLineX.push(nX1);\r\n                nRowY.push(nY1);\r\n                this.arrayChangeNode.push({ \"row\": nY1 - 1, \"col\": nX1 - 1, \"color\": \"white\" });\r\n                // this.groundChild[nX1 - 1][nY1 - 1].getComponent(\"PrefabState\").isBox = false;\r\n                isZero = true;\r\n            }\r\n            else {\r\n                //将旋转前的方块置为false\r\n                var nX1 = (nodeBoxArray[i].getPositionX() + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n                var nY1 = (nodeBoxArray[i].getPositionY() + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n                nLineX.push(nX1);\r\n                nRowY.push(nY1);\r\n                this.arrayChangeNode.push({ \"row\": nY1 - 1, \"col\": nX1 - 1, \"color\": \"white\" });\r\n                // this.groundChild[nX1 - 1][nY1 - 1].getComponent(\"PrefabState\").isBox = false;\r\n            }\r\n            // //旋转坐标\r\n            // nodeBoxArray[i].setPosition(cc.p(nodeBoxArray[i].getPositionY(),-nodeBoxArray[i].getPositionX()));\r\n            //获取旋转后组成俄罗斯方块元素的行列\r\n            var nX = (v2RotateX + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n            var nY = (v2RotateY + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n            arrayX.push(nX);\r\n            arrayY.push(nY);\r\n            //当俄罗斯方块旋转后超过场景上方或下方时\r\n            if (nY > 20 || nY < 1) {\r\n                isOutGround = true;\r\n            }\r\n            //当超出墙壁时\r\n            if (nX > 10 || nX < 1) {\r\n                isOutWall = true;\r\n            }\r\n            else {\r\n                if (isOutGround == false) {\r\n                    if (this.groundChild[nX - 1][nY - 1].getComponent(\"PrefabState\").isBox && isZero == false) {\r\n                        isHasBox = true;\r\n                    }\r\n                }\r\n            }\r\n            if (i == 3) {\r\n                if (isHasBox == false && isOutWall == false && isOutGround == false) {\r\n                    //旋转俄罗斯方块\r\n                    for (var i = 0; i <= 3; i++) {\r\n                        //  var nX=(nodeBoxArray[i].getPositionX()+this.nodeBlock.getPositionX()-cc.find(\"GroundParent\").getPositionX())/65+1;\r\n                        //  var nY=(nodeBoxArray[i].getPositionY()+this.nodeBlock.getPositionY()-cc.find(\"GroundParent\").getPositionY())/65+1; \r\n                        //  this.groundChild[nX-1][nY-1].getComponent(\"PrefabState\").isBox=false;\r\n                        nodeBoxArray[i].setPosition(cc.p(nodeBoxArray[i].getPositionY(), -nodeBoxArray[i].getPositionX()));\r\n                        var nX1 = (nodeBoxArray[i].getPositionX() + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n                        var nY1 = (nodeBoxArray[i].getPositionY() + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n                        this.arrayChangeNode.push({ \"row\": nY1 - 1, \"col\": nX1 - 1, \"color\": this.nodeBlock.getComponent(\"OperateBlock\").stringColor });\r\n                        // this.groundChild[nX1 - 1][nY1 - 1].getComponent(\"PrefabState\").isBox = true;\r\n                        // this.groundChild[nX1 - 1][nY1 - 1].getComponent(\"PrefabState\").stringColor = this.nodeBlock.getComponent(\"OperateBlock\").stringColor;\r\n                    }\r\n                    this.isRotateState = true;\r\n                    //初始化 1s计时器\r\n                    this.nodeBlock.getComponent(\"OperateBlock\").fCollisionTime = 0;\r\n                    this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle += 90;\r\n                    if (this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle == 360) {\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                    }\r\n                }\r\n                if (isHasBox) {\r\n                    //将置为false的方块还原属性\r\n                    for (var i = 0; i <= 3; i++) {\r\n                        this.arrayChangeNode.push({ \"row\": nRowY[i] - 1, \"col\": nLineX[i] - 1, \"color\": this.nodeBlock.getComponent(\"OperateBlock\").stringColor });\r\n                        // this.groundChild[nLineX[i] - 1][nRowY[i] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                        // this.groundChild[nLineX[i] - 1][nRowY[i] - 1].getComponent(\"PrefabState\").stringColor = this.nodeBlock.getComponent(\"OperateBlock\").stringColor;\r\n                    }\r\n                }\r\n                //当旋转以后超过游戏场景上方或下方\r\n                if (isOutGround) {\r\n                    for (var j = 0; j <= 3; j++) {\r\n                        if (j == 3) {\r\n                            //将旋转后的行数从小到大排列\r\n                            for (var k = 0; k <= 3; k++) {\r\n                                if (k <= 2) {\r\n                                    for (var l = k + 1; l <= 3; l++) {\r\n                                        if (arrayY[l] < arrayY[k]) {\r\n                                            var oldX = arrayX[k];\r\n                                            arrayX[k] = arrayX[l];\r\n                                            arrayX[l] = oldX;\r\n\r\n                                            var oldY = arrayY[k];\r\n                                            arrayY[k] = arrayY[l];\r\n                                            arrayY[l] = oldY;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (k == 3) {\r\n\r\n                                    if (arrayY[3] > 20) {\r\n                                        //向下移动的单位个数\r\n                                        var nMove = arrayY[3] - 20;\r\n                                        //存取移动后的行 ，列\r\n                                        var nMoveX = [];\r\n                                        var nMoveY = [];\r\n                                        //存取移动过后的位置\r\n                                        var arrayMoveX = [];\r\n                                        var arrayMoveY = [];\r\n                                        //判断旋转移动后是否有方块\r\n                                        var isHasBox = false;\r\n                                        for (var l = 0; l <= 3; l++) {\r\n                                            //  //获取旋转前的行列\r\n                                            //  var nX0=(nodeBoxArray[i].getPositionX()+this.nodeBlock.getPositionX()-cc.find(\"GroundParent\").getPositionX())/65+1;\r\n                                            //  var nY0=(nodeBoxArray[i].getPositionY()+this.nodeBlock.getPositionY()-cc.find(\"GroundParent\").getPositionY())/65+1;\r\n                                            //  this.groundChild[nX0-1][nY0-1].getComponent(\"PrefabState\").isBox=false;\r\n                                            //获取旋转后的坐标 \r\n                                            var v2RotateX = nodeBoxArray[l].getPositionY();\r\n                                            var v2RotateY = -nodeBoxArray[l].getPositionX();\r\n                                            // //获取移动后的坐标\r\n                                            var v2RotateY1 = v2RotateY - Global.nWidth * nMove;\r\n                                            //获取移动后俄罗斯方块元素的行列\r\n                                            var nX1 = (v2RotateX + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n\r\n                                            var nY1 = (v2RotateY1 + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n\r\n                                            if (this.groundChild[nX1 - 1][nY1 - 1].getComponent(\"PrefabState\").isBox) {\r\n                                                isHasBox = true;\r\n                                            }\r\n                                            //获取本地坐标\r\n                                            var positionX = v2RotateX;\r\n                                            var positionY = v2RotateY1;\r\n                                            arrayMoveX.push(positionX);\r\n                                            arrayMoveY.push(positionY);\r\n                                            //  nodeBoxArray[i].setPosition(cc.p(positionX,positionY));\r\n                                            nMoveX.push(nX1);\r\n                                            nMoveY.push(nY1);\r\n                                            if (l == 3) {\r\n                                                if (isHasBox) {\r\n\r\n                                                    //还原未旋转移动前的box的true属性\r\n                                                    for (var j = 0; j <= 3; j++) {\r\n                                                        this.arrayChangeNode.push({ \"row\": nRowY[j] - 1, \"col\": nLineX[j] - 1, \"color\": this.nodeBlock.getComponent(\"OperateBlock\").stringColor });\r\n                                                        // this.groundChild[nLineX[j] - 1][nRowY[j] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                                        // this.groundChild[nLineX[j] - 1][nRowY[j] - 1].getComponent(\"PrefabState\").stringColor = this.nodeBlock.getComponent(\"OperateBlock\").stringColor;\r\n                                                    }\r\n                                                    return;\r\n                                                }\r\n                                                else {\r\n                                                    //初始化 1s计时器\r\n                                                    this.nodeBlock.getComponent(\"OperateBlock\").fCollisionTime = 0;\r\n                                                    this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle += 90;\r\n                                                    if (this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle == 360) {\r\n                                                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                                                    }\r\n                                                    for (var i = 0; i <= 3; i++) {\r\n                                                        //获取旋转后的坐标 \r\n                                                        var v2RotateX = nodeBoxArray[i].getPositionY();\r\n                                                        var v2RotateY = -nodeBoxArray[i].getPositionX();\r\n                                                        nodeBoxArray[i].setPosition(cc.p(v2RotateX, v2RotateY));\r\n                                                        if (i == 3) {\r\n                                                            this.nodeBlock.y -= Global.nWidth * nMove;\r\n                                                        }\r\n                                                        this.arrayChangeNode.push({ \"row\": nMoveY[i] - 1, \"col\": nMoveX[i] - 1, \"color\": this.nodeBlock.getComponent(\"OperateBlock\").stringColor });\r\n                                                        //将旋转移动后的方块置为true\r\n                                                        // this.groundChild[nMoveX[i] - 1][nMoveY[i] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                                        // this.groundChild[nMoveX[i] - 1][nMoveY[i] - 1].getComponent(\"PrefabState\").stringColor = this.nodeBlock.getComponent(\"OperateBlock\").stringColor;\r\n                                                        this.isRotateState = true;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    if (arrayY[0] < 1) {\r\n                                        //向上移动的单位个数\r\n                                        var nMove = 1 - arrayY[0];\r\n                                        //存取移动后的行 ，列\r\n                                        var nMoveX = [];\r\n                                        var nMoveY = [];\r\n                                        //存取移动过后的位置\r\n                                        var arrayMoveX = [];\r\n                                        var arrayMoveY = [];\r\n                                        //判断旋转移动后是否有方块\r\n                                        var isHasBox = false;\r\n                                        for (var l = 0; l <= 3; l++) {\r\n                                            //获取旋转后的坐标 \r\n                                            var v2RotateX = nodeBoxArray[l].getPositionY();\r\n                                            var v2RotateY = -nodeBoxArray[l].getPositionX();\r\n                                            //获取移动后的坐标\r\n                                            var v2RotateY1 = v2RotateY + Global.nWidth * nMove;\r\n                                            //获取移动后俄罗斯方块元素的行列\r\n                                            var nX1 = (v2RotateX + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n                                            var nY1 = (v2RotateY1 + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n\r\n                                            if (this.groundChild[nX1 - 1][nY1 - 1].getComponent(\"PrefabState\").isBox) {\r\n                                                isHasBox = true;\r\n                                            }\r\n                                            //获取本地坐标\r\n                                            var positionX = v2RotateX;\r\n                                            var positionY = v2RotateY1;\r\n                                            arrayMoveX.push(positionX);\r\n                                            arrayMoveY.push(positionY);\r\n                                            //  nodeBoxArray[i].setPosition(cc.p(positionX,positionY));\r\n                                            nMoveX.push(nX1);\r\n                                            nMoveY.push(nY1);\r\n                                            if (l == 3) {\r\n                                                if (isHasBox) {\r\n                                                    //还原未旋转移动前的box的true属性\r\n                                                    for (var j = 0; j <= 3; j++) {\r\n                                                        this.arrayChangeNode.push({ \"row\": nRowY[j] - 1, \"col\": nLineX[j] - 1, \"color\": this.nodeBlock.getComponent(\"OperateBlock\").stringColor });\r\n                                                        // this.groundChild[nLineX[j] - 1][nRowY[j] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                                        // this.groundChild[nLineX[j] - 1][nRowY[j] - 1].getComponent(\"PrefabState\").stringColor = this.nodeBlock.getComponent(\"OperateBlock\").stringColor;\r\n                                                    }\r\n                                                    return;\r\n                                                }\r\n                                                else {\r\n                                                    //初始化 1s计时器\r\n                                                    this.nodeBlock.getComponent(\"OperateBlock\").fCollisionTime = 0;\r\n                                                    this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle += 90;\r\n                                                    if (this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle == 360) {\r\n                                                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                                                    }\r\n                                                    for (var i = 0; i <= 3; i++) {\r\n                                                        //获取旋转后的坐标 \r\n                                                        var v2RotateX = nodeBoxArray[i].getPositionY();\r\n                                                        var v2RotateY = -nodeBoxArray[i].getPositionX();\r\n                                                        nodeBoxArray[i].setPosition(cc.p(v2RotateX, v2RotateY));\r\n                                                        if (i == 3) {\r\n                                                            this.nodeBlock.y += Global.nWidth * nMove;\r\n                                                        }\r\n                                                        this.arrayChangeNode.push({ \"row\": nMoveY[i] - 1, \"col\": nMoveX[i] - 1, \"color\": this.nodeBlock.getComponent(\"OperateBlock\").stringColor });\r\n                                                        //将旋转移动后的方块置为true\r\n                                                        // this.groundChild[nMoveX[i] - 1][nMoveY[i] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                                        // this.groundChild[nMoveX[i] - 1][nMoveY[i] - 1].getComponent(\"PrefabState\").stringColor = this.nodeBlock.getComponent(\"OperateBlock\").stringColor;\r\n                                                        this.isRotateState = true;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n                //当旋转以后超过墙时\r\n                if (isOutWall) {\r\n                    for (var j = 0; j <= 3; j++) {\r\n                        if (j == 3) {\r\n                            //将旋转后的列数从小到大排列\r\n                            for (var k = 0; k <= 3; k++) {\r\n                                if (k <= 2) {\r\n                                    for (var l = k + 1; l <= 3; l++) {\r\n                                        if (arrayX[l] < arrayX[k]) {\r\n                                            var oldX = arrayX[k];\r\n                                            arrayX[k] = arrayX[l];\r\n                                            arrayX[l] = oldX;\r\n                                            var oldY = arrayY[k];\r\n                                            arrayY[k] = arrayY[l];\r\n                                            arrayY[l] = oldY;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (k == 3) {\r\n                                    cc.log(arrayX);\r\n                                    if (arrayX[3] > 10) {\r\n                                        cc.log(\"777777777777777777777777\");\r\n                                        //向左移动的单位个数\r\n                                        var nMove = arrayX[3] - 10;\r\n                                        //存取移动后的行 ，列\r\n                                        var nMoveX = [];\r\n                                        var nMoveY = [];\r\n                                        //存取移动过后的位置\r\n                                        var arrayMoveX = [];\r\n                                        var arrayMoveY = [];\r\n                                        //判断旋转移动后是否有方块\r\n                                        var isHasBox = false;\r\n                                        for (var l = 0; l <= 3; l++) {\r\n                                            //  //获取旋转前的行列\r\n                                            //  var nX0=(nodeBoxArray[i].getPositionX()+this.nodeBlock.getPositionX()-cc.find(\"GroundParent\").getPositionX())/65+1;\r\n                                            //  var nY0=(nodeBoxArray[i].getPositionY()+this.nodeBlock.getPositionY()-cc.find(\"GroundParent\").getPositionY())/65+1;\r\n                                            //  this.groundChild[nX0-1][nY0-1].getComponent(\"PrefabState\").isBox=false;\r\n                                            //获取旋转后的坐标 \r\n                                            var v2RotateX = nodeBoxArray[l].getPositionY();\r\n                                            var v2RotateY = -nodeBoxArray[l].getPositionX();\r\n                                            //获取移动后的坐标\r\n                                            var v2RotateX1 = v2RotateX - Global.nWidth * nMove;\r\n                                            //获取移动后俄罗斯方块元素的行列\r\n                                            var nX1 = (v2RotateX1 + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n\r\n                                            var nY1 = (v2RotateY + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n                                            if (this.groundChild[nX1 - 1][nY1 - 1].getComponent(\"PrefabState\").isBox) {\r\n                                                cc.log(\"666666666666\");\r\n                                                isHasBox = true;\r\n                                            }\r\n                                            //获取本地坐标\r\n                                            var positionX = v2RotateX1;\r\n                                            var positionY = v2RotateY;\r\n                                            arrayMoveX.push(positionX);\r\n                                            arrayMoveY.push(positionY);\r\n                                            //  nodeBoxArray[i].setPosition(cc.p(positionX,positionY));\r\n                                            nMoveX.push(nX1);\r\n                                            nMoveY.push(nY1);\r\n                                            if (l == 3) {\r\n                                                if (isHasBox) {\r\n                                                    //还原未旋转移动前的box的true属性\r\n                                                    for (var j = 0; j <= 3; j++) {\r\n                                                        this.arrayChangeNode.push({ \"row\": nRowY[j] - 1, \"col\": nLineX[j] - 1, \"color\": this.nodeBlock.getComponent(\"OperateBlock\").stringColor });\r\n                                                        // this.groundChild[nLineX[j] - 1][nRowY[j] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                                        // this.groundChild[nLineX[j] - 1][nRowY[j] - 1].getComponent(\"PrefabState\").stringColor = this.nodeBlock.getComponent(\"OperateBlock\").stringColor;\r\n                                                    }\r\n                                                    return;\r\n                                                }\r\n                                                else {\r\n                                                    cc.log(\"55555555555\");\r\n                                                    //初始化 1s计时器\r\n                                                    this.nodeBlock.getComponent(\"OperateBlock\").fCollisionTime = 0;\r\n                                                    this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle += 90;\r\n                                                    if (this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle == 360) {\r\n                                                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                                                    }\r\n                                                    for (var i = 0; i <= 3; i++) {\r\n                                                        //获取旋转后的坐标 \r\n                                                        var v2RotateX = nodeBoxArray[i].getPositionY();\r\n                                                        var v2RotateY = -nodeBoxArray[i].getPositionX();\r\n                                                        nodeBoxArray[i].setPosition(cc.p(v2RotateX, v2RotateY));\r\n                                                        if (i == 3) {\r\n                                                            this.nodeBlock.x -= Global.nWidth * nMove;\r\n                                                        }\r\n                                                        this.arrayChangeNode.push({ \"row\": nMoveY[i] - 1, \"col\": nMoveX[i] - 1, \"color\": this.nodeBlock.getComponent(\"OperateBlock\").stringColor });\r\n                                                        //将旋转移动后的方块置为true\r\n                                                        // this.groundChild[nMoveX[i] - 1][nMoveY[i] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                                        // this.groundChild[nMoveX[i] - 1][nMoveY[i] - 1].getComponent(\"PrefabState\").stringColor = this.nodeBlock.getComponent(\"OperateBlock\").stringColor;\r\n                                                        this.isRotateState = true;\r\n                                                    }\r\n\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    if (arrayX[0] < 1) {\r\n                                        //向右移动的单位个数\r\n                                        var nMove = 1 - arrayX[0];\r\n                                        //存取移动后的行 ，列\r\n                                        var nMoveX = [];\r\n                                        var nMoveY = [];\r\n                                        //存取移动过后的位置\r\n                                        var arrayMoveX = [];\r\n                                        var arrayMoveY = [];\r\n                                        //判断旋转移动后是否有方块\r\n                                        var isHasBox = false;\r\n                                        for (var l = 0; l <= 3; l++) {\r\n                                            //获取旋转后的坐标 \r\n                                            var v2RotateX = nodeBoxArray[l].getPositionY();\r\n                                            var v2RotateY = -nodeBoxArray[l].getPositionX();\r\n                                            //获取移动后的坐标\r\n                                            var v2RotateX1 = v2RotateX + Global.nWidth * nMove;\r\n\r\n                                            //获取移动后俄罗斯方块元素的行列\r\n                                            var nX1 = (v2RotateX1 + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n\r\n                                            var nY1 = (v2RotateY + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n                                            if (this.groundChild[nX1 - 1][nY1 - 1].getComponent(\"PrefabState\").isBox) {\r\n                                                isHasBox = true;\r\n                                            }\r\n                                            //获取本地坐标\r\n                                            var positionX = v2RotateX1;\r\n                                            var positionY = v2RotateY;\r\n                                            arrayMoveX.push(positionX);\r\n                                            arrayMoveY.push(positionY);\r\n                                            //  nodeBoxArray[i].setPosition(cc.p(positionX,positionY));\r\n                                            nMoveX.push(nX1);\r\n                                            nMoveY.push(nY1);\r\n                                            if (l == 3) {\r\n                                                if (isHasBox) {\r\n                                                    //还原未旋转移动前的box的true属性\r\n                                                    for (var j = 0; j <= 3; j++) {\r\n                                                        this.arrayChangeNode.push({ \"row\": nRowY[j] - 1, \"col\": nLineX[j] - 1, \"color\": this.nodeBlock.getComponent(\"OperateBlock\").stringColor });\r\n                                                        // this.groundChild[nLineX[j] - 1][nRowY[j] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                                        // this.groundChild[nLineX[j] - 1][nRowY[j] - 1].getComponent(\"PrefabState\").stringColor = this.nodeBlock.getComponent(\"OperateBlock\").stringColor;\r\n                                                    }\r\n                                                    return;\r\n                                                }\r\n                                                else {\r\n                                                    //初始化 1s计时器\r\n                                                    this.nodeBlock.getComponent(\"OperateBlock\").fCollisionTime = 0;\r\n                                                    this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle += 90;\r\n                                                    if (this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle == 360) {\r\n                                                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                                                    }\r\n                                                    for (var i = 0; i <= 3; i++) {\r\n                                                        //获取旋转后的坐标 \r\n                                                        var v2RotateX = nodeBoxArray[i].getPositionY();\r\n                                                        var v2RotateY = -nodeBoxArray[i].getPositionX();\r\n                                                        nodeBoxArray[i].setPosition(cc.p(v2RotateX, v2RotateY));\r\n                                                        if (i == 3) {\r\n                                                            this.nodeBlock.x += Global.nWidth * nMove;\r\n                                                        }\r\n                                                        this.arrayChangeNode.push({ \"row\": nMoveY[i] - 1, \"col\": nMoveX[i] - 1, \"color\": this.nodeBlock.getComponent(\"OperateBlock\").stringColor });\r\n                                                        // //将旋转移动后的方块置为true\r\n                                                        // this.groundChild[nMoveX[i] - 1][nMoveY[i] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                                        // this.groundChild[nMoveX[i] - 1][nMoveY[i] - 1].getComponent(\"PrefabState\").stringColor = this.nodeBlock.getComponent(\"OperateBlock\").stringColor;\r\n                                                        this.isRotateState = true;\r\n                                                    }\r\n\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //根据俄罗斯方块类型设置位置\r\n    setBlockPosition: function (stringShape1, stringRotate) {\r\n        switch (stringShape1) {\r\n            case \"Square\":\r\n                //获取方块的世界坐标\r\n                var v2WorldY = this.nodeUserParent.getPositionY() + 20 * Global.nWidth + Global.nWidth / 2;\r\n                //    var nRandom=Global.nWidth*3+Math.floor(cc.random0To1()*6)*Global.nWidth;\r\n                //    var v1WorldX=(nRandom+nRandom+Global.nWidth)/2;\r\n                var v1WorldX = this.nodeUserParent.getPositionX() + Global.nWidth / 2 + 4 * Global.nWidth;\r\n                cc.log(v1WorldX);\r\n                cc.log(v2WorldY);\r\n                return cc.p(v1WorldX, v2WorldY);\r\n                break;\r\n            case \"T\":\r\n                switch (stringRotate) {\r\n                    case \"0\":\r\n                        //获取方块的世界坐标              \r\n                        var v2WorldY = this.nodeUserParent.getPositionY() + 21 * Global.nWidth;\r\n                        var v1WorldX = this.nodeUserParent.getPositionX() + 5 * Global.nWidth;\r\n                        cc.log(v1WorldX);\r\n                        cc.log(v2WorldY);\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                    case \"180\":\r\n                        //获取方块的世界坐标    \r\n                        var v2WorldY = this.nodeUserParent.getPositionY() + 20 * Global.nWidth;\r\n                        var v1WorldX = this.nodeUserParent.getPositionX() + 5 * Global.nWidth;\r\n                        cc.log(v1WorldX);\r\n                        cc.log(v2WorldY);\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                }\r\n                break;\r\n            case \"L\":\r\n                switch (stringRotate) {\r\n                    case \"0\":\r\n                        //获取方块的世界坐标\r\n                        var v2WorldY = this.nodeUserParent.getPositionY() + 20 * Global.nWidth;\r\n                        var v1WorldX = this.nodeUserParent.getPositionX() + 4 * Global.nWidth;\r\n                        cc.log(v1WorldX);\r\n                        cc.log(v2WorldY);\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                    case \"180\":\r\n                        //获取方块的世界坐标    \r\n                        var v2WorldY = this.nodeUserParent.getPositionY() + 21 * Global.nWidth;\r\n                        var v1WorldX = this.nodeUserParent.getPositionX() + 6 * Global.nWidth;\r\n                        cc.log(v1WorldX);\r\n                        cc.log(v2WorldY);\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                }\r\n                break;\r\n            case \"Long\":\r\n                switch (stringRotate) {\r\n                    case \"0\":\r\n                        var v2WorldY = this.nodeUserParent.getPositionY() + 20 * Global.nWidth;\r\n                        var v1WorldX = this.nodeUserParent.getPositionX() + 4 * Global.nWidth;\r\n                        cc.log(v1WorldX);\r\n                        cc.log(v2WorldY);\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                    case \"180\":\r\n                        var v2WorldY = this.nodeUserParent.getPositionY() + 20 * Global.nWidth;\r\n                        var v1WorldX = this.nodeUserParent.getPositionX() + 5 * Global.nWidth;\r\n                        cc.log(v1WorldX);\r\n                        cc.log(v2WorldY);\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                }\r\n\r\n                break;\r\n            case \"Z\":\r\n                switch (stringRotate) {\r\n                    case \"0\":\r\n                        //获取方块的世界坐标\r\n                        var v2WorldY = this.nodeUserParent.getPositionY() + 21 * Global.nWidth;\r\n                        var v1WorldX = this.nodeUserParent.getPositionX() + 4 * Global.nWidth;\r\n                        cc.log(v1WorldX);\r\n                        cc.log(v2WorldY);\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                    case \"180\":\r\n                        //获取方块的世界坐标    \r\n                        var v2WorldY = this.nodeUserParent.getPositionY() + 20 * Global.nWidth;\r\n                        var v1WorldX = this.nodeUserParent.getPositionX() + 4 * Global.nWidth;\r\n                        cc.log(v1WorldX);\r\n                        cc.log(v2WorldY);\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n    },\r\n    //当俄罗斯方块落下后初始化信息\r\n    OnLoadBlock: function (stringShape, nBlock, stringRotate, stringColor3) {\r\n        switch (stringShape) {\r\n            //  this.shapeBlock=[\"T\",\"L\",\"Long\",\"Z\",\"Square\"];\r\n            case \"Long\":\r\n                switch (nBlock) {\r\n                    case 0:\r\n                        this.nodeBlock.destroy();\r\n                        //生成俄罗斯方块\r\n                        this.nodeBlock = cc.instantiate(this.prefabLong);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock.parent = this.blockParent;\r\n                        this.TarvelFalse();\r\n                        //随机方块位置\r\n                        this.nodeBlock.setPosition(this.setBlockPosition(\"Long\", stringRotate));\r\n                        cc.log(this.nodeBlock.getPosition());\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        // this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n                        break;\r\n                    case 1:\r\n\r\n                        this.nodeBlock1.destroy();\r\n                        this.nodeBlock1 = cc.instantiate(this.prefabLong);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock1.parent = this.blockParent;\r\n                        //随机方块位置\r\n                        this.nodeBlock1.setPosition(this.setBlock1Position(\"Long\", this.next1Node, stringRotate));\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        break;\r\n                }\r\n                break;\r\n            case \"Z\":\r\n                switch (nBlock) {\r\n                    case 0:\r\n                        this.nodeBlock.destroy();\r\n                        //生成俄罗斯方块\r\n                        this.nodeBlock = cc.instantiate(this.prefabZ);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock.parent = this.blockParent;\r\n                        this.TarvelFalse();\r\n                        //随机方块位置\r\n                        this.nodeBlock.setPosition(this.setBlockPosition(\"Z\", stringRotate));\r\n                        cc.log(this.nodeBlock.getPosition());\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        // this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n                        break;\r\n                    case 1:\r\n                        this.nodeBlock1.destroy();\r\n                        this.nodeBlock1 = cc.instantiate(this.prefabZ);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock1.parent = this.blockParent;\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        //随机方块位置\r\n                        this.nodeBlock1.setPosition(this.setBlock1Position(\"Z\", this.next1Node, stringRotate));\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        break;\r\n\r\n                }\r\n                break;\r\n            case \"Square\":\r\n                switch (nBlock) {\r\n                    case 0:\r\n                        this.nodeBlock.destroy();\r\n                        //生成俄罗斯方块\r\n                        this.nodeBlock = cc.instantiate(this.prefabSquare);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock.parent = this.blockParent;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.TarvelFalse();\r\n                        //随机方块位置\r\n                        this.nodeBlock.setPosition(this.setBlockPosition(\"Square\", stringRotate));\r\n                        cc.log(this.nodeBlock.getPosition());\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                        // this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n                        break;\r\n                    case 1:\r\n                        this.nodeBlock1.destroy();\r\n                        this.nodeBlock1 = cc.instantiate(this.prefabSquare);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock1.parent = this.blockParent;\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock1.setPosition(this.setBlock1Position(\"Square\", this.next1Node, stringRotate));\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        break;\r\n                }\r\n                break;\r\n            case \"T\":\r\n                switch (nBlock) {\r\n                    case 0:\r\n                        this.nodeBlock.destroy();\r\n                        //生成俄罗斯方块\r\n                        this.nodeBlock = cc.instantiate(this.prefabT);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock.parent = this.blockParent;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.TarvelFalse();\r\n                        //随机方块位置\r\n                        this.nodeBlock.setPosition(this.setBlockPosition(\"T\", stringRotate));\r\n                        cc.log(this.nodeBlock.getPosition());\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        // this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n                        break;\r\n                    case 1:\r\n                        this.nodeBlock1.destroy();\r\n                        this.nodeBlock1 = cc.instantiate(this.prefabT);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock1.parent = this.blockParent;\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock1.setPosition(this.setBlock1Position(\"T\", this.next1Node, stringRotate));\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        break;\r\n                }\r\n                break;\r\n            case \"L\":\r\n                switch (nBlock) {\r\n                    case 0:\r\n                        this.nodeBlock.destroy();\r\n                        //生成俄罗斯方块\r\n                        this.nodeBlock = cc.instantiate(this.prefabL);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock.parent = this.blockParent;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.TarvelFalse();\r\n                        //随机方块位置\r\n                        this.nodeBlock.setPosition(this.setBlockPosition(\"L\", stringRotate));\r\n                        cc.log(this.nodeBlock.getPosition());\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        // this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n                        break;\r\n                    case 1:\r\n                        this.nodeBlock1.destroy();\r\n                        this.nodeBlock1 = cc.instantiate(this.prefabL);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock1.parent = this.blockParent;\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock1.setPosition(this.setBlock1Position(\"L\", this.next1Node, stringRotate));\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n\r\n    },\r\n    //根据第二个俄罗斯方块的类型设置位置\r\n    setBlock1Position: function (stringShape1, nodePosition3, stringRotate) {\r\n        switch (stringShape1) {\r\n            case \"Square\":\r\n                //获取方块的世界坐标\r\n                var v2WorldY = nodePosition3.getPositionY();\r\n                var v1WorldX = nodePosition3.getPositionX();\r\n                return cc.p(v1WorldX, v2WorldY);\r\n                break;\r\n            case \"T\":\r\n                switch (stringRotate) {\r\n                    case \"0\":\r\n                        //获取方块的世界坐标\r\n                        var v2WorldY = nodePosition3.getPositionY();\r\n                        var v1WorldX = nodePosition3.getPositionX();\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                    case \"180\":\r\n                        //获取方块的世界坐标\r\n                        var v2WorldY = nodePosition3.getPositionY();\r\n                        var v1WorldX = nodePosition3.getPositionX();\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                }\r\n                break;\r\n            case \"L\":\r\n                switch (stringRotate) {\r\n                    case \"0\":\r\n\r\n                        //获取方块的世界坐标\r\n                        var v2WorldY = nodePosition3.getPositionY();\r\n                        var v1WorldX = nodePosition3.getPositionX() - Global.nWidth;\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                    case \"180\":\r\n\r\n                        //获取方块的世界坐标    \r\n                        var v2WorldY = nodePosition3.getPositionY();\r\n                        var v1WorldX = nodePosition3.getPositionX() + Global.nWidth;\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                }\r\n                break;\r\n            case \"Long\":\r\n                switch (stringRotate) {\r\n                    case \"0\":\r\n                        //获取方块的世界坐标\r\n                        var v2WorldY = nodePosition3.getPositionY();\r\n                        var v1WorldX = nodePosition3.getPositionX() - Global.nWidth;\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                    case \"180\":\r\n                        //获取方块的世界坐标    \r\n                        var v2WorldY = nodePosition3.getPositionY();\r\n                        var v1WorldX = nodePosition3.getPositionX();\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                }\r\n                return cc.p(v1WorldX, v2WorldY);\r\n                break;\r\n            case \"Z\":\r\n                switch (stringRotate) {\r\n                    case \"0\":\r\n\r\n                        //获取方块的世界坐标\r\n                        var v2WorldY = nodePosition3.getPositionY();\r\n                        var v1WorldX = nodePosition3.getPositionX() - Global.nWidth;\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                    case \"180\":\r\n\r\n                        //获取方块的世界坐标    \r\n                        var v2WorldY = nodePosition3.getPositionY();\r\n                        var v1WorldX = nodePosition3.getPositionX();\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n    },\r\n    //便遍历俄罗斯方块火苏组，并使它们生成时为隐藏\r\n    TarvelFalse: function () {\r\n        var blockChild = this.nodeBlock.getChildren();\r\n        for (var i = 0; i <= blockChild.length - 1; i++) {\r\n            blockChild[i].active = false;\r\n        }\r\n    },\r\n    //初始化每个俄罗斯方块的颜色\r\n    OnloadColor: function (stringColor1, nodeBlock3) {\r\n        switch (stringColor1) {\r\n            case \"1\":\r\n                nodeBlock3.getComponent(\"OperateBlock\").stringColor = \"green\";\r\n                cc.log(\"1111111111111111111111\" + nodeBlock3.getComponent(\"OperateBlock\").stringColor);\r\n                break;\r\n            case \"2\":\r\n                nodeBlock3.getComponent(\"OperateBlock\").stringColor = \"blue\";\r\n                cc.log(\"22222222222222222222\" + nodeBlock3.getComponent(\"OperateBlock\").stringColor);\r\n                break;\r\n            case \"3\":\r\n                nodeBlock3.getComponent(\"OperateBlock\").stringColor = \"red\";\r\n                cc.log(\"3333333333333333333333\" + nodeBlock3.getComponent(\"OperateBlock\").stringColor);\r\n                break;\r\n        }\r\n    },\r\n    //生成方块\r\n    CopyBlock: function (prefabLBlock, stringShape1) {\r\n        cc.log(\"bbbbbbbbbbbbbbbbbbbbbbbbbbb\");\r\n        if (this.isFirst == false) {\r\n            switch (this.nCreat) {\r\n                case 0:\r\n                    //生成俄罗斯方块\r\n                    this.nodeBlock = cc.instantiate(prefabLBlock);\r\n                    this.TarvelFalse();\r\n                    //获取此时方块的形状\r\n                    this.nodeBlock.parent = this.blockParent;\r\n                    //随机方块位置\r\n                    this.nodeBlock.setPosition(this.setBlockPosition(this.shapeBlock[this.nShape], this.rotateBlock[this.nRotate]));\r\n                    cc.log(this.nodeBlock.getPosition());\r\n                    this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape = stringShape1;\r\n                    // this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n                    break;\r\n                case 1:\r\n                    //生成俄罗斯方块\r\n                    this.nodeBlock1 = cc.instantiate(prefabLBlock);\r\n                    //获取此时方块的形状\r\n                    this.nodeBlock1.parent = this.blockParent;\r\n                    cc.log(\"bbbbbbbbbbbbbbbbbbbbbbbbbbb\");\r\n                    this.nodeBlock1.setPosition(this.setBlock1Position(this.shapeBlock[this.nShape], this.next1Node, this.rotateBlock[this.nRotate]));\r\n                    this.nodeBlock1.getComponent(\"OperateBlock\").stringBoloekShape = stringShape1;\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            this.OnLoadBlock(this.nodeBlock1.getComponent(\"OperateBlock\").stringBoloekShape, 0, this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle.toString(), this.nodeBlock1.getComponent(\"OperateBlock\").stringColor);\r\n            this.OnLoadBlock(stringShape1, 1, this.rotateBlock[this.nRotate], this.colorBlock[this.nColor]);\r\n        }\r\n    },\r\n    //改变方块颜色\r\n    ChangeColor: function (stringColor1) {\r\n        if (this.isFirst == false) {\r\n            switch (this.nCreat) {\r\n                case 0:\r\n                    var nodeBlockChild = this.nodeBlock.getChildren();\r\n                    var self = this;\r\n                    cc.loader.loadRes(\"picture/\" + stringColor1, cc.SpriteFrame, function (err, txt) {\r\n                        for (var i = 0; i <= 3; i++) {\r\n                            nodeBlockChild[i].getComponent(cc.Sprite).spriteFrame = txt;\r\n                            if (i == 3) {\r\n\r\n                                //打开下落开关\r\n                                self.nodeBlock.getComponent(\"OperateBlock\").fDownTime = Global.nTimeInteval;\r\n                            }\r\n                        }\r\n                    });\r\n                    self.OnloadColor(stringColor1, self.nodeBlock);\r\n                    break;\r\n                case 1:\r\n                    var nodeBlockChild1 = this.nodeBlock1.getChildren();\r\n                    var self = this;\r\n                    cc.loader.loadRes(\"picture/\" + stringColor1, cc.SpriteFrame, function (err, txt) {\r\n                        for (var i = 0; i <= 3; i++) {\r\n                            nodeBlockChild1[i].getComponent(cc.Sprite).spriteFrame = txt;\r\n                        }\r\n                    });\r\n                    self.OnloadColor(stringColor1, self.nodeBlock1);\r\n                    break;\r\n\r\n            }\r\n        }\r\n        else {\r\n            var nodeBlockChild = this.nodeBlock.getChildren();\r\n            // var self=this;\r\n            var stringColor0 = \"\";\r\n            switch (this.nodeBlock.getComponent(\"OperateBlock\").stringColor) {\r\n                case \"red\":\r\n                    stringColor0 = \"3\";\r\n                    break;\r\n                case \"blue\":\r\n                    stringColor0 = \"2\";\r\n                    break;\r\n                case \"green\":\r\n                    stringColor0 = \"1\";\r\n                    break;\r\n            }\r\n            cc.loader.loadRes(\"picture/\" + stringColor0, cc.SpriteFrame, function (err, txt) {\r\n                for (var i = 0; i <= 3; i++) {\r\n                    nodeBlockChild[i].getComponent(cc.Sprite).spriteFrame = txt;\r\n                }\r\n            });\r\n            var nodeBlockChild1 = this.nodeBlock1.getChildren();\r\n            // var stringColor2 = \"\";\r\n            // // cc.log(this.nodeBlock2.getComponent(\"OperateBlock\").stringColor);\r\n            // switch (this.nodeBlock1.getComponent(\"OperateBlock\").stringColor) {\r\n            //     case \"red\":\r\n            //         stringColor2 = \"3\";\r\n            //         break;\r\n            //     case \"blue\":\r\n            //         stringColor2 = \"2\";\r\n            //         break;\r\n            //     case \"green\":\r\n            //         stringColor2 = \"1\";\r\n            //         break;\r\n            // }\r\n            // cc.log(stringColor2);\r\n            for (var i = 0; i <= nodeBlockChild1.length - 1; i++) {\r\n                nodeBlockChild1[i].active = false;\r\n            }\r\n            cc.loader.loadRes(\"picture/\" + stringColor1, cc.SpriteFrame, function (err, txt) {\r\n                for (var i = 0; i <= 3; i++) {\r\n                    nodeBlockChild1[i].getComponent(cc.Sprite).spriteFrame = txt;\r\n                    if (i == 3) {\r\n                        for (var j = 0; j <= nodeBlockChild1.length - 1; j++){\r\n                            nodeBlockChild1[j].active = true;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        // var self = this;\r\n        // var promise=new Promise(function(resolve,reject){\r\n        //     cc.loader.loadRes(\"picture/\"+stringColor1, cc.SpriteFrame, callback);\r\n        // })\r\n        // function callback(err, txt) {\r\n        //     if(err){\r\n        //         resolve();\r\n        //     }\r\n        //     for(var i=0;i<=3;i++)\r\n        //     {\r\n        //         nodeBlockChild[i].getComponent(cc.Sprite).spriteFrame =txt;\r\n        //         if(i==3)\r\n        //         {\r\n        //              //打开下落开关\r\n        //                this.nodeBlock.getComponent(\"OperateBlock\").fDownTime=Global.nTimeInteval;\r\n        //         }\r\n        //     }\r\n        // }\r\n    },\r\n    //判断方块角度\r\n    IsRotate: function (stringRotate, nRotate, stringShape2) {\r\n        if (stringShape2 != \"Square\") {\r\n            switch (stringRotate[nRotate]) {\r\n                case \"0\":\r\n                    this.ChangeRotate(0);\r\n                    break;\r\n                case \"180\":\r\n                    this.ChangeRotate(180);\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            switch (this.nCreat) {\r\n                case 0:\r\n                    this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                    break;\r\n                case 1:\r\n                    this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                    break;\r\n            }\r\n            if (this.isFirst) {\r\n                var nodeBoxArray = this.nodeBlock.getChildren();\r\n                cc.log(\"ppppppppppppppppppppppppppppppppppppppp\"+this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle);\r\n                if (this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle == 180) {\r\n                    cc.log(\"qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\"+this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle);\r\n                    for (var i = 0; i <= 3; i++) {\r\n                        nodeBoxArray[i].setPosition(cc.p(nodeBoxArray[i].getPositionY(), -nodeBoxArray[i].getPositionX()));\r\n                        if (i == 3) {\r\n                            for (var j = 0; j <= 3; j++) {\r\n                                nodeBoxArray[j].setPosition(cc.p(nodeBoxArray[j].getPositionY(), -nodeBoxArray[j].getPositionX()));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                var nodeBoxArray1 = this.nodeBlock1.getChildren();\r\n                if (parseInt(stringRotate[nRotate]) == 180) {\r\n                    //     cc.log(\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\r\n                    //    this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle=180;\r\n                    for (var i = 0; i <= 3; i++) {\r\n                        nodeBoxArray1[i].setPosition(cc.p(nodeBoxArray1[i].getPositionY(), -nodeBoxArray1[i].getPositionX()));\r\n                        if (i == 3) {\r\n                            for (var j = 0; j <= 3; j++) {\r\n                                nodeBoxArray1[j].setPosition(cc.p(nodeBoxArray1[j].getPositionY(), -nodeBoxArray1[j].getPositionX()));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n            }\r\n            this.nCreat++;\r\n            if (this.nCreat == 2) {\r\n                this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n                this.isFirst = true;\r\n            }\r\n        }\r\n    },\r\n    //出生时根据角度改变子块位置\r\n    ChangeRotate: function (nAngle) {\r\n        if (this.isFirst == false) {\r\n            switch (this.nCreat) {\r\n                case 0:\r\n                    //获取此方块的数组\r\n                    var nodeBoxArray = this.nodeBlock.getChildren();\r\n                    if (nAngle == 180) {\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 180;\r\n                        for (var i = 0; i <= 3; i++) {\r\n                            nodeBoxArray[i].setPosition(cc.p(nodeBoxArray[i].getPositionY(), -nodeBoxArray[i].getPositionX()));\r\n                            if (i == 3) {\r\n                                for (var j = 0; j <= 3; j++) {\r\n                                    nodeBoxArray[j].setPosition(cc.p(nodeBoxArray[j].getPositionY(), -nodeBoxArray[j].getPositionX()));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    //获取此方块的数组\r\n                    var nodeBoxArray1 = this.nodeBlock1.getChildren();\r\n                    if (nAngle == 180) {\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = 180;\r\n                        for (var i = 0; i <= 3; i++) {\r\n                            nodeBoxArray1[i].setPosition(cc.p(nodeBoxArray1[i].getPositionY(), -nodeBoxArray1[i].getPositionX()));\r\n                            if (i == 3) {\r\n                                for (var j = 0; j <= 3; j++) {\r\n                                    nodeBoxArray1[j].setPosition(cc.p(nodeBoxArray1[j].getPositionY(), -nodeBoxArray1[j].getPositionX()));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                    }\r\n                    break;\r\n            }\r\n            this.nCreat++;\r\n            if (this.nCreat == 2) {\r\n                cc.log(this.nodeBlock.getComponent(\"OperateBlock\").stringColor);\r\n                cc.log(this.nodeBlock1.getComponent(\"OperateBlock\").stringColor);\r\n                this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n                this.isFirst = true;\r\n            }\r\n        }\r\n        else {\r\n            var nodeBoxArray = this.nodeBlock.getChildren();\r\n            if (this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle == 180) {\r\n                // this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 180;\r\n                for (var i = 0; i <= 3; i++) {\r\n                    nodeBoxArray[i].setPosition(cc.p(nodeBoxArray[i].getPositionY(), -nodeBoxArray[i].getPositionX()));\r\n                    if (i == 3) {\r\n                        for (var j = 0; j <= 3; j++) {\r\n                            nodeBoxArray[j].setPosition(cc.p(nodeBoxArray[j].getPositionY(), -nodeBoxArray[j].getPositionX()));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            var nodeBoxArray1 = this.nodeBlock1.getChildren();\r\n            if (nAngle == 180) {\r\n                // this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = 180;\r\n                for (var i = 0; i <= 3; i++) {\r\n                    nodeBoxArray1[i].setPosition(cc.p(nodeBoxArray1[i].getPositionY(), -nodeBoxArray1[i].getPositionX()));\r\n                    if (i == 3) {\r\n                        for (var j = 0; j <= 3; j++) {\r\n                            nodeBoxArray1[j].setPosition(cc.p(nodeBoxArray1[j].getPositionY(), -nodeBoxArray1[j].getPositionX()));\r\n                        }\r\n                    }\r\n                }\r\n            }     \r\n            this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n        }\r\n    },\r\n    //判断方块形状\r\n    IsShape: function (stringShape, nShape) {\r\n        switch (stringShape[nShape]) {\r\n            case \"T\":\r\n                //生成方块\r\n                this.CopyBlock(this.prefabT, \"T\");\r\n                //判断方块颜色\r\n                this.IsColor(this.colorBlock, this.nColor);\r\n                this.IsRotate(this.rotateBlock, this.nRotate, \"T\");\r\n                //  this.nRotateAngle   \r\n                break;\r\n            case \"L\":\r\n                this.CopyBlock(this.prefabL, \"L\");\r\n                //判断方块颜色\r\n                this.IsColor(this.colorBlock, this.nColor);\r\n                this.IsRotate(this.rotateBlock, this.nRotate, \"L\");\r\n                break;\r\n            case \"Long\":\r\n                this.CopyBlock(this.prefabLong, \"Long\");\r\n                //判断方块颜色\r\n                this.IsColor(this.colorBlock, this.nColor);\r\n                this.IsRotate(this.rotateBlock, this.nRotate, \"Long\");\r\n                break;\r\n            case \"Z\":\r\n                this.CopyBlock(this.prefabZ, \"Z\");\r\n                //判断方块颜色\r\n                this.IsColor(this.colorBlock, this.nColor);\r\n                this.IsRotate(this.rotateBlock, this.nRotate, \"Z\");\r\n                break;\r\n            case \"Square\":\r\n                this.CopyBlock(this.prefabSquare, \"Square\");\r\n                //判断方块颜色\r\n                this.IsColor(this.colorBlock, this.nColor);\r\n                this.IsRotate(this.rotateBlock, this.nRotate, \"Square\");\r\n                break;\r\n        }\r\n    },\r\n    //判断方块颜色\r\n    IsColor: function (stringColor, nColor) {\r\n        switch (stringColor[nColor]) {\r\n            case \"blue\":\r\n                this.ChangeColor(\"2\");\r\n                break;\r\n            case \"green\":\r\n                this.ChangeColor(\"1\");\r\n                break;\r\n            case \"red\":\r\n                this.ChangeColor(\"3\");\r\n                break;\r\n        }\r\n    },\r\n    start() {\r\n\r\n    },\r\n    //返回触摸点对应的俄罗斯方块的列数\r\n    GetTouchLine: function (worldPosition) {\r\n        //将触摸点的横坐标转化为本地坐标\r\n        var nodePosition = worldPosition - (this.nodeMove.getPositionX() + this.nodeCanvas.getPositionX());\r\n        if (nodePosition > 0) {\r\n            var nWidth1 = Math.floor(nodePosition / (this.nodeMove.width / 20));\r\n            //初始化列数\r\n            var nLine = 0;\r\n            if (nWidth1 == 0 || nWidth1 == 1) {\r\n                nLine = 6;\r\n            }\r\n            else if (nWidth1 == 2 || nWidth1 == 3) {\r\n                nLine = 7;\r\n\r\n            }\r\n            else if (nWidth1 == 4 || nWidth1 == 5) {\r\n                nLine = 8;\r\n\r\n            }\r\n            else if (nWidth1 == 6 || nWidth1 == 7) {\r\n                nLine = 9;\r\n            }\r\n            else {\r\n                nLine = 10;\r\n            }\r\n            cc.log(nLine);\r\n            return nLine;\r\n        }\r\n        if (nodePosition < 0) {\r\n            var nWidth1 = Math.floor((-nodePosition) / (this.nodeMove.width / 20));\r\n            //初始化列数\r\n            var nLine = 0;\r\n            if (nWidth1 == 0 || nWidth1 == 1) {\r\n                nLine = 5;\r\n\r\n            }\r\n            else if (nWidth1 == 2 || nWidth1 == 3) {\r\n                nLine = 4;\r\n\r\n            }\r\n            else if (nWidth1 == 4 || nWidth1 == 5) {\r\n                nLine = 3;\r\n\r\n            }\r\n            else if (nWidth1 == 6 || nWidth1 == 7) {\r\n                nLine = 2;\r\n\r\n            }\r\n            else {\r\n                nLine = 1;\r\n            }\r\n            cc.log(nLine);\r\n            return nLine;\r\n        }\r\n    },\r\n    //获取俄罗斯方块的列数\r\n    GetBlockLine: function () {\r\n        var nLine = (this.nodeBlock.getPositionX() - this.nodeUserParent.getPositionX()) / Global.nWidth + 1;\r\n        return nLine;\r\n    },\r\n    //物体下落后将状态发送到服务器\r\n    SendMsgDown: function () {\r\n        //获取节点子节点数组\r\n        var blockChild = this.nodeBlock.getChildren();\r\n        //  //判断俄罗斯方块是否结束地面\r\n        //  var isCollisionGround=false;\r\n        //判断俄罗斯方块中是否含有22行\r\n        //初始化俄罗斯方块数组列\r\n        var nXArray = [];\r\n        //初始化俄罗斯方块数组行\r\n        var nYArray = [];\r\n        for (var i = 0; i <= 3; i++) {\r\n            var nX = (blockChild[i].getPositionX() + this.node.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n            var nY = (blockChild[i].getPositionY() + this.node.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n            if (nY = 20) {\r\n                nXArray.push(nX);\r\n                nYArray.push(nY);\r\n            }\r\n            if (nY <= 19) {\r\n                nXArray.push(nX);\r\n                nYArray.push(nY);\r\n            }\r\n        }\r\n    },\r\n    playAudio : function(audioSource){\r\n        cc.audioEngine.play(audioSource,false,1);\r\n    },\r\n    //快速下落\r\n    DownQuick: function () {\r\n        if (this.nodeBlock.getComponent(\"OperateBlock\").isCollision == false) {\r\n            this.playAudio(this.clickAudio);\r\n            this.nodeBlock.getComponent(\"OperateBlock\").fDownTime = Global.nTimeInteval;\r\n        }\r\n    },\r\n    //获取子块在地板父体下的坐标\r\n    GetBoxNode: function (childBox) {\r\n        //获取子块在地板附体下的行列\r\n        var nX = (childBox.getPositionX() + this.nodeBlock.getPositionX() - this.nodeUserParent.getPositionX()) / Global.nWidth + 1;\r\n        var nY = (childBox.getPositionY() + this.nodeBlock.getPositionY() - this.nodeUserParent.getPositionY()) / Global.nWidth + 1;\r\n        cc.log(nX);\r\n        cc.log(nY);\r\n        var x = this.groundChild[nX - 1][nY - 1].getPositionX();\r\n        var y = this.groundChild[nX - 1][nY - 1].getPositionY();\r\n        return cc.p(x, y);\r\n    },\r\n    //根据服务器给的惩罚行数向上移动俄罗斯方块\r\n    PunishUp: function (nDisappearAll) {\r\n        this.arrayChangeNode = [];\r\n        console.log(\"in punishUp nDisappearAll is \",nDisappearAll);\r\n        for (var i = 19; i >= 0; i--) {\r\n            inner:\r\n            for (var j = 0; j <= 9; j++) {\r\n                console.log(\"in punishUp 第\"+i+\"行,第\"+ j + \"列的坐标为(\" + this.groundChild[j][i].x,this.groundChild[j][i].y + \")\");\r\n                console.log(\"in punishUp \" + this.groundChild[j][i].getComponent(\"PrefabState\").isBox);\r\n                if (this.groundChild[j][i].getComponent(\"PrefabState\").isBox) {\r\n                    if (i + nDisappearAll >= 20) {\r\n                        Console.log(nDisappearAll+\"GetBoxNode\");\r\n                        Console.log(i+\"GetBoxNode\");\r\n                        this.isOver=true;\r\n                        continue inner;\r\n                    }\r\n                    for (var l = 0; l <= this.boxParent1.length - 1; l++) {\r\n                        if (this.boxParent1[l].getPositionY() == this.groundChild[j][i].getPositionY() && this.boxParent1[l].getPositionX() == this.groundChild[j][i].getPositionX()) {\r\n                            this.boxParent1[l].setPosition(cc.p(this.groundChild[j][i].getPositionX(), this.groundChild[j][i].getPositionY() + Global.nWidth * nDisappearAll));\r\n                        } \r\n                    }\r\n                    this.arrayChangeNode.push({ \"row\": i, \"col\": j, \"color\": \"white\" });\r\n                    this.groundChild[j][i].getComponent(\"PrefabState\").isBox = false;\r\n                    this.arrayChangeNode.push({ \"row\": i + nDisappearAll, \"col\": j, \"color\": this.groundChild[j][i].getComponent(\"PrefabState\").stringColor });\r\n                    // if((i+nDisappearAll) != 20){\r\n                    //这里该值为undefined\r\n                    console.log(\"in punishUp 当前惩罚行列节点值 \",this.groundChild[j][i + nDisappearAll]);\r\n                    if(this.groundChild[j][i + nDisappearAll] != undefined){\r\n                        this.groundChild[j][i + nDisappearAll].getComponent(\"PrefabState\").isBox = true;\r\n                        this.groundChild[j][i + nDisappearAll].getComponent(\"PrefabState\").stringColor = this.groundChild[j][i].getComponent(\"PrefabState\").stringColor;\r\n                    }    \r\n                    if(i==0&&j==9)\r\n                    {\r\n                        if(this.isOver)\r\n                        {\r\n                            console.log(\"ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\");\r\n                            this.nodeBlock.getComponent(\"OperateBlock\").isGameOver=true;\r\n                        }\r\n                    }\r\n                    // } \r\n                    // this.isMoveState=true;\r\n                    // this.isDisppearState=true;\r\n                }\r\n                // if(i==19&&j==9)\r\n                // {\r\n                //     this.DisappearBox();\r\n                // }\r\n            }\r\n        }\r\n\r\n    },\r\n    //遍历全局字块数组并将最高消层数以上的方块下落\r\n    BoxDown: function (nMaxDisappea, nDisappearAll) {\r\n        //存取消行行行列\r\n        this.nDissppearRow = [{ \"row\": nDisappearAll, \"col\": \"\" }];\r\n        for (var i = nMaxDisappea + 1; i <= 19; i++) {\r\n            for (var j = 0; j <= 9; j++) {\r\n                if (this.groundChild[j][i].getComponent(\"PrefabState\").isBox) {\r\n                    for (var l = 0; l <= this.boxParent1.length - 1; l++) {\r\n                        if (this.boxParent1[l].getPositionY() == this.groundChild[j][i].getPositionY() && this.boxParent1[l].getPositionX() == this.groundChild[j][i].getPositionX()) {\r\n                            this.boxParent1[l].setPosition(cc.p(this.groundChild[j][i].getPositionX(), this.groundChild[j][i].getPositionY() - Global.nWidth * nDisappearAll));\r\n                        }\r\n                    }\r\n                    this.arrayChangeNode.push({ \"row\": i, \"col\": j, \"color\": \"white\" });\r\n                    this.groundChild[j][i].getComponent(\"PrefabState\").isBox = false;\r\n                    this.arrayChangeNode.push({ \"row\": i - nDisappearAll, \"col\": j, \"color\": this.groundChild[j][i].getComponent(\"PrefabState\").stringColor });\r\n                    this.groundChild[j][i - nDisappearAll].getComponent(\"PrefabState\").isBox = true;\r\n                    this.groundChild[j][i - nDisappearAll].getComponent(\"PrefabState\").stringColor = this.groundChild[j][i].getComponent(\"PrefabState\").stringColor;\r\n                }\r\n                // if(i==19&&j==9)\r\n                // {\r\n                //     this.DisappearBox();\r\n                // }\r\n            }\r\n        }\r\n        //显示分数\r\n        this.ShowScore(nDisappearAll, cc.find(\"UserScore\"));\r\n        cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg({ \"tag1\": 11, \"type\": \"1\", \"score\": cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nUserScore, \"nDisappear1\": nDisappearAll });\r\n        //发送服务器请求\r\n        // this.isMoveState=true;\r\n        this.isDisppearState = true;\r\n    },\r\n    //根据消行层数显示自分数\r\n    ShowScore: function (nDissppearRow1, nodeScore) {\r\n        switch (nDissppearRow1) {\r\n            case 1:\r\n                nodeScore.getComponent(cc.Label).string = (parseInt(nodeScore.getComponent(cc.Label).string) + 40).toString();\r\n                break;\r\n            case 2:\r\n                nodeScore.getComponent(cc.Label).string = (parseInt(nodeScore.getComponent(cc.Label).string) + 90).toString();\r\n                break;\r\n            case 3:\r\n                nodeScore.getComponent(cc.Label).string = (parseInt(nodeScore.getComponent(cc.Label).string) + 150).toString();\r\n                break;\r\n            case 4:\r\n                nodeScore.getComponent(cc.Label).string = (parseInt(nodeScore.getComponent(cc.Label).string) + 220).toString();\r\n                break;\r\n        }\r\n    },\r\n    //俄罗斯方块向右移动\r\n    MoveRight: function (nLine, nLine1) {\r\n        if (nLine == nLine1) {\r\n            return;\r\n        }\r\n        //存取俄罗斯方块的行数\r\n        var nArrayRow = [];\r\n        //存取俄罗斯方块的列数\r\n        var nArrayList = [];\r\n        //获取节点子节点数组\r\n        var blockChild = this.nodeBlock.getChildren();\r\n        //将俄罗斯方块的行列存入数组中\r\n        for (var i = 0; i <= 3; i++) {\r\n            //获取此时组成俄罗斯方块元素的行列\r\n            var nX = (blockChild[i].getPositionX() + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n            var nY = (blockChild[i].getPositionY() + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n            //    cc.log(nX);\r\n            //    cc.log(nY);\r\n            nArrayList.push(nX);\r\n            nArrayRow.push(nY);\r\n        }\r\n        //从小到大排序行数\r\n        for (var j = 0; j <= 3; j++) {\r\n            if (j <= 2) {\r\n                for (var k = j + 1; k <= 3; k++) {\r\n                    if (nArrayRow[k] < nArrayRow[j]) {\r\n                        var nOldY = nArrayRow[j];\r\n                        nArrayRow[j] = nArrayRow[k];\r\n                        nArrayRow[k] = nOldY;\r\n                        var nOldX = nArrayList[j];\r\n                        nArrayList[j] = nArrayList[k];\r\n                        nArrayList[k] = nOldX;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (nArrayRow[0] <= 19 || (nArrayRow[0] == 20 && this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape == \"Long\")) {\r\n            //从小到大排序列数\r\n            for (var j = 0; j <= 3; j++) {\r\n                if (j <= 2) {\r\n                    for (var k = j + 1; k <= 3; k++) {\r\n                        if (nArrayList[k] < nArrayList[j]) {\r\n                            var nOldY = nArrayRow[j];\r\n                            nArrayRow[j] = nArrayRow[k];\r\n                            nArrayRow[k] = nOldY;\r\n                            var nOldX = nArrayList[j];\r\n                            nArrayList[j] = nArrayList[k];\r\n                            nArrayList[k] = nOldX;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (nArrayList[3] == 10) {\r\n                return;\r\n            }\r\n            else {\r\n                this.arrayChangeNode = [];\r\n                //判断方块的下一列是否有方块\r\n                var isHas = false;\r\n                for (var i = 3; i >= 0; i--) {\r\n                    cc.log(nArrayList[i] - 1);\r\n                    cc.log(nArrayRow[i] - 1);\r\n                    this.arrayChangeNode.push({ \"row\": nArrayRow[i] - 1, \"col\": nArrayList[i] - 1, \"color\": \"white\" });\r\n                    // //将俄罗斯方块所在方格置为false\r\n                    // this.groundChild[nArrayList[i] - 1][nArrayRow[i] - 1].getComponent(\"PrefabState\").isBox = false;\r\n                    //判断方块的下一列的方块属性是否为true\r\n                    if (this.groundChild[nArrayList[i]][nArrayRow[i] - 1].getComponent(\"PrefabState\").isBox) {\r\n                        isHas = true;\r\n                    }\r\n                    if (i == 0) {\r\n                        if (isHas) {\r\n                            // for (var j = 0; j <= 3; j++) {\r\n\r\n                            //     //将俄罗斯方块所在方格置为true\r\n                            //     this.groundChild[nArrayList[j] - 1][nArrayRow[j] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                            // }\r\n                            return;\r\n                        }\r\n                        else {\r\n                            for (var k = 0; k <= 3; k++) {\r\n                                this.arrayChangeNode.push({ \"row\": nArrayRow[k] - 1, \"col\": nArrayList[k], \"color\": this.nodeBlock.getComponent(\"OperateBlock\").stringColor });\r\n                                // //将下一列的方块所在方格置为true\r\n                                // this.groundChild[nArrayList[k]][nArrayRow[k] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                if (k == 3) {\r\n                                    //俄罗斯方块向右移动\r\n                                    this.nodeBlock.x += Global.nWidth;\r\n                                    this.isMoveState = true;\r\n                                    if (this.nodeBlock.getComponent(\"OperateBlock\").isCollision) {\r\n                                        //初始化 1s计时器\r\n                                        this.nodeBlock.getComponent(\"OperateBlock\").fDownTime = 0;\r\n                                        this.nodeBlock.getComponent(\"OperateBlock\").fCollisionTime = 0;\r\n                                    }\r\n                                    //   //初始化 1s计时器\r\n                                    //   this.nodeBlock.getComponent(\"OperateBlock\").fCollisionTime=0;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n\r\n        }\r\n    },\r\n    //俄罗斯方块向左移动\r\n    MoveLeft: function (nLine, nLine1) {\r\n        if (nLine == nLine1) {\r\n            return;\r\n        }\r\n        //存取俄罗斯方块的行数\r\n        var nArrayRow = [];\r\n        //存取俄罗斯方块的列数\r\n        var nArrayList = [];\r\n        //获取节点子节点数组\r\n        var blockChild = this.nodeBlock.getChildren();\r\n        //将俄罗斯方块的行列存入数组中\r\n        for (var i = 0; i <= 3; i++) {\r\n            //获取此时组成俄罗斯方块元素的行列\r\n            var nX = (blockChild[i].getPositionX() + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n            var nY = (blockChild[i].getPositionY() + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n            nArrayList.push(nX);\r\n            nArrayRow.push(nY);\r\n        }       //从小到大排序行数\r\n        for (var j = 0; j <= 3; j++) {\r\n            if (j <= 2) {\r\n                for (var k = j + 1; k <= 3; k++) {\r\n                    if (nArrayRow[k] < nArrayRow[j]) {\r\n                        var nOldY = nArrayRow[j];\r\n                        nArrayRow[j] = nArrayRow[k];\r\n                        nArrayRow[k] = nOldY;\r\n                        var nOldX = nArrayList[j];\r\n                        nArrayList[j] = nArrayList[k];\r\n                        nArrayList[k] = nOldX;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (nArrayRow[0] <= 19 || (nArrayRow[0] == 20 && this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape == \"Long\")) {\r\n            //从小到大排序列数\r\n            for (var j = 0; j <= 3; j++) {\r\n                if (j <= 2) {\r\n                    for (var k = j + 1; k <= 3; k++) {\r\n                        if (nArrayList[k] < nArrayList[j]) {\r\n                            var nOldY = nArrayRow[j];\r\n                            nArrayRow[j] = nArrayRow[k];\r\n                            nArrayRow[k] = nOldY;\r\n                            var nOldX = nArrayList[j];\r\n                            nArrayList[j] = nArrayList[k];\r\n                            nArrayList[k] = nOldX;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (nArrayList[0] == 1) {\r\n                return;\r\n            }\r\n            else {\r\n                this.arrayChangeNode = [];\r\n                //判断方块的前一列是否有方块\r\n                var isHas = false;\r\n                for (var i = 0; i <= 3; i++) {\r\n                    this.arrayChangeNode.push({ \"row\": nArrayRow[i] - 1, \"col\": nArrayList[i] - 1, \"color\": \"white\" });\r\n                    // //将俄罗斯方块所在方格置为false\r\n                    // this.groundChild[nArrayList[i] - 1][nArrayRow[i] - 1].getComponent(\"PrefabState\").isBox = false;\r\n                    //判断方块的前一列的方块属性是否为true\r\n                    if (this.groundChild[nArrayList[i] - 2][nArrayRow[i] - 1].getComponent(\"PrefabState\").isBox) {\r\n                        isHas = true;\r\n                    }\r\n                    if (i == 3) {\r\n                        if (isHas) {\r\n                            // for (var j = 0; j <= 3; j++) {\r\n                            //     this.arrayChangeNode.push({ \"row\": nArrayRow[j] - 1, \"col\": nArrayList[j] - 1, \"color\": this.nodeBlock.getComponent(\"OperateBlock\").stringColor });\r\n                            //     //将俄罗斯方块所在方格置为false\r\n                            //     this.groundChild[nArrayList[j] - 1][nArrayRow[j] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                            // }\r\n                            return;\r\n                        }\r\n                        else {\r\n                            for (var k = 0; k <= 3; k++) {\r\n                                this.arrayChangeNode.push({ \"row\": nArrayRow[k] - 1, \"col\": nArrayList[k] - 2, \"color\": this.nodeBlock.getComponent(\"OperateBlock\").stringColor });\r\n                                // //将前一列的方块所在方格置为true\r\n                                // this.groundChild[nArrayList[k] - 2][nArrayRow[k] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                if (k == 3) {\r\n                                    this.isMoveState = true;\r\n                                    //俄罗斯方块向左移动\r\n                                    this.nodeBlock.x -= Global.nWidth;\r\n                                    if (this.nodeBlock.getComponent(\"OperateBlock\").isCollision) {\r\n                                        //初始化 1s计时器\r\n                                        this.nodeBlock.getComponent(\"OperateBlock\").fDownTime = 0;\r\n                                        this.nodeBlock.getComponent(\"OperateBlock\").fCollisionTime = 0;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    },\r\n    //遍历游戏场景的字块中的isBox属性是否为true,并消除代码\r\n    DisappearBox: function () {\r\n        this.playAudio(this.removeAudio);\r\n        this.arrayChangeNode = [];\r\n        this.nDissppearRow = [{ \"row\": 0, \"col\": \"\" }];\r\n        //初始化消行行数\r\n        var nDisappear = [];\r\n        for (var i = 0; i <= 19; i++) {\r\n            for (var j = 0; j <= 9; j++) {\r\n                if (j == 0) {\r\n                    //判断i行有多少个true\r\n                    this.nTrue = 0;\r\n                }\r\n                if (this.groundChild[j][i].getComponent(\"PrefabState\").isBox) {\r\n                    this.nTrue++;\r\n                }\r\n                if (j == 9) {\r\n                    for (var a = 0; a <= 9; a++) {\r\n                        cc.log(this.groundChild[a][i].getComponent(\"PrefabState\").isBox);\r\n                    }\r\n                    if (this.nTrue == 10) {\r\n\r\n                        cc.log(\"ppppppppppppppppppppppppppppppppppppp\");\r\n                        //遍历全局字块数组并消除整行方块isBox都为true的节点\r\n                        this.TraversalNodeBox(this.groundChild[j][i].getPositionY());\r\n                        //将消除的方块的isBox重置false\r\n                        for (var k = 0; k <= 9; k++) {\r\n                            this.arrayChangeNode.push({ \"row\": i, \"col\": k, \"color\": \"white\" });\r\n                            this.groundChild[k][i].getComponent(\"PrefabState\").isBox = false;\r\n                        }\r\n                        nDisappear.push(i);\r\n                    }\r\n                    if (i == 19 && nDisappear.length != 0) {\r\n                        //当消行层总数为1行是\r\n                        if (nDisappear.length == 1) {\r\n                            this.BoxDown(nDisappear[0], nDisappear.length);\r\n                        }\r\n                        else {\r\n                            //从小到达排序行数\r\n                            for (var k = 0; k <= nDisappear.length - 1; k++) {\r\n                                for (var l = k + 1; l <= nDisappear.length - 1; l++) {\r\n                                    if (k <= 2) {\r\n                                        if (nDisappear[l] < nDisappear[k]) {\r\n                                            var nMin = nDisappear[k];\r\n                                            nDisappear[k] = nDisappear[l];\r\n                                            nDisappear[l] = nMin;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            this.BoxDown(nDisappear[nDisappear.length - 1], nDisappear.length);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //当敌人消行是\r\n        if (this.isDisppearEnemy) {\r\n            console.log(\"=======================this.isDisppearEnemy\");\r\n            //判断此时方块落下时是否消行\r\n            cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg({ \"tag1\": 12, \"type\": \"1\", \"score\": cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nUserScore, \"nMapRow\": \"\", \"nMapCol\": \"\", \"changeMapList1\": this.arrayChangeNode, \"removeRow\": nDisappear.length });\r\n            if (this.nDissppearRow != 0) {\r\n                cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg({ \"tag1\": 9, \"type\": \"1\", \"score\": cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nUserScore, \"nMapRow\": \"\", \"nMapCol\": \"\", \"changeMapList1\": this.arrayChangeNode, \"state1\": 1 });\r\n            }\r\n            this.isDisppearEnemy = false;\r\n        }\r\n    },\r\n    update(dt) {\r\n        if(this.isWin)\r\n        {\r\n            this.nodeBlock.getComponent(\"OperateBlock\").isGameOver=true;\r\n            //显示广告\r\n            cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").showAdvice();\r\n            this.playAudio(this.loseAudio);\r\n            return;\r\n        }\r\n        if (this.nodeBlock.getComponent(\"OperateBlock\").isGameOver&&this.isSend==false) {\r\n            this.lose=true;\r\n            cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg({ \"tag1\": 13, \"type\": \"1\", \"score\": cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nUserScore, \"nMapRow\": \"\", \"nMapCol\": \"\", \"result\":-1 });\r\n            cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg({ \"tag1\": 4, \"type\": \"1\", \"score\": cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nUserScore, \"nMapRow\": \"\", \"nMapCol\": \"\", \"result_score\":cc.find(\"UserScore\").getComponent(cc.Label).string});\r\n            cc.log(\"=======================================================\");\r\n            cc.find(\"New Sprite(Splash)\").opacity = 120;\r\n            this.overBackGround.active = true;\r\n            this.isSend=true;\r\n            return;\r\n        }\r\n        if (this.isMoveState) {\r\n            cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg({ \"tag1\": 9, \"type\": \"1\", \"score\": cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nUserScore, \"nMapRow\": \"\", \"nMapCol\": \"\", \"changeMapList1\": this.arrayChangeNode });\r\n            this.isMoveState = false;\r\n        }\r\n        if (this.nodeBlock.getComponent(\"OperateBlock\").isDownState) {\r\n            cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg({ \"tag1\": 9, \"type\": \"1\", \"score\": cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nUserScore, \"nMapRow\": \"\", \"nMapCol\": \"\", \"changeMapList1\": this.nodeBlock.getComponent(\"OperateBlock\").arrayChangeNode });\r\n            this.nodeBlock.getComponent(\"OperateBlock\").isDownState = false;\r\n        }\r\n        if (this.isRotateState) {\r\n            cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg({ \"tag1\": 9, \"type\": \"1\", \"score\": cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nUserScore, \"nMapRow\": \"\", \"nMapCol\": \"\", \"changeMapList1\": this.arrayChangeNode });\r\n            this.isRotateState = false;\r\n        }\r\n        if (this.isDisppearState && this.isDisppearEnemy == false) {\r\n            for(var i=0;i<=this.arrayChangeNode.length-1;i++)\r\n            {\r\n                console.log(JSON.stringify(this.arrayChangeNode[i])+\"isDisppearState11111111111111111111111111\");\r\n            }\r\n           \r\n            cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg({ \"tag1\": 9, \"type\": \"1\", \"score\": cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nUserScore, \"nMapRow\": \"\", \"nMapCol\": \"\", \"changeMapList1\": this.arrayChangeNode, \"state1\": 1 });\r\n            cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg({ \"tag1\": 6, \"type\": \"1\", \"score\": cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nUserScore, \"nMapRow\": \"\", \"nMapCol\": \"\", \"changeMapList1\": this.arrayChangeNode, \"removeMapList1\": this.nDissppearRow });\r\n            this.isDisppearState = false;\r\n        }\r\n        if (this.isPunish) {\r\n            cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg({ \"tag1\": 9, \"type\": \"1\", \"score\": cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nUserScore, \"nMapRow\": \"\", \"nMapCol\": \"\", \"changeMapList1\": this.arrayChangeNode });\r\n            this.isPunish = false;\r\n        }\r\n        if (cc.sys.isNative) {\r\n            if (this.isOutSlide == false) {\r\n                //当触摸点的列大于俄罗斯方块的列数\r\n                if (this.GetTouchLine(this.positionTouchX) > this.GetBlockLine()) {\r\n                    //执行向右移动代码\r\n                    this.MoveRight(this.GetTouchLine(this.positionTouchX), this.GetBlockLine());\r\n                    this.isOutSlide = true;\r\n                }\r\n                if (this.GetTouchLine(this.positionTouchX) < this.GetBlockLine()) {\r\n                    //执行向左移动代码\r\n                    this.MoveLeft(this.GetTouchLine(this.positionTouchX), this.GetBlockLine());\r\n                    this.isOutSlide = true;\r\n                }\r\n            }\r\n            //快速下落\r\n            if (this.isOutDown == false) {\r\n                this.DownQuick();\r\n            }\r\n        }\r\n        else {\r\n            if (this.isOutSlide == false) {\r\n                //当触摸点的列大于俄罗斯方块的列数\r\n                if (this.GetTouchLine(this.positionTouchX) > this.GetBlockLine()) {\r\n                    //执行向右移动代码\r\n                    this.MoveRight(this.GetTouchLine(this.positionTouchX), this.GetBlockLine());\r\n                    this.isOutSlide = true;\r\n\r\n                }\r\n                if (this.GetTouchLine(this.positionTouchX) < this.GetBlockLine()) {\r\n                    //执行向左移动代码\r\n                    this.MoveLeft(this.GetTouchLine(this.positionTouchX), this.GetBlockLine());\r\n                    this.isOutSlide = true;\r\n                }\r\n            }\r\n            //快速下落\r\n            if (this.isOutDown == false) {\r\n                this.DownQuick();\r\n            }\r\n        }\r\n        if (this.nodeBlock.getComponent(\"OperateBlock\").isStationary) {\r\n            // this.boxParent1=this.boxParent.getChildren();\r\n            //获取此方块的数组\r\n            var nodeBoxArray = this.nodeBlock.getChildren();\r\n            for (var i = 0; i <= 3; i++) {\r\n                nodeBoxArray[0].setPosition(this.GetBoxNode(nodeBoxArray[0]));\r\n                cc.log(nodeBoxArray[0].getPosition());\r\n                nodeBoxArray[0].parent = this.boxParent;\r\n                if (i == 3) {\r\n                    this.nodeBlock.getComponent(\"OperateBlock\").isChangeParent = true;\r\n                }\r\n            }\r\n        }\r\n        if (this.nodeBlock.getComponent(\"OperateBlock\").isChangeParent) {\r\n            //消除以后落下俄罗斯方块\r\n            this.DisappearBox();\r\n            var nodeBoxArray1 = this.boxParent.getChildren();\r\n            // this.nodeBlock.getComponent(\"OperateBlock\").isStationary=false;\r\n            // this.nodeBlock.getComponent(\"OperateBlock\").isChangeParent=false;\r\n            cc.log(this.nodeBlock.getChildren());\r\n            //生成新的俄罗斯方块\r\n            this.GetBlock();\r\n            this.isOutDown = true;\r\n            this.isOutSlide = true;\r\n            this.nodeBlock.getComponent(\"OperateBlock\").isStationary = false;\r\n            this.nodeBlock.getComponent(\"OperateBlock\").isChangeParent = false;\r\n        }\r\n    },\r\n    share : function(){\r\n        if(CC_WECHATGAME){\r\n            console.log(\"首页share\");\r\n            cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").shareFriends();\r\n        }else if(cc.sys.isNative){\r\n            //原生平台分享\r\n            cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nativeShare();\r\n        }\r\n    }\r\n    // },\r\n});\r\n"]}