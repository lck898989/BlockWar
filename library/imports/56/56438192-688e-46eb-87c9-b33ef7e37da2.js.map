{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Scripts\\Game1/assets\\Scripts\\Game1\\Game1Main.js"],"names":["cc","Class","extends","Component","properties","nodeCanvas","default","type","Node","groundPrefab","Prefab","boxParent","groundParent","prefabL","prefabSquare","prefabZ","prefabLong","prefabT","blockParent","nodeRotateButton","nodeDownButton","nodeMove1","next1Node","next2Node","overBackGround","nodeScore1","stopNode","clickAudio","url","AudioClip","loseAudio","removeAudio","darkNotice","handNode","slideNode","ShowScore","nDissppearRow1","nodeScore","score","parseInt","getComponent","Label","string","toString","onLoad","nLine","invalidRemoveTime","gameSlide","director","resume","self","isOutSlide","isShowScore","positionTouchX","Animation","play","nTime","on","active","bind","EventType","TOUCH_START","event","console","log","TOUCH_MOVE","getLocation","TOUCH_END","TOUCH_CANCEL","slidePosition","sys","isNative","isOutDown","find","LoadUser","pictureUser","nameUser","isPressRotate","CC_WECHATGAME","playAudio","disappearAll","isFirst","Global","game1Main","groundChild","i","stringColor","stringShape","stringRotate","nCreat","GetGround","GetBlock","boxParent1","getChildren","systemEvent","SystemEvent","KEY_DOWN","onKeyDown","ShowUser","start","keyCode","KEY","a","MoveLeft","d","MoveRight","s","DownQuick","l","RotateBlock","nLine1","nArrayRow","nArrayList","blockChild","nodeBlock","nX","getPositionX","nWidth","nY","getPositionY","push","compare","value1","value2","j","k","nOldY","nOldX","stringBoloekShape","isHas","isBox","x","isCollision","groundNode","instantiate","parent","setPosition","p","TarvelFalse","length","OnLoadBlock","nBlock","stringColor3","destroy","setBlockPosition","getPosition","nRotateAngle","nodeBlock1","setBlock1Position","nodeBlock2","CopyBlock","prefabLBlock","stringShape1","shapeBlock","nShape","rotateBlock","nRotate","randomColor","nodePosition3","v2WorldY","v1WorldX","isStationary","TraverseRotate","audioSource","audioEngine","IsColor","stringShape3","nShape3","ChangeColor","OnloadColor","stringColor1","nodeBlock3","nodeBlockChild","loader","loadRes","SpriteFrame","err","txt","Sprite","spriteFrame","fDownTime","nTimeInteval","nodeBlockChild1","nodeBlockChild2","stringColor0","stringColor2","IsShape","IsRotate","ChangeRotate","nAngle","nodeBoxArray","nodeBoxArray1","nodeBoxArray2","isStartDown","isHasBox","isOutWall","isOutGround","nRowY","nLineX","arrayX","arrayY","nX1","nY1","oldX","oldY","isZero","v2RotateX","v2RotateY","fCollisionTime","nMove","nMoveX","nMoveY","arrayMoveX","arrayMoveY","v2RotateY1","positionX","positionY","y","v2RotateX1","stringShape2","colorBlock","nColor","Math","floor","random0To1","GetBoxNode","childBox","TraversalNodeBox","nPositionY","nLength","nDestroy","bCollisionOne","BoxDown","nMaxDisappea","nDisappearAll","DisappearBox","nDisappear","nTrue","nMin","GetBlockLine","getTouchLine","buttonNode","worldPosition","localX","convertToNodeSpaceAR","v2","n1","width","nCol","n2","GetTouchLine","nodePosition","nWidth1","shareButton","shareFriends","nativeShare","update","dt","xhr","XMLHttpRequest","onreadystatechange","readyState","status","response","responseText","open","send","sendData","tag1","SendLongMsg","isGameOver","opacity","Button","interactable","loadScene","localStorage","getItem","undefined","setItem","tetrisTopScore","postMessage","isChangeParent","rerurn","Number","toFixed"],"mappings":"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","file":"Game1Main.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Game1","sourcesContent":["/*\r\n * @Author: mikey.zhaopeng \r\n * @Date: 2018-06-25 21:11:34 \r\n * @Last Modified by: mikey.zhaopeng\r\n * @Last Modified time: 2018-08-17 17:43:39\r\n */\r\n// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n// window.Global = {\r\n//     //声明全局Game1Main\r\n//      game1Main:null,\r\n//      //小方块的宽度\r\n//      nWidth:70,\r\n// };\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //获取canvas节点\r\n        nodeCanvas: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        //获取地板预制体元素\r\n        groundPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        //获取方块父节点\r\n        boxParent: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        //获取地板父节点\r\n        groundParent: {\r\n            default: null,\r\n            type: cc.Node\r\n        }\r\n        ,\r\n        //获取L形状方块预制体\r\n        prefabL: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        //获取正方形方块预制体\r\n        prefabSquare: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        //获取Z形状方块预制体\r\n        prefabZ: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        }, //获取长条形状方块预制体\r\n        prefabLong: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        //获取T形状方块预制体\r\n        prefabT: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        //获取俄罗斯方块父节点\r\n        blockParent: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        //获取旋转按钮节点\r\n        nodeRotateButton: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        //获取下落按钮节点\r\n        nodeDownButton: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        //获取移动按钮节点\r\n        nodeMove1: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        //获取第二个俄罗斯方块位置节点\r\n        next1Node: {\r\n            default: null,\r\n            type: cc.Node\r\n\r\n        },\r\n        //获取第三个俄罗斯方块位置节点\r\n        next2Node: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        //获取结束游戏背景节点\r\n        overBackGround: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        //获取分数节点\r\n        nodeScore1: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        //\r\n        stopNode:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        clickAudio : {\r\n            url : cc.AudioClip,\r\n            default : null,\r\n        },\r\n        loseAudio : {\r\n            url : cc.AudioClip,\r\n            default : null,\r\n        },\r\n        removeAudio : {\r\n            url : cc.AudioClip,\r\n            default : null,\r\n        },\r\n        darkNotice : cc.Node,\r\n        handNode   : cc.Node,\r\n        //网格上也可以滑动\r\n        slideNode  : cc.Node,\r\n\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    //根据消行层数显示自分数\r\n    ShowScore: function (nDissppearRow1, nodeScore) {\r\n        switch (nDissppearRow1) {\r\n            case 1:\r\n                this.score = parseInt(nodeScore.getComponent(cc.Label).string) + 40;\r\n                nodeScore.getComponent(cc.Label).string = (parseInt(nodeScore.getComponent(cc.Label).string) + 40).toString();\r\n                break;\r\n            case 2:\r\n                this.score = parseInt(nodeScore.getComponent(cc.Label).string) + 90;\r\n                nodeScore.getComponent(cc.Label).string = (parseInt(nodeScore.getComponent(cc.Label).string) + 90).toString();\r\n                break;\r\n            case 3:\r\n                this.score = parseInt(nodeScore.getComponent(cc.Label).string) + 150;\r\n                nodeScore.getComponent(cc.Label).string = (parseInt(nodeScore.getComponent(cc.Label).string) + 150).toString();\r\n                break;\r\n            case 4:\r\n                this.score = parseInt(nodeScore.getComponent(cc.Label).string) + 220;\r\n                nodeScore.getComponent(cc.Label).string = (parseInt(nodeScore.getComponent(cc.Label).string) + 220).toString();\r\n                break;\r\n        }\r\n    },\r\n    onLoad() {\r\n        //定义自己的分数为0\r\n        this.score = 0;\r\n        this.nLine = 0;\r\n        this.invalidRemoveTime = 0;\r\n        this.gameSlide = true;\r\n        cc.director.resume();\r\n        var self = this;\r\n        this.isOutSlide = true;\r\n        //判断是否显示分数\r\n        this.isShowScore = false;\r\n        this.positionTouchX = 0;\r\n        this.handNode.getComponent(cc.Animation).play();\r\n        //初始化结束计时\r\n        this.nTime=0;\r\n        this.handNode.on(\"touchstart\",function(){\r\n            this.darkNotice.active = false;\r\n            this.handNode.active = false;\r\n        }.bind(this));\r\n        this.darkNotice.on(\"touchstart\",function(){\r\n            this.darkNotice.active = false;\r\n            this.handNode.active = false;\r\n        }.bind(this));\r\n          //当手指落在滑动节点上时\r\n          this.nodeMove1.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n            console.log(\"点击了滑动节点\");\r\n            // self.isOutSlide = false;\r\n            // self.positionTouchX = event.getLocationX();\r\n        }, this);\r\n        //当手指在滑动节点上移动时\r\n        this.nodeMove1.on(cc.Node.EventType.TOUCH_MOVE, function (event) {\r\n            console.log(\"滑动了滑动节点\");\r\n            self.isOutSlide = false;\r\n            self.positionTouchX = event.getLocation();\r\n        }, this);\r\n        //当手指离开滑动节点时\r\n        this.nodeMove1.on(cc.Node.EventType.TOUCH_END, function (event) {\r\n            self.isOutSlide = false;\r\n            self.positionTouchX = event.getLocation();\r\n        }, this);\r\n        this.nodeMove1.on(cc.Node.EventType.TOUCH_CANCEL, function (event) {\r\n            self.isOutSlide = true;\r\n            self.positionTouchX = event.getLocation();\r\n        }, this);\r\n        //滑动节点上方的空节点用来在网格上方滑动\r\n        this.slideNode.on(\"touchstart\",function(event){\r\n            cc.log(\"点击了gameSlide节点\");\r\n        }.bind(this));\r\n        this.slideNode.on(\"touchmove\",function(event){\r\n            console.log(\"touchmove is touched\");\r\n            self.gameSlide = false;\r\n            self.slidePosition = event.getLocation();\r\n        }.bind(this));\r\n        this.slideNode.on(\"touchend\",function(event){\r\n            self.gameSlide = false;\r\n            self.slidePosition = event.getLocation();\r\n        }.bind(this));\r\n        this.slideNode.on(\"touchcancel\",function(event){\r\n            self.gameSlide = true;\r\n            self.slidePosition = event.getLocation();\r\n        }.bind(this));\r\n        if (cc.sys.isNative) {\r\n          \r\n            //判断手指是否离开滑动节点\r\n         \r\n            // this.gameSlide = true;\r\n            //判断手指是否离开下落节点\r\n            this.isOutDown = true;\r\n            //显示用户信息\r\n            cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").LoadUser(cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").pictureUser, cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nameUser, cc.find(\"UserName\"), cc.find(\"UserPicture\"));\r\n            //  //旋转触屏\r\n            //  this.nodeRotateButton.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n            //      self.rotateBlock();\r\n            //   }, this);\r\n            //下落触屏 \r\n            //当手指落在下落节点上时\r\n            this.nodeDownButton.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n                console.log(\"111111111111111111111111111111111111111111111111\");\r\n                self.isOutDown = false;\r\n            }, this);\r\n            //当手指离开下落节点上时\r\n            this.nodeDownButton.on(cc.Node.EventType.TOUCH_END, function (event) {\r\n                self.isOutDown = true;\r\n            }, this);\r\n            //左右滑动触屏\r\n            // //当手指落在滑动节点上时\r\n            // this.nodeMove.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n            //     console.log(\"点击了滑动节点\");\r\n            //     // self.isOutSlide = false;\r\n            //     self.positionTouchX = event.getLocationX();\r\n            // }, this);\r\n            // //当手指在滑动节点上移动时\r\n            // this.nodeMove.on(cc.Node.EventType.TOUCH_MOVE, function (event) {\r\n            //     console.log(\"滑动了滑动节点\");\r\n            //     // self.isOutSlide = false;\r\n            //     self.positionTouchX = event.getLocationX();\r\n            // }, this);\r\n            // //当手指离开滑动节点时\r\n            // this.nodeMove.on(cc.Node.EventType.TOUCH_END, function (event) {\r\n            //     self.isOutSlide = true;\r\n            // }, this);\r\n            // this.nodeMove.on(cc.Node.EventType.TOUCH_CANCEL, function (event) {\r\n            //     self.isOutSlide = true;\r\n            // }, this);\r\n             //判断是否点击旋转按钮\r\n        this.isPressRotate = false;\r\n        //当手指落在下落节点上时\r\n        this.nodeRotateButton.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n            self.isPressRotate = false;\r\n        }, this);\r\n        //当手指离开下落节点上时\r\n        this.nodeRotateButton.on(cc.Node.EventType.TOUCH_END, function (event) {\r\n            self.isPressRotate = true;\r\n        }, this);\r\n        }\r\n        else {\r\n            if(CC_WECHATGAME){\r\n                //显示用户信息\r\n                cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").LoadUser(cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").pictureUser, cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nameUser, cc.find(\"UserName\"), cc.find(\"UserPicture\"));\r\n            }\r\n            //获取出点的世界坐标\r\n            this.positionTouchX = 0;\r\n            var self = this;\r\n            //判断手指是否离开滑动节点\r\n            this.isOutSlide = true;\r\n            //判断手指是否落在滑动节点\r\n            this.isOutDown = true;\r\n            // //当手指落在滑动节点上时\r\n            // this.nodeMove.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n             \r\n            //     self.isOutSlide = false;\r\n            //     self.positionTouchX = event.getLocationX();\r\n            // }, this);\r\n            // //当手指在滑动节点上移动时\r\n            // this.nodeMove.on(cc.Node.EventType.TOUCH_MOVE, function (event) {\r\n            //   ;\r\n            //     self.isOutSlide = false;\r\n            //     self.positionTouchX = event.getLocationX();\r\n            // }, this);\r\n            // //当手指离开滑动节点时\r\n            // this.nodeMove.on(cc.Node.EventType.TOUCH_END, function (event) {\r\n               \r\n            //     self.isOutSlide = true;\r\n            // }, this);\r\n            // this.nodeMove.on(cc.Node.EventType.TOUCH_CANCEL, function (event) {\r\n            //     self.isOutSlide = true;\r\n            // }, this);\r\n            //当手指落在下落节点上时\r\n            this.nodeDownButton.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n                this.playAudio(this.clickAudio);\r\n                self.isOutDown = false;\r\n            }, this);\r\n            //当手指离开下落节点上时\r\n            this.nodeDownButton.on(cc.Node.EventType.TOUCH_END, function (event) {\r\n                self.isOutDown = true;\r\n            }, this);\r\n             //判断是否点击旋转按钮\r\n        this.isPressRotate = false;\r\n        //当手指落在下落节点上时\r\n        this.nodeRotateButton.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n            self.isPressRotate = false;\r\n        }, this);\r\n        //当手指离开下落节点上时\r\n        this.nodeRotateButton.on(cc.Node.EventType.TOUCH_END, function (event) {\r\n            self.isPressRotate = true;\r\n        }, this);\r\n        }\r\n        if(CC_WECHATGAME){\r\n            cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").LoadUser(cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").pictureUser, \r\n            cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nameUser,\r\n            cc.find(\"UserName\"), cc.find(\"UserPicture\"));\r\n        }\r\n        //初始化敌人消行总数\r\n        this.disappearAll = 0;\r\n        //判断是否第一次生成俄罗斯方块\r\n        this.isFirst = false;\r\n        // //显示用户信息\r\n        // cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").LoadUser(cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").pictureUser,cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nameUser,cc.find(\"Canvas/UserName\"),cc.find(\"UserPicture\"),cc.find(\"UserPicture1\"));\r\n        Global.game1Main = this;\r\n        //初始化背景子节点\r\n        this.groundChild = [];\r\n        for (var i = 0; i <= 9; i++) {\r\n            this.groundChild[i] = [];\r\n        }\r\n        //  this.nRotateAngle1=0;\r\n        //  this.nRotateAngle2=0;\r\n        //初始化当前俄罗斯方块颜色\r\n        this.stringColor = \"\";\r\n        //初始化当前俄罗斯方块形状\r\n        this.stringShape = \"\";\r\n        //初始化当前俄罗斯方块角度\r\n        this.stringRotate = \"\";\r\n        // cc.log(this.nodeCanvas.getComponent(\"Game1Main\").stringShape);\r\n        //初始化旋转角度\r\n        //  this.nRotateAngle=0; \r\n        this.nCreat = 0;\r\n        //生成游戏背景\r\n        this.GetGround();\r\n        //随机生成俄罗斯方块\r\n        this.GetBlock();\r\n        this.boxParent1 = this.boxParent.getChildren();\r\n        //声明数组，当俄罗斯方块固定后将俄罗斯方块的子块存入该数组   \r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n    },\r\n    //显示用户信息\r\n    /**\r\n     */\r\n    ShowUser: function () {\r\n    },\r\n    start() {\r\n    },\r\n    onKeyDown: function (event) {\r\n        var self = this;\r\n        switch (event.keyCode) {\r\n            case cc.KEY.a:\r\n                self.MoveLeft();\r\n                break;\r\n            case cc.KEY.d:\r\n                self.MoveRight();\r\n                break;\r\n            case cc.KEY.s:\r\n                self.DownQuick();\r\n                break;\r\n            case cc.KEY.l:\r\n                self.RotateBlock();\r\n                break;\r\n        }\r\n    },\r\n    //俄罗斯方块向左移动\r\n    /**\r\n     * @param  {} nLine\r\n     * @param  {} nLine1\r\n     */\r\n    MoveLeft: function (nLine, nLine1) {\r\n        if (nLine == nLine1) {\r\n            return;\r\n        }\r\n        //存取俄罗斯方块的行数\r\n        var nArrayRow = [];\r\n        //存取俄罗斯方块的列数\r\n        var nArrayList = [];\r\n        //获取节点子节点数组\r\n        var blockChild = this.nodeBlock.getChildren();\r\n        //将俄罗斯方块的行列存入数组中\r\n        for (var i = 0; i <= 3; i++) {\r\n            //获取此时组成俄罗斯方块元素的行列\r\n            var nX = (blockChild[i].getPositionX() + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n            var nY = (blockChild[i].getPositionY() + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n            nArrayList.push(nX);\r\n            nArrayRow.push(nY);\r\n        }       //从小到大排序行数\r\n        function compare(value1,value2){\r\n            if(value1 < value2){\r\n                return -1;\r\n           }else if(value1 > value2){\r\n                return 1;\r\n           }else{\r\n                return 0;\r\n           }\r\n        }\r\n        // nArrayRow.sort(compare);\r\n        // console.log(\"nArrayRow is \",nArrayRow);\r\n        for (var j = 0; j <= 3; j++) {\r\n            if (j <= 2) {\r\n                for (var k = j + 1; k <= 3; k++) {\r\n                    if (nArrayRow[k] < nArrayRow[j]) {\r\n                        var nOldY = nArrayRow[j];\r\n                        nArrayRow[j] = nArrayRow[k];\r\n                        nArrayRow[k] = nOldY;\r\n                        var nOldX = nArrayList[j];\r\n                        nArrayList[j] = nArrayList[k];\r\n                        nArrayList[k] = nOldX;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // cc.log(nArrayRow+\"？？？？？？？？？？？？？？？？？？？？？\");\r\n        if (nArrayRow[0] <= 19 || (nArrayRow[0] == 20 && this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape == \"Long\")) {\r\n            // cc.log(nArrayRow[0]+\"////////////////////////////////////////////////////////\");\r\n            //从小到大排序列数\r\n            for (var j = 0; j <= 3; j++) {\r\n                if (j <= 2) {\r\n                    for (var k = j + 1; k <= 3; k++) {\r\n                        if (nArrayList[k] < nArrayList[j]) {\r\n                            var nOldY = nArrayRow[j];\r\n                            nArrayRow[j] = nArrayRow[k];\r\n                            nArrayRow[k] = nOldY;\r\n                            var nOldX = nArrayList[j];\r\n                            nArrayList[j] = nArrayList[k];\r\n                            nArrayList[k] = nOldX;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (nArrayList[0] == 1) {\r\n                return;\r\n            }\r\n            else {\r\n                //判断方块的前一列是否有方块\r\n                var isHas = false;\r\n                for (var i = 0; i <= 3; i++) {\r\n                    // //将俄罗斯方块所在方格置为false\r\n                    // this.groundChild[nArrayList[i] - 1][nArrayRow[i] - 1].getComponent(\"PrefabState\").isBox = false;\r\n                    //判断方块的前一列的方块属性是否为true\r\n                    if (this.groundChild[nArrayList[i] - 2][nArrayRow[i] - 1].getComponent(\"PrefabState\").isBox) {\r\n                        isHas = true;\r\n                    }\r\n                    if (i == 3) {\r\n                        if (isHas) {\r\n                            // for (var j = 0; j <= 3; j++) {\r\n                            //     //将俄罗斯方块所在方格置为false\r\n                            //     this.groundChild[nArrayList[j] - 1][nArrayRow[j] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                            // }\r\n                            return;\r\n                        }\r\n                        else {\r\n                            for (var k = 0; k <= 3; k++) {\r\n                                // //将前一列的方块所在方格置为true\r\n                                // this.groundChild[nArrayList[k] - 2][nArrayRow[k] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                if (k == 3) {\r\n                                    //俄罗斯方块向左移动\r\n                                    this.nodeBlock.x -= Global.nWidth;\r\n                                    if (this.nodeBlock.getComponent(\"OperateBlock\").isCollision) {\r\n                                        // //初始化 1s计时器\r\n                                        // this.nodeBlock.getComponent(\"OperateBlock\").fDownTime = 0;\r\n                                        // this.nodeBlock.getComponent(\"OperateBlock\").fCollisionTime = 0;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    },\r\n    //俄罗斯方块向右移动\r\n    MoveRight: function (nLine, nLine1) {\r\n        if (nLine == nLine1) {\r\n            return;\r\n        }\r\n        //存取俄罗斯方块的行数\r\n        var nArrayRow = [];\r\n        //存取俄罗斯方块的列数\r\n        var nArrayList = [];\r\n        //获取节点子节点数组\r\n        var blockChild = this.nodeBlock.getChildren();\r\n        //将俄罗斯方块的行列存入数组中\r\n        for (var i = 0; i <= 3; i++) {\r\n            //获取此时组成俄罗斯方块元素的行列\r\n            var nX = (blockChild[i].getPositionX() + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n            var nY = (blockChild[i].getPositionY() + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n            //    cc.log(nX);\r\n            //    cc.log(nY);\r\n            nArrayList.push(nX);\r\n            nArrayRow.push(nY);\r\n        }\r\n        //从小到大排序行数\r\n        for (var j = 0; j <= 3; j++) {\r\n            if (j <= 2) {\r\n                for (var k = j + 1; k <= 3; k++) {\r\n                    if (nArrayRow[k] < nArrayRow[j]) {\r\n                        var nOldY = nArrayRow[j];\r\n                        nArrayRow[j] = nArrayRow[k];\r\n                        nArrayRow[k] = nOldY;\r\n                        var nOldX = nArrayList[j];\r\n                        nArrayList[j] = nArrayList[k];\r\n                        nArrayList[k] = nOldX;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (nArrayRow[0] <= 19 || (nArrayRow[0] == 20 && this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape == \"Long\")) {\r\n            //从小到大排序列数\r\n            for (var j = 0; j <= 3; j++) {\r\n                if (j <= 2) {\r\n                    for (var k = j + 1; k <= 3; k++) {\r\n                        if (nArrayList[k] < nArrayList[j]) {\r\n                            var nOldY = nArrayRow[j];\r\n                            nArrayRow[j] = nArrayRow[k];\r\n                            nArrayRow[k] = nOldY;\r\n                            var nOldX = nArrayList[j];\r\n                            nArrayList[j] = nArrayList[k];\r\n                            nArrayList[k] = nOldX;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (nArrayList[3] == 10) {\r\n                return;\r\n            }\r\n            else {\r\n                //判断方块的下一列是否有方块\r\n                var isHas = false;\r\n                for (var i = 3; i >= 0; i--) {\r\n                    // //将俄罗斯方块所在方格置为false\r\n                    // this.groundChild[nArrayList[i] - 1][nArrayRow[i] - 1].getComponent(\"PrefabState\").isBox = false;\r\n                    //判断方块的下一列的方块属性是否为true\r\n                    if (this.groundChild[nArrayList[i]][nArrayRow[i] - 1].getComponent(\"PrefabState\").isBox) {\r\n                        isHas = true;\r\n                    }\r\n                    if (i == 0) {\r\n                        if (isHas) {\r\n                            for (var j = 0; j <= 3; j++) {\r\n                                // //将俄罗斯方块所在方格置为true\r\n                                // this.groundChild[nArrayList[j] - 1][nArrayRow[j] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                            }\r\n                            return;\r\n                        }\r\n                        else {\r\n                            for (var k = 0; k <= 3; k++) {\r\n                                // //将下一列的方块所在方格置为true\r\n                                // this.groundChild[nArrayList[k]][nArrayRow[k] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                if (k == 3) {\r\n                                    //俄罗斯方块向右移动\r\n                                    this.nodeBlock.x += Global.nWidth;\r\n                                    if (this.nodeBlock.getComponent(\"OperateBlock\").isCollision) {\r\n                                        // //初始化 1s计时器\r\n                                        // this.nodeBlock.getComponent(\"OperateBlock\").fDownTime = 0;\r\n                                        // this.nodeBlock.getComponent(\"OperateBlock\").fCollisionTime = 0;\r\n                                    }\r\n                                    //   //初始化 1s计时器\r\n                                    //   this.nodeBlock.getComponent(\"OperateBlock\").fCollisionTime=0;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n\r\n        }\r\n    },\r\n    //生成背景\r\n    GetGround: function () {\r\n        for (var i = 0; i <= 9; i++) {\r\n            for (var j = 0; j <= 19; j++) {\r\n                var groundNode = cc.instantiate(this.groundPrefab);\r\n                groundNode.parent = this.groundParent;\r\n                groundNode.setPosition(cc.p(i * Global.nWidth, j * Global.nWidth));\r\n                this.groundChild[i].push(groundNode);\r\n            }\r\n        }\r\n    },\r\n    //便遍历俄罗斯方块火苏组，并使它们生成时为隐藏\r\n    TarvelFalse: function () {\r\n        var blockChild = this.nodeBlock.getChildren();\r\n        for (var i = 0; i <= blockChild.length - 1; i++) {\r\n            blockChild[i].active = false;\r\n        }\r\n    },\r\n    //当俄罗斯方块落下后初始化信息\r\n    OnLoadBlock: function (stringShape, nBlock, stringRotate, stringColor3) {\r\n        cc.log(stringShape);\r\n        cc.log(stringRotate);\r\n        cc.log(nBlock);\r\n        switch (stringShape) {\r\n            //  this.shapeBlock=[\"T\",\"L\",\"Long\",\"Z\",\"Square\"];\r\n            case \"Long\":\r\n                switch (nBlock) {\r\n                    case 0:\r\n                        this.nodeBlock.destroy();\r\n                        //生成俄罗斯方块\r\n                        this.nodeBlock = cc.instantiate(this.prefabLong);\r\n                        this.TarvelFalse();\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock.parent = this.blockParent;\r\n                        //随机方块位置\r\n                        this.nodeBlock.setPosition(this.setBlockPosition(\"Long\", stringRotate));\r\n                        cc.log(this.nodeBlock.getPosition());\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        // this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        break;\r\n                    case 1:\r\n                        this.nodeBlock1.destroy();\r\n                        this.nodeBlock1 = cc.instantiate(this.prefabLong);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock1.parent = this.blockParent;\r\n                        //随机方块位置\r\n                        this.nodeBlock1.setPosition(this.setBlock1Position(\"Long\", this.next1Node, stringRotate));\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        break;\r\n                    case 2:\r\n                        this.nodeBlock2.destroy();\r\n                        this.nodeBlock2 = cc.instantiate(this.prefabLong);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock2.parent = this.blockParent;\r\n                        //随机方块位置\r\n                        this.nodeBlock2.setPosition(this.setBlock1Position(\"Long\", this.next2Node, stringRotate));\r\n                        this.nodeBlock2.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock2.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        this.nodeBlock2.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        break;\r\n                }\r\n                break;\r\n            case \"Z\":\r\n                switch (nBlock) {\r\n                    case 0:\r\n                        this.nodeBlock.destroy();\r\n                        //生成俄罗斯方块\r\n                        this.nodeBlock = cc.instantiate(this.prefabZ);\r\n                        this.TarvelFalse();\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock.parent = this.blockParent;\r\n                        //随机方块位置\r\n                        this.nodeBlock.setPosition(this.setBlockPosition(\"Z\", stringRotate));\r\n                        cc.log(this.nodeBlock.getPosition());\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        // this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        break;\r\n                    case 1:\r\n                        this.nodeBlock1.destroy();\r\n                        this.nodeBlock1 = cc.instantiate(this.prefabZ);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock1.parent = this.blockParent;\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        //随机方块位置\r\n                        this.nodeBlock1.setPosition(this.setBlock1Position(\"Z\", this.next1Node, stringRotate));\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        break;\r\n                    case 2:\r\n                        this.nodeBlock2.destroy();\r\n                        this.nodeBlock2 = cc.instantiate(this.prefabZ);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock2.parent = this.blockParent;\r\n                        //随机方块位置\r\n                        this.nodeBlock2.setPosition(this.setBlock1Position(\"Z\", this.next2Node, stringRotate));\r\n                        this.nodeBlock2.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock2.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        this.nodeBlock2.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        break;\r\n                }\r\n                break;\r\n            case \"Square\":\r\n                switch (nBlock) {\r\n                    case 0:\r\n                        this.nodeBlock.destroy();\r\n                        //生成俄罗斯方块\r\n                        this.nodeBlock = cc.instantiate(this.prefabSquare);\r\n                        this.TarvelFalse();\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock.parent = this.blockParent;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        //随机方块位置\r\n                        this.nodeBlock.setPosition(this.setBlockPosition(\"Square\", stringRotate));\r\n                        cc.log(this.nodeBlock.getPosition());\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        // this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                        break;\r\n                    case 1:\r\n                        this.nodeBlock1.destroy();\r\n                        this.nodeBlock1 = cc.instantiate(this.prefabSquare);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock1.parent = this.blockParent;\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock1.setPosition(this.setBlock1Position(\"Square\", this.next1Node, stringRotate));\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                    case 2:\r\n                        this.nodeBlock2.destroy();\r\n                        this.nodeBlock2 = cc.instantiate(this.prefabSquare);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock2.parent = this.blockParent;\r\n                        //随机方块位置\r\n                        this.nodeBlock2.setPosition(this.setBlock1Position(\"Square\", this.next2Node, stringRotate));\r\n                        this.nodeBlock2.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock2.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        this.nodeBlock2.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                        break;\r\n                }\r\n                break;\r\n            case \"T\":\r\n                switch (nBlock) {\r\n                    case 0:\r\n                        this.nodeBlock.destroy();\r\n                        //生成俄罗斯方块\r\n                        this.nodeBlock = cc.instantiate(this.prefabT);\r\n                        this.TarvelFalse();\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock.parent = this.blockParent;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        //随机方块位置\r\n                        this.nodeBlock.setPosition(this.setBlockPosition(\"T\", stringRotate));\r\n                        cc.log(this.nodeBlock.getPosition());\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        // this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        break;\r\n                    case 1:\r\n                        this.nodeBlock1.destroy();\r\n                        this.nodeBlock1 = cc.instantiate(this.prefabT);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock1.parent = this.blockParent;\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock1.setPosition(this.setBlock1Position(\"T\", this.next1Node, stringRotate));\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        break;\r\n                    case 2:\r\n                        this.nodeBlock2.destroy();\r\n                        this.nodeBlock2 = cc.instantiate(this.prefabT);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock2.parent = this.blockParent;\r\n                        //随机方块位置\r\n                        this.nodeBlock2.setPosition(this.setBlock1Position(\"T\", this.next2Node, stringRotate));\r\n                        this.nodeBlock2.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock2.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        this.nodeBlock2.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        break;\r\n                }\r\n                break;\r\n            case \"L\":\r\n                switch (nBlock) {\r\n                    case 0:\r\n                        this.nodeBlock.destroy();\r\n                        //生成俄罗斯方块\r\n                        this.nodeBlock = cc.instantiate(this.prefabL);\r\n                        this.TarvelFalse();\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock.parent = this.blockParent;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        //随机方块位置\r\n                        this.nodeBlock.setPosition(this.setBlockPosition(\"L\", stringRotate));\r\n                        cc.log(this.nodeBlock.getPosition());\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        // this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        break;\r\n                    case 1:\r\n                        this.nodeBlock1.destroy();\r\n                        this.nodeBlock1 = cc.instantiate(this.prefabL);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock1.parent = this.blockParent;\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock1.setPosition(this.setBlock1Position(\"L\", this.next1Node, stringRotate));\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        break;\r\n                    case 2:\r\n                        this.nodeBlock2.destroy();\r\n                        this.nodeBlock2 = cc.instantiate(this.prefabL);\r\n                        //获取此时方块的形状\r\n                        this.nodeBlock2.parent = this.blockParent;\r\n                        //随机方块位置\r\n                        this.nodeBlock2.setPosition(this.setBlock1Position(\"L\", this.next2Node, stringRotate));\r\n                        this.nodeBlock2.getComponent(\"OperateBlock\").stringColor = stringColor3;\r\n                        this.nodeBlock2.getComponent(\"OperateBlock\").stringBoloekShape = stringShape;\r\n                        this.nodeBlock2.getComponent(\"OperateBlock\").nRotateAngle = parseInt(stringRotate);\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n\r\n    },\r\n    //生成方块\r\n    CopyBlock: function (prefabLBlock, stringShape1) {\r\n        if (this.isFirst == false) {\r\n            switch (this.nCreat) {\r\n                case 0:\r\n                    //生成俄罗斯方块\r\n                    this.nodeBlock = cc.instantiate(prefabLBlock);\r\n                    //获取此时方块的形状\r\n                    this.nodeBlock.parent = this.blockParent;\r\n                    this.TarvelFalse();\r\n                    //随机方块位置\r\n                    this.nodeBlock.setPosition(this.setBlockPosition(this.shapeBlock[this.nShape], this.rotateBlock[this.nRotate]));\r\n                    this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape = stringShape1;\r\n                    //  this.nodeBlock.getComponent(\"OperateBlock\").stringColor=this.nc;\r\n                    //  this.nodeBlock.getComponent(\"OperateBlock\").isStartDown=true;\r\n                    break;\r\n                case 1:\r\n                    //生成俄罗斯方块\r\n                    this.nodeBlock1 = cc.instantiate(prefabLBlock);\r\n                    // stringShape1 = \"L\";\r\n                    //获取此时方块的形状\r\n                    this.nodeBlock1.parent = this.blockParent;\r\n                    this.nodeBlock1.setPosition(this.setBlock1Position(this.shapeBlock[this.nShape], this.next1Node, this.rotateBlock[this.nRotate]));\r\n                    this.nodeBlock1.getComponent(\"OperateBlock\").stringBoloekShape = stringShape1;\r\n                    break;\r\n                case 2:\r\n                    this.nodeBlock2 = cc.instantiate(prefabLBlock);\r\n                    //获取此时方块的形状\r\n                    this.nodeBlock2.parent = this.blockParent;\r\n                    this.nodeBlock2.setPosition(this.setBlock1Position(this.shapeBlock[this.nShape], this.next2Node, this.rotateBlock[this.nRotate]));\r\n                    this.nodeBlock2.getComponent(\"OperateBlock\").stringBoloekShape = stringShape1;\r\n            }\r\n        }\r\n        else {\r\n            cc.log(this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle + \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\");\r\n            this.OnLoadBlock(this.nodeBlock1.getComponent(\"OperateBlock\").stringBoloekShape, 0, this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle.toString(), this.nodeBlock1.getComponent(\"OperateBlock\").stringColor);\r\n            cc.log(this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle + \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\");\r\n            this.OnLoadBlock(this.nodeBlock2.getComponent(\"OperateBlock\").stringBoloekShape, 1, this.nodeBlock2.getComponent(\"OperateBlock\").nRotateAngle.toString(), this.nodeBlock2.getComponent(\"OperateBlock\").stringColor);\r\n            var randomColor = \"\";\r\n            switch (this.shapeBlock[this.nShape]) {\r\n                case \"Long\":\r\n                    randomColor = \"blue\";\r\n                    break;\r\n                case \"Square\":\r\n                    randomColor = \"green\";\r\n                    break;\r\n                case \"Z\":\r\n                    randomColor = \"red\";\r\n                    break;\r\n                case \"T\":\r\n                    randomColor = \"yellow\";\r\n                    break;\r\n                case \"L\":\r\n                    randomColor = \"purple\";\r\n                    break;\r\n            }\r\n            this.OnLoadBlock(stringShape1, 2, this.rotateBlock[this.nRotate], randomColor);\r\n        }\r\n    },\r\n    //根据第二个俄罗斯方块的类型设置位置\r\n    setBlock1Position: function (stringShape1, nodePosition3, stringRotate) {\r\n        switch (stringShape1) {\r\n            case \"Square\":\r\n                //获取方块的世界坐标\r\n                var v2WorldY = nodePosition3.getPositionY();\r\n                var v1WorldX = nodePosition3.getPositionX() + Global.nWidth / 2;\r\n                return cc.p(v1WorldX, v2WorldY);\r\n                break;\r\n            case \"T\":\r\n                switch (stringRotate) {\r\n                    case \"0\":\r\n                        //获取方块的世界坐标\r\n                        var v2WorldY = nodePosition3.getPositionY();\r\n                        var v1WorldX = nodePosition3.getPositionX() + Global.nWidth / 2;\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                    case \"180\":\r\n                        //获取方块的世界坐标\r\n                        var v2WorldY = nodePosition3.getPositionY();\r\n                        var v1WorldX = nodePosition3.getPositionX() + Global.nWidth / 2;\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                }\r\n                break;\r\n            case \"L\":\r\n                switch (stringRotate) {\r\n                    case \"0\":\r\n                        //获取方块的世界坐标\r\n                        var v2WorldY = nodePosition3.getPositionY();\r\n                        var v1WorldX = nodePosition3.getPositionX();\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                    case \"180\":\r\n                        //获取方块的世界坐标    \r\n                        var v2WorldY = nodePosition3.getPositionY();\r\n                        var v1WorldX = nodePosition3.getPositionX() + Global.nWidth;\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                }\r\n                break;\r\n            case \"Long\":\r\n                switch (stringRotate) {\r\n                    case \"0\":\r\n                        //获取方块的世界坐标\r\n                        var v2WorldY = nodePosition3.getPositionY();\r\n                        var v1WorldX = nodePosition3.getPositionX();\r\n                        cc.log(\"000000000000000000000000000000000000\");\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                    case \"180\":\r\n                        //获取方块的世界坐标    \r\n                        var v2WorldY = nodePosition3.getPositionY();\r\n                        var v1WorldX = nodePosition3.getPositionX() + Global.nWidth;\r\n                        cc.log(\"180180180180180180180180180180180180180180180180180\");\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                }\r\n                //    return cc.p(v1WorldX,v2WorldY);\r\n                break;\r\n            case \"Z\":\r\n                switch (stringRotate) {\r\n                    case \"0\":\r\n                        //获取方块的世界坐标\r\n                        var v2WorldY = nodePosition3.getPositionY();\r\n                        var v1WorldX = nodePosition3.getPositionX();\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                    case \"180\":\r\n                        //获取方块的世界坐标    \r\n                        var v2WorldY = nodePosition3.getPositionY();\r\n                        var v1WorldX = nodePosition3.getPositionX();\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n    },\r\n    //根据俄罗斯方块类型设置位置\r\n    setBlockPosition: function (stringShape1, stringRotate) {\r\n        switch (stringShape1) {\r\n            case \"Square\":\r\n                //获取方块的世界坐标\r\n                var v2WorldY = this.groundParent.getPositionY() + 20 * Global.nWidth + Global.nWidth / 2;\r\n                //    var nRandom=Global.nWidth*3+Math.floor(cc.random0To1()*6)*Global.nWidth;\r\n                //    var v1WorldX=(nRandom+nRandom+Global.nWidth)/2;\r\n                var v1WorldX = this.groundParent.getPositionX() + Global.nWidth / 2 + 4 * Global.nWidth;\r\n                cc.log(v1WorldX);\r\n                cc.log(v2WorldY);\r\n                return cc.p(v1WorldX, v2WorldY);\r\n                break;\r\n            case \"T\":\r\n                switch (stringRotate) {\r\n                    case \"0\":\r\n                        //获取方块的世界坐标              \r\n                        var v2WorldY = this.groundParent.getPositionY() + 21 * Global.nWidth;\r\n                        var v1WorldX = this.groundParent.getPositionX() + 5 * Global.nWidth;\r\n                        cc.log(v1WorldX);\r\n                        cc.log(v2WorldY);\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                    case \"180\":\r\n                        //获取方块的世界坐标    \r\n                        var v2WorldY = this.groundParent.getPositionY() + 20 * Global.nWidth;\r\n                        var v1WorldX = this.groundParent.getPositionX() + 5 * Global.nWidth;\r\n                        cc.log(v1WorldX);\r\n                        cc.log(v2WorldY);\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                }\r\n                break;\r\n            case \"L\":\r\n                switch (stringRotate) {\r\n                    case \"0\":\r\n                        //获取方块的世界坐标\r\n                        var v2WorldY = this.groundParent.getPositionY() + 20 * Global.nWidth;\r\n                        var v1WorldX = this.groundParent.getPositionX() + 4 * Global.nWidth;\r\n                        cc.log(v1WorldX);\r\n                        cc.log(v2WorldY);\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                    case \"180\":\r\n                        //获取方块的世界坐标    \r\n                        var v2WorldY = this.groundParent.getPositionY() + 21 * Global.nWidth;\r\n                        var v1WorldX = this.groundParent.getPositionX() + 6 * Global.nWidth;\r\n                        cc.log(v1WorldX);\r\n                        cc.log(v2WorldY);\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                }\r\n                break;\r\n            case \"Long\":\r\n                switch (stringRotate) {\r\n                    case \"0\":\r\n                        //获取方块的世界坐标\r\n                        var v2WorldY = this.groundParent.getPositionY() + 20 * Global.nWidth;\r\n                        var v1WorldX = this.groundParent.getPositionX() + 4 * Global.nWidth;\r\n                        cc.log(v1WorldX);\r\n                        cc.log(v2WorldY);\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                    case \"180\":\r\n                        //获取方块的世界坐标    \r\n                        var v2WorldY = this.groundParent.getPositionY() + 21 * Global.nWidth;\r\n                        var v1WorldX = this.groundParent.getPositionX() + 5 * Global.nWidth;\r\n                        cc.log(v1WorldX);\r\n                        cc.log(v2WorldY);\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                }\r\n\r\n                break;\r\n            case \"Z\":\r\n                switch (stringRotate) {\r\n                    case \"0\":\r\n                        //获取方块的世界坐标\r\n                        var v2WorldY = this.groundParent.getPositionY() + 21 * Global.nWidth;\r\n                        var v1WorldX = this.groundParent.getPositionX() + 4 * Global.nWidth;\r\n                        cc.log(v1WorldX);\r\n                        cc.log(v2WorldY);\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                    case \"180\":\r\n                        //获取方块的世界坐标    \r\n                        var v2WorldY = this.groundParent.getPositionY() + 20 * Global.nWidth;\r\n                        var v1WorldX = this.groundParent.getPositionX() + 4 * Global.nWidth;\r\n                        cc.log(v1WorldX);\r\n                        cc.log(v2WorldY);\r\n                        return cc.p(v1WorldX, v2WorldY);\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n    },\r\n    //俄罗斯方块旋转\r\n    RotateBlock: function () {\r\n        this.isPressRotate = true;\r\n        if (this.nodeBlock.getComponent(\"OperateBlock\").isStationary == false) {\r\n            if (this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape == \"Square\") {\r\n                return;\r\n            }\r\n            else {\r\n                this.TraverseRotate();\r\n            }\r\n            this.playAudio(this.clickAudio);\r\n        }\r\n        this.isPressRotate = false;\r\n\r\n    },\r\n    playAudio : function(audioSource){\r\n        cc.audioEngine.play(audioSource,false,1);\r\n    },\r\n    //判断方块颜色\r\n    IsColor: function (stringShape3, nShape3) {\r\n        switch (stringShape3[nShape3]) {\r\n            case \"Long\":\r\n                this.ChangeColor(\"2\");\r\n                break;\r\n            case \"Square\":\r\n                this.ChangeColor(\"1\");\r\n                break;\r\n            case \"Z\":\r\n                this.ChangeColor(\"3\");\r\n                break;\r\n            case \"T\":\r\n                this.ChangeColor(\"4\");\r\n                break;\r\n            case \"L\":\r\n                this.ChangeColor(\"5\");\r\n                break;\r\n        }\r\n    },\r\n    //初始化每个俄罗斯方块的颜色\r\n    OnloadColor: function (stringColor1, nodeBlock3) {\r\n        switch (stringColor1) {\r\n            case \"1\":\r\n                nodeBlock3.getComponent(\"OperateBlock\").stringColor = \"green\";\r\n                cc.log(\"1111111111111111111111\" + nodeBlock3.getComponent(\"OperateBlock\").stringColor);\r\n                break;\r\n            case \"2\":\r\n                nodeBlock3.getComponent(\"OperateBlock\").stringColor = \"blue\";\r\n                cc.log(\"22222222222222222222\" + nodeBlock3.getComponent(\"OperateBlock\").stringColor);\r\n\r\n                break;\r\n            case \"3\":\r\n                nodeBlock3.getComponent(\"OperateBlock\").stringColor = \"red\";\r\n                cc.log(\"3333333333333333333333\" + nodeBlock3.getComponent(\"OperateBlock\").stringColor);\r\n                break;\r\n            case \"4\":\r\n                nodeBlock3.getComponent(\"OperateBlock\").stringColor = \"yellow\";\r\n                cc.log(\"3333333333333333333333\" + nodeBlock3.getComponent(\"OperateBlock\").stringColor);\r\n                break;\r\n            case \"5\":\r\n                nodeBlock3.getComponent(\"OperateBlock\").stringColor = \"purple\";\r\n                cc.log(\"3333333333333333333333\" + nodeBlock3.getComponent(\"OperateBlock\").stringColor);\r\n                break;\r\n        }\r\n\r\n    },\r\n    //改变方块颜色\r\n    ChangeColor: function (stringColor1) {\r\n        if (this.isFirst == false) {\r\n            switch (this.nCreat) {\r\n                case 0:\r\n                    var nodeBlockChild = this.nodeBlock.getChildren();\r\n                    var self = this;\r\n                    cc.loader.loadRes(\"picture/\" + stringColor1, cc.SpriteFrame, function (err, txt) {\r\n                        for (var i = 0; i <= 3; i++) {\r\n                            nodeBlockChild[i].getComponent(cc.Sprite).spriteFrame = txt;\r\n                            if (i == 3) {\r\n                                //打开下落开关\r\n                                self.nodeBlock.getComponent(\"OperateBlock\").fDownTime = Global.nTimeInteval;\r\n                            }\r\n                        }\r\n                    });\r\n                    self.OnloadColor(stringColor1, self.nodeBlock);\r\n                    break;\r\n                case 1:\r\n                    var nodeBlockChild1 = this.nodeBlock1.getChildren();\r\n                    var self = this;\r\n                    cc.loader.loadRes(\"picture/\" + stringColor1, cc.SpriteFrame, function (err, txt) {\r\n                        for (var i = 0; i <= 3; i++) {\r\n                            nodeBlockChild1[i].getComponent(cc.Sprite).spriteFrame = txt;\r\n                        }\r\n                    });\r\n                    self.OnloadColor(stringColor1, self.nodeBlock1);\r\n                    break;\r\n                case 2:\r\n                    var nodeBlockChild2 = this.nodeBlock2.getChildren();\r\n                    var self = this;\r\n                    cc.loader.loadRes(\"picture/\" + stringColor1, cc.SpriteFrame, function (err, txt) {\r\n                        for (var i = 0; i <= 3; i++) {\r\n                            nodeBlockChild2[i].getComponent(cc.Sprite).spriteFrame = txt;\r\n                        }\r\n                    });\r\n                    self.OnloadColor(stringColor1, self.nodeBlock2);\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            var nodeBlockChild = this.nodeBlock.getChildren();\r\n            // var self=this;\r\n            var stringColor0 = \"\";\r\n            switch (this.nodeBlock.getComponent(\"OperateBlock\").stringColor) {\r\n                case \"red\":\r\n                    stringColor0 = \"3\";\r\n                    break;\r\n                case \"blue\":\r\n                    stringColor0 = \"2\";\r\n                    break;\r\n                case \"green\":\r\n                    stringColor0 = \"1\";\r\n                    break;\r\n                case \"yellow\":\r\n                    stringColor0 = \"4\";\r\n                    break;\r\n                case \"purple\":\r\n                    stringColor0 = \"5\";\r\n                    break;\r\n\r\n            }\r\n            cc.loader.loadRes(\"picture/\" + stringColor0, cc.SpriteFrame, function (err, txt) {\r\n                for (var i = 0; i <= 3; i++) {\r\n                    nodeBlockChild[i].getComponent(cc.Sprite).spriteFrame = txt;\r\n                }\r\n            });\r\n            var nodeBlockChild1 = this.nodeBlock1.getChildren();\r\n            var stringColor2 = \"\";\r\n            cc.log(this.nodeBlock2.getComponent(\"OperateBlock\").stringColor);\r\n            switch (this.nodeBlock1.getComponent(\"OperateBlock\").stringColor) {\r\n                case \"red\":\r\n                    stringColor2 = \"3\";\r\n                    break;\r\n                case \"blue\":\r\n                    stringColor2 = \"2\";\r\n                    break;\r\n                case \"green\":\r\n                    stringColor2 = \"1\";\r\n                    break;\r\n                case \"yellow\":\r\n                    stringColor2 = \"4\";\r\n                    break;\r\n                case \"purple\":\r\n                    stringColor2 = \"5\";\r\n                    break;\r\n\r\n            }\r\n            cc.log(stringColor2);\r\n            for (var i = 0; i <= nodeBlockChild1.length - 1; i++) {\r\n                nodeBlockChild1[i].active = false;\r\n            }\r\n            cc.loader.loadRes(\"picture/\" + stringColor2, cc.SpriteFrame, function (err, txt) {\r\n                for (var i = 0; i <= 3; i++) {\r\n                    nodeBlockChild1[i].getComponent(cc.Sprite).spriteFrame = txt;\r\n                    if (i == 3) {\r\n                        for (var j = 0; j <= nodeBlockChild1.length - 1; j++) {\r\n                            nodeBlockChild1[j].active = true;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            var nodeBlockChild2 = this.nodeBlock2.getChildren();\r\n            for (var i = 0; i <= nodeBlockChild2.length - 1; i++) {\r\n                nodeBlockChild2[i].active = false;\r\n            }\r\n            cc.loader.loadRes(\"picture/\" + stringColor1, cc.SpriteFrame, function (err, txt) {\r\n                for (var i = 0; i <= 3; i++) {\r\n                    nodeBlockChild2[i].getComponent(cc.Sprite).spriteFrame = txt;\r\n                    if (i == 3) {\r\n                        for (var j = 0; j <= nodeBlockChild2.length - 1; j++) {\r\n                            nodeBlockChild2[j].active = true;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n        // var self = this;\r\n        // var promise=new Promise(function(resolve,reject){\r\n        //     cc.loader.loadRes(\"picture/\"+stringColor1, cc.SpriteFrame, callback);\r\n        // })\r\n        // function callback(err, txt) {\r\n        //     if(err){\r\n        //         resolve();\r\n        //     }\r\n        //     for(var i=0;i<=3;i++)\r\n        //     {\r\n        //         nodeBlockChild[i].getComponent(cc.Sprite).spriteFrame =txt;\r\n        //         if(i==3)\r\n        //         {\r\n        //              //打开下落开关\r\n        //                this.nodeBlock.getComponent(\"OperateBlock\").fDownTime=Global.nTimeInteval;\r\n        //         }\r\n        //     }\r\n        // }\r\n    },\r\n    //判断方块形状\r\n    IsShape: function (stringShape, nShape) {\r\n        switch (stringShape[nShape]) {\r\n            case \"T\":\r\n                //生成方块\r\n                this.CopyBlock(this.prefabT, \"T\");\r\n                //判断方块颜色\r\n                this.IsColor(this.shapeBlock, this.nShape);\r\n                this.IsRotate(this.rotateBlock, this.nRotate, \"T\");\r\n                //  this.nRotateAngle   \r\n                break;\r\n            case \"L\":\r\n                this.CopyBlock(this.prefabL, \"L\");\r\n                //判断方块颜色\r\n                this.IsColor(this.shapeBlock, this.nShape);\r\n                this.IsRotate(this.rotateBlock, this.nRotate, \"L\");\r\n                break;\r\n            case \"Long\":\r\n                this.CopyBlock(this.prefabLong, \"Long\");\r\n                //判断方块颜色\r\n                this.IsColor(this.shapeBlock, this.nShape);\r\n\r\n                this.IsRotate(this.rotateBlock, this.nRotate, \"Long\");\r\n                break;\r\n            case \"Z\":\r\n                this.CopyBlock(this.prefabZ, \"Z\");\r\n                //判断方块颜色\r\n                this.IsColor(this.shapeBlock, this.nShape);\r\n                this.IsRotate(this.rotateBlock, this.nRotate, \"Z\");\r\n                break;\r\n            case \"Square\":\r\n                this.CopyBlock(this.prefabSquare, \"Square\");\r\n                //判断方块颜色\r\n                this.IsColor(this.shapeBlock, this.nShape);\r\n                this.IsRotate(this.rotateBlock, this.nRotate, \"Square\");\r\n                break;\r\n        }\r\n    },\r\n    //出生时根据角度改变子块位置\r\n    ChangeRotate: function (nAngle) {\r\n        if (this.isFirst == false) {\r\n            switch (this.nCreat) {\r\n                case 0:\r\n                    //获取此方块的数组\r\n                    var nodeBoxArray = this.nodeBlock.getChildren();\r\n                    if (nAngle == 180) {\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 180;\r\n                        for (var i = 0; i <= 3; i++) {\r\n                            nodeBoxArray[i].setPosition(cc.p(nodeBoxArray[i].getPositionY(), -nodeBoxArray[i].getPositionX()));\r\n                            if (i == 3) {\r\n                                for (var j = 0; j <= 3; j++) {\r\n                                    nodeBoxArray[j].setPosition(cc.p(nodeBoxArray[j].getPositionY(), -nodeBoxArray[j].getPositionX()));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    //获取此方块的数组\r\n                    var nodeBoxArray1 = this.nodeBlock1.getChildren();\r\n                    if (nAngle == 180) {\r\n                        cc.log(\"wwwwwwwwwwwwwwwwwwwwwwwwwwwww\" + this.nodeBlock1.getComponent(\"OperateBlock\").stringBoloekShape);\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = 180;\r\n                        for (var i = 0; i <= 3; i++) {\r\n                            cc.log(\"ddddddddddddddddddddddddddddddddddd\" + this.nodeBlock1.getComponent(\"OperateBlock\").stringBoloekShape);\r\n                            nodeBoxArray1[i].setPosition(cc.p(nodeBoxArray1[i].getPositionY(), -nodeBoxArray1[i].getPositionX()));\r\n                            if (i == 3) {\r\n                                for (var j = 0; j <= 3; j++) {\r\n                                    nodeBoxArray1[j].setPosition(cc.p(nodeBoxArray1[j].getPositionY(), -nodeBoxArray1[j].getPositionX()));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    var nodeBoxArray2 = this.nodeBlock2.getChildren();\r\n                    if (nAngle == 180) {\r\n                        this.nodeBlock2.getComponent(\"OperateBlock\").nRotateAngle = 180;\r\n                        for (var i = 0; i <= 3; i++) {\r\n                            nodeBoxArray2[i].setPosition(cc.p(nodeBoxArray2[i].getPositionY(), -nodeBoxArray2[i].getPositionX()));\r\n                            if (i == 3) {\r\n                                for (var j = 0; j <= 3; j++) {\r\n                                    nodeBoxArray2[j].setPosition(cc.p(nodeBoxArray2[j].getPositionY(), -nodeBoxArray2[j].getPositionX()));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.nodeBlock2.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                    }\r\n                    break;\r\n            }\r\n            this.nCreat++;\r\n            if (this.nCreat == 3) {\r\n                this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n                this.isFirst = true;\r\n            }\r\n        }\r\n        else {\r\n            cc.log(\"ddddddddddddddddddddddddddddddddddddd\");\r\n            cc.log(this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle + \"ccccccccccccccccccccccccccccccccccccc\");\r\n            var nodeBoxArray = this.nodeBlock.getChildren();\r\n            if (this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle == 180) {\r\n                for (var i = 0; i <= 3; i++) {\r\n                    nodeBoxArray[i].setPosition(cc.p(nodeBoxArray[i].getPositionY(), -nodeBoxArray[i].getPositionX()));\r\n                    if (i == 3) {\r\n                        for (var j = 0; j <= 3; j++) {\r\n                            nodeBoxArray[j].setPosition(cc.p(nodeBoxArray[j].getPositionY(), -nodeBoxArray[j].getPositionX()));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            var nodeBoxArray1 = this.nodeBlock1.getChildren();\r\n            if (this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle == 180) {\r\n                //     cc.log(\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\r\n                //    this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle=180;\r\n                for (var i = 0; i <= 3; i++) {\r\n                    nodeBoxArray1[i].setPosition(cc.p(nodeBoxArray1[i].getPositionY(), -nodeBoxArray1[i].getPositionX()));\r\n                    if (i == 3) {\r\n                        for (var j = 0; j <= 3; j++) {\r\n                            nodeBoxArray1[j].setPosition(cc.p(nodeBoxArray1[j].getPositionY(), -nodeBoxArray1[j].getPositionX()));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            var nodeBoxArray2 = this.nodeBlock2.getChildren();\r\n            if (nAngle == 180) {\r\n                for (var i = 0; i <= 3; i++) {\r\n                    nodeBoxArray2[i].setPosition(cc.p(nodeBoxArray2[i].getPositionY(), -nodeBoxArray2[i].getPositionX()));\r\n                    if (i == 3) {\r\n                        for (var j = 0; j <= 3; j++) {\r\n                            nodeBoxArray2[j].setPosition(cc.p(nodeBoxArray2[j].getPositionY(), -nodeBoxArray2[j].getPositionX()));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n        }\r\n    },\r\n    //遍历俄罗斯方块并旋转\r\n    TraverseRotate: function () {\r\n        //获取此方块的数组\r\n        var nodeBoxArray = this.nodeBlock.getChildren();\r\n        //判断俄罗斯方块旋转之后是否含有方块\r\n        var isHasBox = false;\r\n        //判断俄罗斯方块旋转之后是否超过墙\r\n        var isOutWall = false;\r\n        //判断俄罗斯方块旋转之后是否超过背景的上方或下方、\r\n        var isOutGround = false;\r\n        //存储俄罗斯方块未旋转前的行列\r\n        var nRowY = [];\r\n        var nLineX = [];\r\n        //存入俄罗斯方块旋转后子元素的行和列\r\n        var arrayX = [];\r\n        var arrayY = [];\r\n        //将俄罗斯方块的行数从小到大排列\r\n        for (var j = 0; j <= 3; j++) {\r\n            var nX1 = (nodeBoxArray[j].getPositionX() + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n            var nY1 = (nodeBoxArray[j].getPositionY() + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n            nLineX.push(nX1);\r\n            nRowY.push(nY1);\r\n            if (j == 3) {\r\n                for (var k = 0; k <= 3; k++) {\r\n                    if (k <= 2) {\r\n                        for (var l = k + 1; l <= 3; l++) {\r\n                            if (nRowY[l] < nRowY[k]) {\r\n                                var oldX = nLineX[k];\r\n                                nLineX[k] = nLineX[l];\r\n                                nLineX[l] = oldX;\r\n                                var oldY = nRowY[k];\r\n                                nRowY[k] = nRowY[l];\r\n                                nRowY[l] = oldY;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.nodeBlock.getComponent(\"OperateBlock\").stringBoloekShape == \"Long\") {\r\n            if (nRowY[0] == 21) {\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            if (nRowY[0] >= 19) {\r\n                return;\r\n            }\r\n        }\r\n        for (var i = 0; i <= 3; i++) {\r\n            //判断旋转的字块是否为原点\r\n            var isZero = false;\r\n            //获取旋转后的坐标 \r\n            var v2RotateX = nodeBoxArray[i].getPositionY();\r\n            var v2RotateY = -nodeBoxArray[i].getPositionX();\r\n            //当旋转后的坐标与旋转前的坐标相同时\r\n            if (v2RotateX == nodeBoxArray[i].getPositionX() && v2RotateY == nodeBoxArray[i].getPositionY()) {\r\n                //将旋转前的方块置为false\r\n                var nX1 = (nodeBoxArray[i].getPositionX() + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n                var nY1 = (nodeBoxArray[i].getPositionY() + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n                if (nY1 - 1 >= 0 && nY1 - 1 <= 19) {\r\n                    nLineX.push(nX1);\r\n                    nRowY.push(nY1);\r\n                    // this.groundChild[nX1 - 1][nY1 - 1].getComponent(\"PrefabState\").isBox = false;\r\n                }\r\n                isZero = true;\r\n            }\r\n            else {\r\n                //将旋转前的方块置为false\r\n                var nX1 = (nodeBoxArray[i].getPositionX() + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n                var nY1 = (nodeBoxArray[i].getPositionY() + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n                if (nY1 - 1 >= 0 && nY1 - 1 <= 19) {\r\n                    nLineX.push(nX1);\r\n                    nRowY.push(nY1);\r\n                    // this.groundChild[nX1 - 1][nY1 - 1].getComponent(\"PrefabState\").isBox = false;\r\n                }\r\n            }\r\n            // //旋转坐标\r\n            // nodeBoxArray[i].setPosition(cc.p(nodeBoxArray[i].getPositionY(),-nodeBoxArray[i].getPositionX()));\r\n            //获取旋转后组成俄罗斯方块元素的行列\r\n            var nX = (v2RotateX + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n            var nY = (v2RotateY + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n            arrayX.push(nX);\r\n            arrayY.push(nY);\r\n            //当俄罗斯方块旋转后超过场景上方或下方时\r\n            if (nY > 20 || nY < 1) {\r\n                isOutGround = true;\r\n            }\r\n            //当超出墙壁时\r\n            if (nX > 10 || nX < 1) {\r\n                isOutWall = true;\r\n            }\r\n            else {\r\n                if (isOutGround == false) {\r\n                    if (this.groundChild[nX - 1][nY - 1].getComponent(\"PrefabState\").isBox && isZero == false) {\r\n                        isHasBox = true;\r\n                    }\r\n                }\r\n            }\r\n            if (i == 3) {\r\n                if (isHasBox == false && isOutWall == false && isOutGround == false) {\r\n                    //旋转俄罗斯方块\r\n                    for (var i = 0; i <= 3; i++) {\r\n                        //  var nX=(nodeBoxArray[i].getPositionX()+this.nodeBlock.getPositionX()-cc.find(\"GroundParent\").getPositionX())/65+1;\r\n                        //  var nY=(nodeBoxArray[i].getPositionY()+this.nodeBlock.getPositionY()-cc.find(\"GroundParent\").getPositionY())/65+1; \r\n                        //  this.groundChild[nX-1][nY-1].getComponent(\"PrefabState\").isBox=false;\r\n                        nodeBoxArray[i].setPosition(cc.p(nodeBoxArray[i].getPositionY(), -nodeBoxArray[i].getPositionX()));\r\n                        var nX1 = (nodeBoxArray[i].getPositionX() + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n                        var nY1 = (nodeBoxArray[i].getPositionY() + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n                        // this.groundChild[nX1 - 1][nY1 - 1].getComponent(\"PrefabState\").isBox = true;\r\n                    }\r\n                    //初始化 1s计时器\r\n                    this.nodeBlock.getComponent(\"OperateBlock\").fCollisionTime = 0;\r\n                    this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle += 90;\r\n                    if (this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle == 360) {\r\n                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                    }\r\n                }\r\n                if (isHasBox) {\r\n                    // //将置为false的方块还原属性\r\n                    // for (var i = 0; i <= nLineX.length - 1; i++) {\r\n                    //     this.groundChild[nLineX[i] - 1][nRowY[i] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                    // }\r\n                }\r\n                //当旋转以后超过游戏场景上方或下方\r\n                if (isOutGround) {\r\n                    for (var j = 0; j <= 3; j++) {\r\n                        if (j == 3) {\r\n                            //将旋转后的行数从小到大排列\r\n                            for (var k = 0; k <= 3; k++) {\r\n                                if (k <= 2) {\r\n                                    for (var l = k + 1; l <= 3; l++) {\r\n                                        if (arrayY[l] < arrayY[k]) {\r\n                                            var oldX = arrayX[k];\r\n                                            arrayX[k] = arrayX[l];\r\n                                            arrayX[l] = oldX;\r\n\r\n                                            var oldY = arrayY[k];\r\n                                            arrayY[k] = arrayY[l];\r\n                                            arrayY[l] = oldY;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (k == 3) {\r\n\r\n                                    if (arrayY[3] > 20) {\r\n                                        //向下移动的单位个数\r\n                                        var nMove = arrayY[3] - 20;\r\n                                        //存取移动后的行 ，列\r\n                                        var nMoveX = [];\r\n                                        var nMoveY = [];\r\n                                        //存取移动过后的位置\r\n                                        var arrayMoveX = [];\r\n                                        var arrayMoveY = [];\r\n                                        //判断旋转移动后是否有方块\r\n                                        var isHasBox = false;\r\n                                        for (var l = 0; l <= 3; l++) {\r\n                                            //  //获取旋转前的行列\r\n                                            //  var nX0=(nodeBoxArray[i].getPositionX()+this.nodeBlock.getPositionX()-cc.find(\"GroundParent\").getPositionX())/65+1;\r\n                                            //  var nY0=(nodeBoxArray[i].getPositionY()+this.nodeBlock.getPositionY()-cc.find(\"GroundParent\").getPositionY())/65+1;\r\n                                            //  this.groundChild[nX0-1][nY0-1].getComponent(\"PrefabState\").isBox=false;\r\n                                            //获取旋转后的坐标 \r\n                                            var v2RotateX = nodeBoxArray[l].getPositionY();\r\n                                            var v2RotateY = -nodeBoxArray[l].getPositionX();\r\n                                            // //获取移动后的坐标\r\n                                            var v2RotateY1 = v2RotateY - Global.nWidth * nMove;\r\n                                            //获取移动后俄罗斯方块元素的行列\r\n                                            var nX1 = (v2RotateX + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n\r\n                                            var nY1 = (v2RotateY1 + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n\r\n                                            if (this.groundChild[nX1 - 1][nY1 - 1].getComponent(\"PrefabState\").isBox) {\r\n                                                isHasBox = true;\r\n                                            }\r\n                                            //获取本地坐标\r\n                                            var positionX = v2RotateX;\r\n                                            var positionY = v2RotateY1;\r\n                                            arrayMoveX.push(positionX);\r\n                                            arrayMoveY.push(positionY);\r\n                                            //  nodeBoxArray[i].setPosition(cc.p(positionX,positionY));\r\n                                            nMoveX.push(nX1);\r\n                                            nMoveY.push(nY1);\r\n                                            if (l == 3) {\r\n                                                if (isHasBox) {\r\n\r\n                                                    // //还原未旋转移动前的box的true属性\r\n                                                    // for (var j = 0; j <= 3; j++) {\r\n                                                    //     this.groundChild[nLineX[j] - 1][nRowY[j] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                                    // }\r\n                                                    return;\r\n                                                }\r\n                                                else {\r\n                                                    //初始化 1s计时器\r\n                                                    this.nodeBlock.getComponent(\"OperateBlock\").fCollisionTime = 0;\r\n                                                    this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle += 90;\r\n                                                    if (this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle == 360) {\r\n                                                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                                                    }\r\n                                                    for (var i = 0; i <= 3; i++) {\r\n                                                        //获取旋转后的坐标 \r\n                                                        var v2RotateX = nodeBoxArray[i].getPositionY();\r\n                                                        var v2RotateY = -nodeBoxArray[i].getPositionX();\r\n                                                        nodeBoxArray[i].setPosition(cc.p(v2RotateX, v2RotateY));\r\n                                                        if (i == 3) {\r\n                                                            this.nodeBlock.y -= Global.nWidth * nMove;\r\n                                                        }\r\n                                                        // //将旋转移动后的方块置为true\r\n                                                        // this.groundChild[nMoveX[i] - 1][nMoveY[i] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    if (arrayY[0] < 1) {\r\n                                        //向上移动的单位个数\r\n                                        var nMove = 1 - arrayY[0];\r\n                                        //存取移动后的行 ，列\r\n                                        var nMoveX = [];\r\n                                        var nMoveY = [];\r\n                                        //存取移动过后的位置\r\n                                        var arrayMoveX = [];\r\n                                        var arrayMoveY = [];\r\n                                        //判断旋转移动后是否有方块\r\n                                        var isHasBox = false;\r\n                                        for (var l = 0; l <= 3; l++) {\r\n                                            //获取旋转后的坐标 \r\n                                            var v2RotateX = nodeBoxArray[l].getPositionY();\r\n                                            var v2RotateY = -nodeBoxArray[l].getPositionX();\r\n                                            //获取移动后的坐标\r\n                                            var v2RotateY1 = v2RotateY + Global.nWidth * nMove;\r\n                                            //获取移动后俄罗斯方块元素的行列\r\n                                            var nX1 = (v2RotateX + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n                                            var nY1 = (v2RotateY1 + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n\r\n                                            if (this.groundChild[nX1 - 1][nY1 - 1].getComponent(\"PrefabState\").isBox) {\r\n                                                isHasBox = true;\r\n                                            }\r\n                                            //获取本地坐标\r\n                                            var positionX = v2RotateX;\r\n                                            var positionY = v2RotateY1;\r\n                                            arrayMoveX.push(positionX);\r\n                                            arrayMoveY.push(positionY);\r\n                                            //  nodeBoxArray[i].setPosition(cc.p(positionX,positionY));\r\n                                            nMoveX.push(nX1);\r\n                                            nMoveY.push(nY1);\r\n                                            if (l == 3) {\r\n                                                if (isHasBox) {\r\n                                                    // //还原未旋转移动前的box的true属性\r\n                                                    // for (var j = 0; j <= 3; j++) {\r\n                                                    //     this.groundChild[nLineX[j] - 1][nRowY[j] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                                    // }\r\n                                                    return;\r\n                                                }\r\n                                                else {\r\n                                                    //初始化 1s计时器\r\n                                                    this.nodeBlock.getComponent(\"OperateBlock\").fCollisionTime = 0;\r\n                                                    this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle += 90;\r\n                                                    if (this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle == 360) {\r\n                                                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                                                    }\r\n                                                    for (var i = 0; i <= 3; i++) {\r\n                                                        //获取旋转后的坐标 \r\n                                                        var v2RotateX = nodeBoxArray[i].getPositionY();\r\n                                                        var v2RotateY = -nodeBoxArray[i].getPositionX();\r\n                                                        nodeBoxArray[i].setPosition(cc.p(v2RotateX, v2RotateY));\r\n                                                        if (i == 3) {\r\n                                                            this.nodeBlock.y += Global.nWidth * nMove;\r\n                                                        }\r\n                                                        // //将旋转移动后的方块置为true\r\n                                                        // this.groundChild[nMoveX[i] - 1][nMoveY[i] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n                //当旋转以后超过墙时\r\n                if (isOutWall) {\r\n                    for (var j = 0; j <= 3; j++) {\r\n                        if (j == 3) {\r\n                            //将旋转后的列数从小到大排列\r\n                            for (var k = 0; k <= 3; k++) {\r\n                                if (k <= 2) {\r\n                                    for (var l = k + 1; l <= 3; l++) {\r\n                                        if (arrayX[l] < arrayX[k]) {\r\n                                            var oldX = arrayX[k];\r\n                                            arrayX[k] = arrayX[l];\r\n                                            arrayX[l] = oldX;\r\n                                            var oldY = arrayY[k];\r\n                                            arrayY[k] = arrayY[l];\r\n                                            arrayY[l] = oldY;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (k == 3) {\r\n                                    cc.log(arrayX);\r\n                                    if (arrayX[3] > 10) {\r\n                                        cc.log(\"777777777777777777777777\");\r\n                                        //向左移动的单位个数\r\n                                        var nMove = arrayX[3] - 10;\r\n                                        //存取移动后的行 ，列\r\n                                        var nMoveX = [];\r\n                                        var nMoveY = [];\r\n                                        //存取移动过后的位置\r\n                                        var arrayMoveX = [];\r\n                                        var arrayMoveY = [];\r\n                                        //判断旋转移动后是否有方块\r\n                                        var isHasBox = false;\r\n                                        for (var l = 0; l <= 3; l++) {\r\n                                            //  //获取旋转前的行列\r\n                                            //  var nX0=(nodeBoxArray[i].getPositionX()+this.nodeBlock.getPositionX()-cc.find(\"GroundParent\").getPositionX())/65+1;\r\n                                            //  var nY0=(nodeBoxArray[i].getPositionY()+this.nodeBlock.getPositionY()-cc.find(\"GroundParent\").getPositionY())/65+1;\r\n                                            //  this.groundChild[nX0-1][nY0-1].getComponent(\"PrefabState\").isBox=false;\r\n                                            //获取旋转后的坐标 \r\n                                            var v2RotateX = nodeBoxArray[l].getPositionY();\r\n                                            var v2RotateY = -nodeBoxArray[l].getPositionX();\r\n                                            //获取移动后的坐标\r\n                                            var v2RotateX1 = v2RotateX - Global.nWidth * nMove;\r\n                                            //获取移动后俄罗斯方块元素的行列\r\n                                            var nX1 = (v2RotateX1 + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n\r\n                                            var nY1 = (v2RotateY + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n                                            if (this.groundChild[nX1 - 1][nY1 - 1].getComponent(\"PrefabState\").isBox) {\r\n                                                cc.log(\"666666666666\");\r\n                                                isHasBox = true;\r\n                                            }\r\n                                            //获取本地坐标\r\n                                            var positionX = v2RotateX1;\r\n                                            var positionY = v2RotateY;\r\n                                            arrayMoveX.push(positionX);\r\n                                            arrayMoveY.push(positionY);\r\n                                            //  nodeBoxArray[i].setPosition(cc.p(positionX,positionY));\r\n                                            nMoveX.push(nX1);\r\n                                            nMoveY.push(nY1);\r\n                                            if (l == 3) {\r\n                                                if (isHasBox) {\r\n                                                    // //还原未旋转移动前的box的true属性\r\n                                                    // for (var j = 0; j <= 3; j++) {\r\n                                                    //     this.groundChild[nLineX[j] - 1][nRowY[j] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                                    // }\r\n                                                    return;\r\n                                                }\r\n                                                else {\r\n                                                    cc.log(\"55555555555\");\r\n                                                    //初始化 1s计时器\r\n                                                    this.nodeBlock.getComponent(\"OperateBlock\").fCollisionTime = 0;\r\n                                                    this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle += 90;\r\n                                                    if (this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle == 360) {\r\n                                                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                                                    }\r\n                                                    for (var i = 0; i <= 3; i++) {\r\n                                                        //获取旋转后的坐标 \r\n                                                        var v2RotateX = nodeBoxArray[i].getPositionY();\r\n                                                        var v2RotateY = -nodeBoxArray[i].getPositionX();\r\n                                                        nodeBoxArray[i].setPosition(cc.p(v2RotateX, v2RotateY));\r\n                                                        if (i == 3) {\r\n                                                            this.nodeBlock.x -= Global.nWidth * nMove;\r\n                                                        }\r\n                                                        // //将旋转移动后的方块置为true\r\n                                                        // this.groundChild[nMoveX[i] - 1][nMoveY[i] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                                    }\r\n\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    if (arrayX[0] < 1) {\r\n                                        //向右移动的单位个数\r\n                                        var nMove = 1 - arrayX[0];\r\n                                        //存取移动后的行 ，列\r\n                                        var nMoveX = [];\r\n                                        var nMoveY = [];\r\n                                        //存取移动过后的位置\r\n                                        var arrayMoveX = [];\r\n                                        var arrayMoveY = [];\r\n                                        //判断旋转移动后是否有方块\r\n                                        var isHasBox = false;\r\n                                        for (var l = 0; l <= 3; l++) {\r\n                                            //获取旋转后的坐标 \r\n                                            var v2RotateX = nodeBoxArray[l].getPositionY();\r\n                                            var v2RotateY = -nodeBoxArray[l].getPositionX();\r\n                                            //获取移动后的坐标\r\n                                            var v2RotateX1 = v2RotateX + Global.nWidth * nMove;\r\n\r\n                                            //获取移动后俄罗斯方块元素的行列\r\n                                            var nX1 = (v2RotateX1 + this.nodeBlock.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n\r\n                                            var nY1 = (v2RotateY + this.nodeBlock.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n                                            if (this.groundChild[nX1 - 1][nY1 - 1].getComponent(\"PrefabState\").isBox) {\r\n                                                isHasBox = true;\r\n                                            }\r\n                                            //获取本地坐标\r\n                                            var positionX = v2RotateX1;\r\n                                            var positionY = v2RotateY;\r\n                                            arrayMoveX.push(positionX);\r\n                                            arrayMoveY.push(positionY);\r\n                                            //  nodeBoxArray[i].setPosition(cc.p(positionX,positionY));\r\n                                            nMoveX.push(nX1);\r\n                                            nMoveY.push(nY1);\r\n                                            if (l == 3) {\r\n                                                if (isHasBox) {\r\n                                                    // //还原未旋转移动前的box的true属性\r\n                                                    // for (var j = 0; j <= 3; j++) {\r\n                                                    //     this.groundChild[nLineX[j] - 1][nRowY[j] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                                    // }\r\n                                                    return;\r\n                                                }\r\n                                                else {\r\n                                                    //初始化 1s计时器\r\n                                                    this.nodeBlock.getComponent(\"OperateBlock\").fCollisionTime = 0;\r\n                                                    this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle += 90;\r\n                                                    if (this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle == 360) {\r\n                                                        this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                                                    }\r\n                                                    for (var i = 0; i <= 3; i++) {\r\n                                                        //获取旋转后的坐标 \r\n                                                        var v2RotateX = nodeBoxArray[i].getPositionY();\r\n                                                        var v2RotateY = -nodeBoxArray[i].getPositionX();\r\n                                                        nodeBoxArray[i].setPosition(cc.p(v2RotateX, v2RotateY));\r\n                                                        if (i == 3) {\r\n                                                            this.nodeBlock.x += Global.nWidth * nMove;\r\n                                                        }\r\n                                                        // //将旋转移动后的方块置为true\r\n                                                        // this.groundChild[nMoveX[i] - 1][nMoveY[i] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                                    }\r\n\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    // //初始化俄罗斯方块旋转角度\r\n    // OnloadRotate:function(stringRotate,nRotate){\r\n    // },\r\n    //判断方块角度\r\n    IsRotate: function (stringRotate, nRotate, stringShape2) {\r\n        if (stringShape2 != \"Square\") {\r\n            switch (stringRotate[nRotate]) {\r\n                case \"0\":\r\n                    this.ChangeRotate(0);\r\n                    break;\r\n                case \"180\":\r\n                    this.ChangeRotate(180);\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            //  this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle=0;\r\n            switch (this.nCreat) {\r\n                case 0:\r\n                    this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                    break;\r\n                case 1:\r\n                    this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                    break;\r\n                case 2:\r\n                    this.nodeBlock2.getComponent(\"OperateBlock\").nRotateAngle = 0;\r\n                    break;\r\n            }\r\n            if (this.isFirst) {\r\n                var nodeBoxArray = this.nodeBlock.getChildren();\r\n                cc.log(\"ppppppppppppppppppppppppppppppppppppppp\" + this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle);\r\n                if (this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle == 180) {\r\n                    cc.log(\"qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\" + this.nodeBlock.getComponent(\"OperateBlock\").nRotateAngle);\r\n                    for (var i = 0; i <= 3; i++) {\r\n                        nodeBoxArray[i].setPosition(cc.p(nodeBoxArray[i].getPositionY(), -nodeBoxArray[i].getPositionX()));\r\n                        if (i == 3) {\r\n                            for (var j = 0; j <= 3; j++) {\r\n                                nodeBoxArray[j].setPosition(cc.p(nodeBoxArray[j].getPositionY(), -nodeBoxArray[j].getPositionX()));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                var nodeBoxArray1 = this.nodeBlock1.getChildren();\r\n                if (this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle == 180) {\r\n                    //     cc.log(\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\r\n                    //    this.nodeBlock1.getComponent(\"OperateBlock\").nRotateAngle=180;\r\n                    for (var i = 0; i <= 3; i++) {\r\n                        nodeBoxArray1[i].setPosition(cc.p(nodeBoxArray1[i].getPositionY(), -nodeBoxArray1[i].getPositionX()));\r\n                        if (i == 3) {\r\n                            for (var j = 0; j <= 3; j++) {\r\n                                nodeBoxArray1[j].setPosition(cc.p(nodeBoxArray1[j].getPositionY(), -nodeBoxArray1[j].getPositionX()));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                var nodeBoxArray2 = this.nodeBlock2.getChildren();\r\n                if (parseInt(stringRotate[nRotate]) == 180) {\r\n                    for (var i = 0; i <= 3; i++) {\r\n                        nodeBoxArray2[i].setPosition(cc.p(nodeBoxArray2[i].getPositionY(), -nodeBoxArray2[i].getPositionX()));\r\n                        if (i == 3) {\r\n                            for (var j = 0; j <= 3; j++) {\r\n                                nodeBoxArray2[j].setPosition(cc.p(nodeBoxArray2[j].getPositionY(), -nodeBoxArray2[j].getPositionX()));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n            }\r\n            this.nCreat++;\r\n            if (this.nCreat == 3) {\r\n                this.nodeBlock.getComponent(\"OperateBlock\").isStartDown = true;\r\n                this.isFirst = true;\r\n            }\r\n        }\r\n    },\r\n    //随机生成俄罗斯方块\r\n    GetBlock: function () {\r\n        //声明颜色数组\r\n        this.colorBlock = [\"blue\", \"green\", \"red\"];\r\n        //声明形状数组\r\n        this.shapeBlock = [\"T\", \"L\", \"Long\", \"Z\", \"Square\"];\r\n        //声明角度数组\r\n        this.rotateBlock = [\"0\", \"180\"];\r\n        this.nColor = Math.floor(cc.random0To1() * 3);\r\n        this.nShape = Math.floor(cc.random0To1() * 5);\r\n        this.nRotate = Math.floor(cc.random0To1() * 2);\r\n        //初始化声称俄罗斯方块的个数\r\n        if (this.isFirst == false) {\r\n            //根据俄罗斯方块形状生成\r\n            this.IsShape(this.shapeBlock, this.nShape);\r\n            this.nRotate = Math.floor(cc.random0To1() * 2);\r\n            this.nColor = Math.floor(cc.random0To1() * 3);\r\n            this.nShape = Math.floor(cc.random0To1() * 5);\r\n            // this.nShape = 1;\r\n            // this.nRotate = 1;\r\n            //根据俄罗斯方块形状生成下一个\r\n            this.IsShape(this.shapeBlock, this.nShape);\r\n            this.nRotate = Math.floor(cc.random0To1() * 2);\r\n            this.nColor = Math.floor(cc.random0To1() * 3);\r\n            this.nShape = Math.floor(cc.random0To1() * 5);\r\n            //根据俄罗斯方块形状生成\r\n            this.IsShape(this.shapeBlock, this.nShape);\r\n        }\r\n        else {\r\n            //根据俄罗斯方块形状生成\r\n            this.IsShape(this.shapeBlock, this.nShape);\r\n        }\r\n    },\r\n    //获取子块在地板父体下的坐标\r\n    GetBoxNode: function (childBox) {\r\n        //获取子块在地板附体下的行列\r\n        var nX = (childBox.getPositionX() + this.nodeBlock.getPositionX() - this.groundParent.getPositionX()) / Global.nWidth + 1;\r\n        var nY = (childBox.getPositionY() + this.nodeBlock.getPositionY() - this.groundParent.getPositionY()) / Global.nWidth + 1;\r\n        cc.log(nX);\r\n        cc.log(nY);\r\n        var x = this.groundChild[nX - 1][nY - 1].getPositionX();\r\n        var y = this.groundChild[nX - 1][nY - 1].getPositionY();\r\n        return cc.p(x, y);\r\n    },\r\n    //遍历全局字块数组并消除整行方块isBox都为true的节点\r\n    TraversalNodeBox: function (nPositionY) {\r\n        // var boxParent1=this.boxParent.getChildren();\r\n        var nLength = this.boxParent1.length;\r\n        //存储被销毁的俄罗斯方块数组的下标\r\n        var nDestroy = [];\r\n        cc.log(nPositionY + \"nPositionY\");\r\n        for (var j = 0; j <= nLength - 1; j++) {\r\n            cc.log(this.boxParent1[j].getPositionY());\r\n        }\r\n        //    cc.log(boxParent1[0].getPositionY());\r\n        //    cc.log(nPositionY);\r\n        for (var i = 0; i <= nLength - 1; i++) {\r\n            // var boxParent1=this.boxParent.getChildren();\r\n            if (this.boxParent1[i].getPositionY() == nPositionY) {\r\n                //销毁该俄罗斯方块自方块\r\n                this.boxParent1[i].destroy();\r\n            }\r\n        }\r\n    },\r\n    //快速下落\r\n    DownQuick: function () {\r\n        if (this.nodeBlock.getComponent(\"OperateBlock\").isCollision == false) {\r\n\r\n            this.nodeBlock.getComponent(\"OperateBlock\").fDownTime = Global.nTimeInteval;\r\n        }\r\n        else {\r\n            this.nodeBlock.getComponent(\"OperateBlock\").bCollisionOne = true;\r\n        }\r\n    },\r\n    //遍历全局字块数组并将最高消层数以上的方块下落\r\n    BoxDown: function (nMaxDisappea, nDisappearAll) {\r\n        for (var i = nMaxDisappea + 1; i <= 19; i++) {\r\n            for (var j = 0; j <= 9; j++) {\r\n                if (this.groundChild[j][i].getComponent(\"PrefabState\").isBox) {\r\n                    for (var l = 0; l <= this.boxParent1.length - 1; l++) {\r\n                        if (this.boxParent1[l].getPositionY() == this.groundChild[j][i].getPositionY() && this.boxParent1[l].getPositionX() == this.groundChild[j][i].getPositionX()) {\r\n                            this.boxParent1[l].setPosition(cc.p(this.groundChild[j][i].getPositionX(), this.groundChild[j][i].getPositionY() - Global.nWidth * nDisappearAll));\r\n                        }\r\n                    }\r\n                    this.groundChild[j][i].getComponent(\"PrefabState\").isBox = false;\r\n                    this.groundChild[j][i - nDisappearAll].getComponent(\"PrefabState\").isBox = true;\r\n                }\r\n\r\n            }\r\n        }\r\n    },\r\n    //遍历游戏场景的字块中的isBox属性是否为true,并消除代码\r\n    DisappearBox: function () {\r\n        //初始化消行行数\r\n        var nDisappear = [];\r\n        \r\n        for (var i = 0; i <= 19; i++) {\r\n            for (var j = 0; j <= 9; j++) {\r\n                if (j == 0) {\r\n                    //判断i行有多少个true\r\n                    this.nTrue = 0;\r\n                }\r\n                if (this.groundChild[j][i].getComponent(\"PrefabState\").isBox) {\r\n                    this.nTrue++;\r\n                }\r\n                if (j == 9) {\r\n                    for (var a = 0; a <= 9; a++) {\r\n                        cc.log(this.groundChild[a][i].getComponent(\"PrefabState\").isBox);\r\n                    }\r\n                    if (this.nTrue == 10) {\r\n                        cc.log(\"ppppppppppppppppppppppppppppppppppppp\");\r\n                        this.playAudio(this.removeAudio);\r\n                        //遍历全局字块数组并消除整行方块isBox都为true的节点\r\n                        this.TraversalNodeBox(this.groundChild[j][i].getPositionY());\r\n                        //将消除的方块的isBox重置false\r\n                        for (var k = 0; k <= 9; k++) {\r\n                            this.groundChild[k][i].getComponent(\"PrefabState\").isBox = false;\r\n                        }\r\n                        nDisappear.push(i);\r\n                    }\r\n                    if (i == 19 && nDisappear.length != 0) {\r\n                        //当消行层总数为1行是\r\n                        if (nDisappear.length == 1) {\r\n                            this.BoxDown(nDisappear[0], nDisappear.length);\r\n                        }\r\n                        else {\r\n                            //从小到达排序行数\r\n                            for (var k = 0; k <= nDisappear.length - 1; k++) {\r\n                                for (var l = k + 1; l <= nDisappear.length - 1; l++) {\r\n                                    if (k <= 2) {\r\n                                        if (nDisappear[l] < nDisappear[k]) {\r\n                                            var nMin = nDisappear[k];\r\n                                            nDisappear[k] = nDisappear[l];\r\n                                            nDisappear[l] = nMin;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            this.BoxDown(nDisappear[nDisappear.length - 1], nDisappear.length);\r\n                        }\r\n                        this.ShowScore(nDisappear.length, this.nodeScore1);\r\n                        cc.log(nDisappear.length + \"DisappearBox\");\r\n                        this.disappearAll += nDisappear.length;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //获取俄罗斯方块的列数\r\n    GetBlockLine: function () {\r\n        var nLine = (this.nodeBlock.getPositionX() - this.groundParent.getPositionX()) / Global.nWidth + 1;\r\n        return nLine;\r\n    },\r\n    getTouchLine : function(buttonNode,worldPosition){\r\n        console.log(\"进入我的方法了\");\r\n        //将触点的x坐标转化为本地坐标系\r\n        var localX = buttonNode.convertToNodeSpaceAR(cc.v2(worldPosition.x,worldPosition.y)).x;\r\n        cc.log(\"local is \" + localX);\r\n        if(localX > 0){\r\n             var n1 = Math.floor(localX/(buttonNode.width/10));\r\n             if(n1 >= 0 && n1 < 1){\r\n                this.nCol = 6;\r\n             }else if(n1 >= 1 && n1 < 2){\r\n                 this.nCol = 7;\r\n             }else if(n1 >= 2 && n1 < 3){\r\n                 this.nCol = 8;\r\n             }else if(n1 >= 3 && n1 < 4){\r\n                 this.nCol = 9;\r\n             }else if(n1 >= 4 && n1 < 5){\r\n                 this.nCol = 10;\r\n             }\r\n        }else if(localX < 0){\r\n            var n2 = Math.floor(-localX/(buttonNode.width/10));\r\n            if(n2 >= 0 && n2 < 1){\r\n               this.nCol = 5;\r\n           }else if(n2 >= 1 && n2 < 2){\r\n               this.nCol = 4;\r\n           }else if(n2 >= 2 && n2 < 3){\r\n               this.nCol = 3;\r\n           }else if(n2 >= 3 && n2 < 4){\r\n               this.nCol = 2;\r\n           }else if(n2 >= 4 && n2 < 5){\r\n               this.nCol = 1;\r\n           }\r\n        }\r\n        if(this.nCol >= 10){\r\n            this.nCol = 10;\r\n        }\r\n        if(this.nCol <= 1){\r\n            this.nCol = 1;\r\n        }\r\n        return this.nCol;\r\n   },\r\n    //返回触摸点对应的俄罗斯方块的列数\r\n    GetTouchLine: function (worldPosition) {\r\n        //将触摸点的横坐标转化为本地坐标\r\n        var nodePosition = worldPosition - (this.nodeMove1.getPositionX() + this.nodeCanvas.getPositionX());\r\n        if (nodePosition > 0) {\r\n            var nWidth1 = Math.floor(nodePosition / (this.nodeMove1.width / 20));\r\n            if (nWidth1 == 0 || nWidth1 == 1) {\r\n                this.nLine = 6;\r\n            }\r\n            else if (nWidth1 == 2 || nWidth1 == 3) {\r\n                this.nLine = 7;\r\n            }\r\n            else if (nWidth1 == 4 || nWidth1 == 5) {\r\n                this.nLine = 8;\r\n            }\r\n            else if (nWidth1 == 6 || nWidth1 == 7) {\r\n                this.nLine = 9;\r\n            }\r\n            else {\r\n                this.nLine = 10;\r\n            }\r\n\r\n            return this.nLine;\r\n        }\r\n        if (nodePosition < 0) {\r\n            var nWidth1 = Math.floor((-nodePosition) / (this.nodeMove1.width / 20));\r\n           \r\n            if (nWidth1 == 0 || nWidth1 == 1) {\r\n                this.nLine = 5;\r\n\r\n            }\r\n            else if (nWidth1 == 2 || nWidth1 == 3) {\r\n                this.nLine = 4;\r\n\r\n            }\r\n            else if (nWidth1 == 4 || nWidth1 == 5) {\r\n                this.nLine = 3;\r\n\r\n            }\r\n            else if (nWidth1 == 6 || nWidth1 == 7) {\r\n                this.nLine = 2;\r\n            }\r\n            else {\r\n                this.nLine = 1;\r\n            }\r\n            return this.nLine;\r\n        }\r\n    },\r\n    shareButton : function(){\r\n        if(CC_WECHATGAME){\r\n            console.log(\"首页share\");\r\n            cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").shareFriends();\r\n        }else if(cc.sys.isNative){\r\n            //原生平台分享\r\n            cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nativeShare();\r\n        }\r\n    },\r\n    update(dt) {\r\n        this.invalidRemoveTime += dt;\r\n        //告诉服务器不要断开连接\r\n        if(this.invalidRemoveTime >= 60){\r\n            console.log(\"发送给服务器消息防止自己不被踢出\");\r\n            var url = 'https://m5.ykplay.com/KeepLink';\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\r\n                    var response = xhr.responseText;\r\n                    console.log(response);\r\n                }\r\n            };\r\n            xhr.open(\"GET\", url, true);\r\n            xhr.send();\r\n            //发送长连接请求\r\n            if(cc.sys.isNative || (CC_WECHATGAME)){\r\n                var sendData = {\r\n                    tag1 : 0,\r\n                    score :  \"\",\r\n                    type : \"\"\r\n                }\r\n                // var dataString = JSON.stringify(sendData);\r\n                // console.log(\"dataString is \",dataString);\r\n                cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg(sendData);\r\n            }\r\n            this.invalidRemoveTime = 0;\r\n        }\r\n        if (this.nodeBlock.getComponent(\"OperateBlock\").isGameOver) {\r\n            cc.log(\"=======================================================\");\r\n            cc.find(\"New Sprite(Splash)\").opacity = 120;\r\n            this.overBackGround.active = true;\r\n            if (this.isShowScore == false) {\r\n                //显示结束fenshu\r\n                cc.find(\"New Node/New Labela\").getComponent(cc.Label).string += cc.find(\"UserScore\").getComponent(cc.Label).string;\r\n                this.isShowScore = true;\r\n            }\r\n           this.stopNode.getComponent(cc.Button).interactable=false;\r\n            this.nTime +=dt;\r\n            if(this.nTime>=4)\r\n            {\r\n                cc.director.loadScene(\"OneChoose\");\r\n            }\r\n            if(cc.sys.localStorage.getItem('maxScoreTetris') === undefined){\r\n                //设置值\r\n                cc.sys.localStorage.setItem('maxScoreTetris',this.score);\r\n            }else{\r\n                if(this.score > cc.sys.localStorage.getItem('maxScoreTetris')){\r\n                    console.log(\"即将保存到微信托管平台。。。\");\r\n                    //设置值\r\n                    cc.sys.localStorage.setItem('maxScoreTetris',this.score);\r\n                    //将最高分数保存起来\r\n                    cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").tetrisTopScore = this.score.toString();\r\n                    // let username = cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").nameUser;\r\n                    //将最高分上传到微信托管平台\r\n                    cc.find(\"PebmanentNode\").getComponent(\"UserInfo\").postMessage(\"SaveScore\",\"tetrisRankScore\",this.score.toString());\r\n                }\r\n                console.log(\"俄罗斯方块的最高分是: \",cc.sys.localStorage.getItem('maxScoreTetris'));\r\n            }\r\n        }\r\n        if (this.isOutSlide == false) {\r\n          cc.log(\"isOutSlide\");\r\n            cc.find(\" Canvas/SlideAcross/43\").opacity = 120;\r\n        }\r\n        else {\r\n            cc.find(\" Canvas/SlideAcross/43\").opacity = 0;\r\n        }\r\n        if (this.isOutDown == false) {\r\n            cc.find(\" Canvas/QuickDown/44\").opacity = 120;\r\n        }\r\n        else {\r\n            cc.find(\" Canvas/QuickDown/44\").opacity = 0;\r\n        }\r\n        if (this.isPressRotate) {\r\n            this.RotateBlock();\r\n            cc.find(\" Canvas/RotateNode/44\").opacity = 120;\r\n        }\r\n        else {\r\n            cc.find(\" Canvas/RotateNode/44\").opacity = 0;\r\n        }\r\n\r\n        if (cc.sys.isNative) {\r\n            if ((this.isOutSlide == false || this.gameSlide == false) && this.nodeBlock.getComponent(\"OperateBlock\").isGameOver == false) {\r\n                console.log(\"44444444444444444444444444444444444444\");\r\n                //当触摸点的列大于俄罗斯方块的列数\r\n                if(!this.isOutSlide){\r\n                    if (this.getTouchLine(this.nodeMove1,this.positionTouchX) > this.GetBlockLine()) {\r\n                        //执行向右移动代码\r\n                        this.MoveRight(this.getTouchLine(this.nodeMove1,this.positionTouchX), this.GetBlockLine());\r\n                        this.isOutSlide = true;\r\n                    }\r\n                    if (this.getTouchLine(this.nodeMove1,this.positionTouchX) < this.GetBlockLine()) {\r\n                        //执行向左移动代码\r\n                        this.MoveLeft(this.getTouchLine(this.nodeMove1,this.positionTouchX), this.GetBlockLine());\r\n                        this.isOutSlide = true;\r\n                    }\r\n                }else if(!this.gameSlide){\r\n                    if (this.getTouchLine(this.slideNode,this.slidePosition) > this.GetBlockLine()) {\r\n                        //执行向右移动代码\r\n                        this.MoveRight(this.getTouchLine(this.slideNode,this.slidePosition), this.GetBlockLine());\r\n                        this.gameSlide = true;\r\n                    }\r\n                    if (this.getTouchLine(this.slideNode,this.slidePosition) < this.GetBlockLine()) {\r\n                        //执行向左移动代码\r\n                        this.MoveLeft(this.getTouchLine(this.slideNode,this.slidePosition), this.GetBlockLine());\r\n                        this.gameSlide = true;\r\n                    }\r\n                }\r\n            }\r\n            //快速下落\r\n            if (this.isOutDown == false && this.nodeBlock.getComponent(\"OperateBlock\").isGameOver == false) {\r\n                this.DownQuick();\r\n            }\r\n        }\r\n        else {\r\n            if ((this.isOutSlide == false || this.gameSlide == false) && this.nodeBlock.getComponent(\"OperateBlock\").isGameOver == false) {\r\n                //当触摸点的列大于俄罗斯方块的列数\r\n                if(!this.isOutSlide){\r\n                    if (this.getTouchLine(this.nodeMove1,this.positionTouchX) > this.GetBlockLine()) {\r\n                        //执行向右移动代码\r\n                        this.MoveRight(this.getTouchLine(this.nodeMove1,this.positionTouchX), this.GetBlockLine());\r\n                        this.isOutSlide = true;\r\n                    }\r\n                    if (this.getTouchLine(this.nodeMove1,this.positionTouchX) < this.GetBlockLine()) {\r\n                        //执行向左移动代码\r\n                        this.MoveLeft(this.getTouchLine(this.nodeMove1,this.positionTouchX), this.GetBlockLine());\r\n                        this.isOutSlide = true;\r\n                    }\r\n                }else if(!this.gameSlide){\r\n                    if (this.getTouchLine(this.slideNode,this.slidePosition) > this.GetBlockLine()) {\r\n                        //执行向右移动代码\r\n                        this.MoveRight(this.getTouchLine(this.slideNode,this.slidePosition), this.GetBlockLine());\r\n                        this.gameSlide = true;\r\n                    }\r\n                    if (this.getTouchLine(this.slideNode,this.slidePosition) < this.GetBlockLine()) {\r\n                        //执行向左移动代码\r\n                        this.MoveLeft(this.getTouchLine(this.slideNode,this.slidePosition), this.GetBlockLine());\r\n                        this.gameSlide = true;\r\n                    }\r\n                }\r\n            }\r\n            //快速下落\r\n            if (this.isOutDown == false && this.nodeBlock.getComponent(\"OperateBlock\").isGameOver == false) {\r\n                this.DownQuick();\r\n            }\r\n        }\r\n        if (this.nodeBlock.getComponent(\"OperateBlock\").isStationary && this.nodeBlock.getComponent(\"OperateBlock\").isGameOver == false) {\r\n            // this.boxParent1=this.boxParent.getChildren();\r\n            //获取此方块的数组\r\n            var nodeBoxArray = this.nodeBlock.getChildren();\r\n            for (var i = 0; i <= 3; i++) {\r\n                nodeBoxArray[0].setPosition(this.GetBoxNode(nodeBoxArray[0]));\r\n                nodeBoxArray[0].parent = this.boxParent;\r\n                if (i == 3) {\r\n                    this.nodeBlock.getComponent(\"OperateBlock\").isChangeParent = true;\r\n                }\r\n            }\r\n        }\r\n        if (this.nodeBlock.getComponent(\"OperateBlock\").isChangeParent && this.nodeBlock.getComponent(\"OperateBlock\").isGameOver == false) {\r\n            //消除以后落下俄罗斯方块\r\n            this.DisappearBox();\r\n            var nodeBoxArray1 = this.boxParent.getChildren();\r\n            //生成新的俄罗斯方块\r\n            this.GetBlock();\r\n            this.isOutDown = true;\r\n            this.isPressRotate = false;\r\n            this.isOutSlide = true;\r\n            if (this.disappearAll >= 10) {\r\n                cc.log(\"sss1111111111111111111111111111111111111\");\r\n                cc.log(Global.nTimeInteval+\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");\r\n                if(Global.nTimeInteval==0.3)\r\n                {\r\n                  \r\n                    Global.nTimeInteval=0.3;\r\n                    rerurn;\r\n                }\r\n                Global.nTimeInteval -= 0.2;\r\n                Global.nTimeInteval=Number(Global.nTimeInteval.toFixed(1));\r\n                this.disappearAll = 0;\r\n            }\r\n            this.nodeBlock.getComponent(\"OperateBlock\").isStationary = false;\r\n            this.nodeBlock.getComponent(\"OperateBlock\").isChangeParent = false;\r\n        }\r\n    },\r\n});\r\n"]}