{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Scripts\\game4/assets\\Scripts\\game4\\Figure.js"],"names":["cc","Class","extends","Component","properties","type","isRemove","isMove","isActive","t","angle","hasDown","row","col","onLoad","quickDown","backGroundArr","map","isNetWork","jsonMsgToServer","tag1","score","state1","changeMapList1","removeMapList1","nMapRow","nMapCol","loading1","self","beforeRow","beforeCol","getComponent","innerNode","log","targetX","x","targetY","y","moveAction","moveTo","p","node","runAction","push","color","toString","find","SendLongMsg","afterRemoveDown","console","targetRow","scanDown","hasTarget","json1","json2","checkCanDown","shine","test","a","action1","fadeTo","action2","action3","action4","sequence","aaa","bind","rotate","centerX","centerY","scheduleOnce","destroy","delay","dt","i","childrenCount","children","active"],"mappings":"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","file":"Figure.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\game4","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        //宝石类型\r\n        type:null,\r\n        //是否可以消除\r\n        isRemove:false,\r\n        //是否移动过\r\n        isMove : false,\r\n        //是否可以激活\r\n        isActive : false,\r\n        t        : 0,\r\n        /**\r\n         * 0 : 0度方向\r\n         * 1 : 90度方向\r\n         * 2 : 180度方向\r\n         * 3 : 270度方向\r\n         * 4 : 360度方向也就是0度方向\r\n         */\r\n        angle    : 0,\r\n        //是否可以快速下落\r\n        hasDown : false,\r\n        //该节点所处的行和列\r\n        row : 0,\r\n        col : 0,      \r\n    },\r\n    onLoad (){  \r\n    },\r\n    /**\r\n     * @param  {目标位置的行} row\r\n     * @param  {目标位置的列} col\r\n     * @param  {背景节点数组} backGroundArr\r\n     * @param  {背景方格模型数据} map\r\n     * @param  {是否是网络版的游戏} isNetWork\r\n     */\r\n    quickDown : function(row,col,backGroundArr,map,isNetWork){\r\n        var jsonMsgToServer = {\r\n            tag1            : 9,\r\n            score           : \"\",\r\n            type            : \"\",\r\n            state1          : \"\",\r\n            changeMapList1  : [],\r\n            removeMapList1  : 0,\r\n            nMapRow         : \"\",\r\n            nMapCol         : \"\",\r\n            loading1        : \"\",\r\n        };\r\n        //改变当前行\r\n        var self = this;\r\n        //将当前要快速下路的节点的背景方格模型数据的状态改为0\r\n        var beforeRow = self.row;\r\n        var beforeCol = self.col;\r\n        map[self.row][self.col] = 0;\r\n        backGroundArr[self.row][self.col].getComponent(\"Back\").type = -1;\r\n        backGroundArr[self.row][self.col].getComponent(\"Back\").innerNode = null;\r\n        cc.log(\"map is \" + map);\r\n        var targetX = backGroundArr[row][col].x;\r\n        var targetY = backGroundArr[row][col].y;\r\n        var moveAction = cc.moveTo(0.0008,cc.p(targetX,targetY));\r\n        self.node.runAction(moveAction);\r\n        //该节点已经下落过了，以后更新地图的时候不更新\r\n        self.hasDown = true;\r\n        // this.node.x = targetX;\r\n        // this.node.y = targetY;\r\n        map[row][col] = 1;\r\n        //设置背景方格的类型为该节点的类型\r\n        backGroundArr[row][col].getComponent(\"Back\").type = this.type;\r\n        backGroundArr[row][col].getComponent(\"Back\").innerNode = this.node;\r\n        //设置当前的行为下落之后的行\r\n        this.row = row;\r\n        //如果是网络版游戏的话就发送数据到服务器\r\n        if(isNetWork){\r\n            //填充jsonMsgToServer\r\n            jsonMsgToServer.changeMapList1.push({row:beforeRow,col:beforeCol,color:\"-1\"});\r\n            jsonMsgToServer.changeMapList1.push({row:row,col:col,color:this.type.toString()});\r\n            //发送数据到服务器\r\n            cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg(jsonMsgToServer);\r\n        }\r\n        \r\n    },\r\n    //消除下落操作\r\n    afterRemoveDown : function(map,backGroundArr,isNetWork){\r\n        var jsonMsgToServer = {\r\n            tag1            : 9,\r\n            score           : \"\",\r\n            type            : \"\",\r\n            state1          : \"\",\r\n            changeMapList1  : [],\r\n            removeMapList1  : 0,\r\n            nMapRow         : \"\",\r\n            nMapCol         : \"\",\r\n            loading1        : \"\",\r\n        };\r\n        this.t = 0;\r\n        //开启物理组件刚体\r\n        // cc.director.getPhysicsManager().enabled = true;\r\n        if(this.isActive){\r\n            console.log(\"不可消除块下落了，需要你引起注意\");\r\n        }\r\n        //当最底下有两个要消除的时候上方的两个方格下落会出现问题\r\n        \r\n        //自己向下找空穴的位置\r\n        //自己占据的地图信息改为0\r\n        // if(this.checkCanDown(map)){\r\n            let beforeRow = this.row;\r\n            let beforeCol = this.col;\r\n            map[this.row][this.col] = 0;\r\n            //改变背景方格的类型状态及内置节点的引用风\r\n            backGroundArr[this.row][this.col].getComponent(\"Back\").type = -1;\r\n            backGroundArr[this.row][this.col].getComponent(\"Back\").innerNode = null;\r\n            //向下扫描找到空穴的位置\r\n            var targetRow = this.scanDown(map,this.row,this.col);\r\n            cc.log(\"targetRow is \" + targetRow);\r\n            this.targetX = backGroundArr[targetRow][this.col].x;\r\n            this.targetY = backGroundArr[targetRow][this.col].y;\r\n            this.hasTarget = true;\r\n            // var distance = targetRow - this.row;\r\n            // if (cc._renderType === cc.game.RENDER_TYPE_CANVAS) {\r\n            //     cc.renderer.enableDirtyRegion(false);\r\n            // }\r\n            // var action = cc.moveTo(0.3,cc.p(targetX,targetY));\r\n            // this.node.runAction(action);\r\n            // this.node.y = targetY;\r\n            //将该节点的行设置成目标行\r\n            this.row = targetRow;\r\n            map[this.row][this.col] = 1;\r\n            //设置背景方格的类型为该节点的类型\r\n            backGroundArr[this.row][this.col].getComponent(\"Back\").type = this.type;\r\n            backGroundArr[this.row][this.col].getComponent(\"Back\").innerNode = this.node;\r\n            console.log(\"++++++++beforeRow is +++++++++++\" + beforeRow);\r\n            console.log(\"++++++++beforeRow is +++++++++++\" + beforeCol);\r\n            let json1 = {\r\n                row     : beforeRow,\r\n                col     : beforeCol,\r\n                color   : \"-1\",\r\n            };\r\n            let json2 = {\r\n                row     : this.row,\r\n                col     : this.col,\r\n                color   : this.type.toString(),\r\n            };\r\n            //如果是网络版的游戏发送消息到服务器\r\n            if(isNetWork){\r\n                jsonMsgToServer.changeMapList1.push(json1);\r\n                jsonMsgToServer.changeMapList1.push(json2);\r\n                cc.find(\"PebmanentNode\").getComponent(\"GetServer\").SendLongMsg(jsonMsgToServer);\r\n            }\r\n            \r\n            // if(this.node.y <= backGroundArr[11][this.col].y){\r\n            //     this.node.y = backGroundArr[11][this.col].y;\r\n            // }\r\n        // }\r\n    },\r\n    // //下落惩罚\r\n    // downPunish : function(){\r\n\r\n    // },\r\n    scanDown : function(map,row,col){\r\n         //向下寻找\r\n         while(row < 11){\r\n            row++;\r\n            if(map[row][col] === 1){\r\n                break;\r\n            }\r\n            if(row === 11){\r\n                break;\r\n            }\r\n         }\r\n         //最底下的背景方格的状态不为1\r\n         if(row === 11 && map[row][col] != 1){\r\n             return 11;\r\n         }else{\r\n            return row-1;\r\n         }\r\n    },\r\n    //检测该节点是否可以下落\r\n    checkCanDown : function(map){\r\n        if(map[this.row+1][this.col] === 1){\r\n            return false;\r\n        }else{\r\n            return true;\r\n        }\r\n    },\r\n    //节点发光\r\n    shine : function(){\r\n        var self = this;\r\n          (function test(a){\r\n              (function t(){\r\n                var action1 = cc.fadeTo(0.1,70);\r\n                var action2 = cc.fadeTo(0,1,100);\r\n                var action3 = cc.fadeTo(0.1,130);\r\n                var action4 = cc.fadeTo(0.1,160);\r\n                var sequence = cc.sequence(action1,action2,action3,action4);\r\n                self.node.runAction(sequence);\r\n                cc.log(\"adfadfadf\");\r\n              })();\r\n            a();\r\n        })(self.aaa.bind(self));\r\n    },\r\n    //旋转操作\r\n    rotate : function(centerX,centerY,backGroundArr){\r\n\r\n\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    aaa:function(){\r\n        // this.node.destroy();\r\n        cc.log(\"发光完毕\");\r\n        this.scheduleOnce(function(){\r\n            this.node.destroy();\r\n        },0.2);\r\n        \r\n    },\r\n    onLoad () {\r\n        // cc.log(\"%%%%%%%%%%%\");\r\n        this.delay = 0;\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n    update (dt) {\r\n          \r\n            if(this.hasTarget){\r\n                    cc.log(\"dt s \" + dt);\r\n                    cc.log(\"this.t is \" + this.t);\r\n                    this.t += dt;\r\n                    cc.log(this.t);\r\n                    cc.log(this.node.y+\"？？？？？？？？？？？？？？？？？？？？？？？？\");\r\n                    cc.log(this.targetY+\"/////////////////////////\");\r\n                    if(this.node.y >= this.targetY+120){\r\n                        if(this.t >= 0.1){\r\n                            cc.log(\"33434343434343434434\");\r\n                            //  cc.director.getPhysicsManager().enabled = false;\r\n                            this.node.y -= 120;\r\n                            this.t = 0;\r\n                        }\r\n                    }\r\n            }\r\n            if(!this.isActive && this.type >= 4){\r\n                //不显示它们的子节点\r\n                for(let i = 0;i<this.node.childrenCount;i++){\r\n                    this.node.children[i].active = false;\r\n                }\r\n            }\r\n            // if(this.isActive && this.type >= 4){\r\n            //     for(let i = 0;i<this.node.childrenCount;i++){\r\n            //         this.node.children[i].active = true;\r\n            //     }\r\n            // }\r\n    },\r\n});\r\n"]}