{"version":3,"sources":["OperateBlock.js"],"names":["cc","Class","extends","Component","properties","onLoad","bCollisionOne","stringColor","isStartDown","stringBoloekShape","nRotateAngle","fDownTime","isStationary","fCollisionTime","isCollision","isHasBox","isChangeParent","nBox","isGameOver","isDown","isShow","isDownState","nUpdate","start","AddBoxNumber","a","b","Global","game1Main","groundChild","getComponent","isBox","log","onKeyUp","event","keyCode","KEY","console","d","s","DownBlock","nArrayRow","nArrayList","blockChild","node","getChildren","arrayChangeNode","i","nX","getPositionX","find","nWidth","nY","getPositionY","push","j","k","nOldY","nOldX","l","y","TravelOnloda","GetShape","stringBlock","nArray","nx","ny","nRotate1","isOver","BlockDown","isMove","nBoxArray","nXArray","nYArray","length","TraversalNodeBox","nPositionY","nLength","boxParent1","nDestroy","destroy","update","dt","isActive","active","nTimeInteval"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBQ,KAHP;;AA2BL;;AAEAC,UA7BK,oBA6BI;AACL;AACA,aAAKC,aAAL,GAAqB,KAArB;;AAEA;AACA,aAAKC,WAAL,GAAmB,EAAnB;AACA;AACA,aAAKC,WAAL,GAAmB,KAAnB;AACA;AACA,aAAKC,iBAAL,GAAyB,EAAzB;AACA;AACA,aAAKC,YAAL,GAAoB,CAApB;AACA;AACA;AACA;AACA,aAAKC,SAAL,GAAiB,CAAjB;AACA;AACA,aAAKC,YAAL,GAAoB,KAApB;AACA;AACA,aAAKC,cAAL,GAAsB,CAAtB;AACA;AACA,aAAKC,WAAL,GAAmB,KAAnB;AACA;AACA,aAAKC,QAAL,GAAgB,KAAhB;AACA;AACA,aAAKC,cAAL,GAAsB,KAAtB;AACA;AACA;AACA;AACA,aAAKC,IAAL,GAAY,CAAZ;AACA;AACA,aAAKC,UAAL,GAAkB,KAAlB;AACA;AACA,aAAKC,MAAL,GAAc,KAAd;AACA;AACA,aAAKC,MAAL,GAAc,KAAd;AACA;AACA;AACA,aAAKC,WAAL,GAAmB,KAAnB;AACA;AACA,aAAKC,OAAL,GAAe,CAAf;AACH,KAtEI;AAuELC,SAvEK,mBAuEG,CACP,CAxEI;;AAyEL;AACAC,kBAAc,sBAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC1B,YAAIC,OAAOC,SAAP,CAAiBC,WAAjB,CAA6BJ,IAAI,CAAjC,EAAoCC,IAAI,CAAxC,EAA2CI,YAA3C,CAAwD,aAAxD,EAAuEC,KAAvE,IAAgF,KAApF,EAA2F;AACvF,iBAAKd,IAAL;AACH,SAFD,MAGK;AACD,gBAAIS,IAAE,CAAF,IAAO,EAAX,EAAe;AACX1B,mBAAGgC,GAAH,CAAO,wCAAP;AACA,qBAAKd,UAAL,GAAkB,IAAlB;AACA;AACH;AACJ;AACJ,KArFI;AAsFLe,aAAS,iBAAUC,KAAV,EAAiB;AACtB,gBAAQA,MAAMC,OAAd;AACI,iBAAKnC,GAAGoC,GAAH,CAAOX,CAAZ;AACIY,wBAAQL,GAAR,CAAY,eAAZ;AACA;AACJ,iBAAKhC,GAAGoC,GAAH,CAAOE,CAAZ;AACI;AACJ,iBAAKtC,GAAGoC,GAAH,CAAOG,CAAZ;AACI;AAPR;AASH,KAhGI;AAiGL;AACAC,eAAW,qBAAY;AACnB,YAAI,KAAKrB,MAAL,IAAe,KAAnB,EAA0B;AACtB;AACA,gBAAIsB,YAAY,EAAhB;AACA;AACA,gBAAIC,aAAa,EAAjB;AACA;AACA,gBAAIC,aAAa,KAAKC,IAAL,CAAUC,WAAV,EAAjB;AACA,iBAAKC,eAAL,GAAuB,EAAvB;AACA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;AACzB;AACA,oBAAIC,KAAK,CAACL,WAAWI,CAAX,EAAcE,YAAd,KAA+B,KAAKL,IAAL,CAAUK,YAAV,EAA/B,GAA0DjD,GAAGkD,IAAH,CAAQ,cAAR,EAAwBD,YAAxB,EAA3D,IAAqGtB,OAAOwB,MAA5G,GAAqH,CAA9H;AACA,oBAAIC,KAAK,CAACT,WAAWI,CAAX,EAAcM,YAAd,KAA+B,KAAKT,IAAL,CAAUS,YAAV,EAA/B,GAA0DrD,GAAGkD,IAAH,CAAQ,cAAR,EAAwBG,YAAxB,EAA3D,IAAqG1B,OAAOwB,MAA5G,GAAqH,CAA9H;AACAT,2BAAWY,IAAX,CAAgBN,EAAhB;AACAP,0BAAUa,IAAV,CAAeF,EAAf;AACA;AACA;AACA,oBAAIL,KAAK,CAAT,EAAY;AACR;AACA,yBAAK,IAAIQ,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;AACzB,4BAAIA,KAAK,CAAT,EAAY;AACR,iCAAK,IAAIC,IAAID,IAAI,CAAjB,EAAoBC,KAAK,CAAzB,EAA4BA,GAA5B,EAAiC;AAC7B,oCAAIf,UAAUe,CAAV,IAAef,UAAUc,CAAV,CAAnB,EAAiC;AAC7B,wCAAIE,QAAQhB,UAAUc,CAAV,CAAZ;AACAd,8CAAUc,CAAV,IAAed,UAAUe,CAAV,CAAf;AACAf,8CAAUe,CAAV,IAAeC,KAAf;AACA,wCAAIC,QAAQhB,WAAWa,CAAX,CAAZ;AACAb,+CAAWa,CAAX,IAAgBb,WAAWc,CAAX,CAAhB;AACAd,+CAAWc,CAAX,IAAgBE,KAAhB;AACH;AACJ;AACJ;AACJ;AACD,yBAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;AACzB,4BAAIlB,UAAUkB,CAAV,KAAgB,EAApB,EAAwB;AACpB,iCAAKb,eAAL,CAAqBQ,IAArB,CAA0B,EAAE,OAAOb,UAAUkB,CAAV,IAAe,CAAxB,EAA2B,OAAOjB,WAAWiB,CAAX,IAAgB,CAAlD,EAAqD,SAAS,KAAKpD,WAAnE,EAA1B;AACA;AACA;AACH,yBAJD,MAKK;AACD,gCAAIkC,UAAU,CAAV,KAAgB,CAApB,EAAuB;AACnB,qCAAKK,eAAL,CAAqBQ,IAArB,CAA0B,EAAE,OAAOb,UAAUkB,CAAV,IAAe,CAAxB,EAA2B,OAAOjB,WAAWiB,CAAX,IAAgB,CAAlD,EAAqD,SAAS,OAA9D,EAA1B;AACA;AACA,qCAAKb,eAAL,CAAqBQ,IAArB,CAA0B,EAAE,OAAOb,UAAUkB,CAAV,IAAe,CAAxB,EAA2B,OAAOjB,WAAWiB,CAAX,IAAgB,CAAlD,EAAqD,SAAS,KAAKpD,WAAnE,EAA1B;AACA;AACAoB,uCAAOC,SAAP,CAAiBC,WAAjB,CAA6Ba,WAAWiB,CAAX,IAAgB,CAA7C,EAAgDlB,UAAUkB,CAAV,IAAe,CAA/D,EAAkE7B,YAAlE,CAA+E,aAA/E,EAA8FvB,WAA9F,GAA4G,KAAKA,WAAjH;AACA,qCAAKO,WAAL,GAAmB,IAAnB;;AAEAd,mCAAGgC,GAAH,CAAO,gDAAP;AAEH,6BAVD,MAWK;AACD,qCAAKc,eAAL,CAAqBQ,IAArB,CAA0B,EAAE,OAAOb,UAAUkB,CAAV,IAAe,CAAxB,EAA2B,OAAOjB,WAAWiB,CAAX,IAAgB,CAAlD,EAAqD,SAAS,OAA9D,EAA1B;AACA;AACA,qCAAKb,eAAL,CAAqBQ,IAArB,CAA0B,EAAE,OAAOb,UAAUkB,CAAV,IAAe,CAAxB,EAA2B,OAAOjB,WAAWiB,CAAX,IAAgB,CAAlD,EAAqD,SAAS,KAAKpD,WAAnE,EAA1B;AACA;AACA;AACH;AACJ;AACJ;AACD,yBAAKqC,IAAL,CAAUgB,CAAV,IAAejC,OAAOwB,MAAtB;AACA,yBAAK9B,WAAL,GAAmB,IAAnB;AACH;AACJ;AACJ;AACD,aAAKF,MAAL,GAAc,IAAd;AACH,KApKI;AAqKL;AACA0C,kBAAa,wBAAU;AACnB,YAAIlB,aAAa,KAAKC,IAAL,CAAUC,WAAV,EAAjB;AACA;AACA;AACA,aAAK,IAAIE,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;AACzB,gBAAIK,KAAK,CAACT,WAAWI,CAAX,EAAcM,YAAd,KAA+B,KAAKT,IAAL,CAAUS,YAAV,EAA/B,GAA0DrD,GAAGkD,IAAH,CAAQ,cAAR,EAAwBG,YAAxB,EAA3D,IAAqG1B,OAAOwB,MAA5G,GAAqH,CAA9H;AACA,gBAAIH,KAAG,CAACL,WAAWI,CAAX,EAAcE,YAAd,KAA+B,KAAKL,IAAL,CAAUK,YAAV,EAA/B,GAA0DjD,GAAGkD,IAAH,CAAQ,cAAR,EAAwBD,YAAxB,EAA3D,IAAqGtB,OAAOwB,MAA5G,GAAqH,CAA5H;AACAxB,mBAAOC,SAAP,CAAiBC,WAAjB,CAA6BmB,KAAG,CAAhC,EAAmCI,KAAG,CAAtC,EAAyCtB,YAAzC,CAAsD,aAAtD,EAAqEC,KAArE,GAA2E,IAA3E;AACAJ,mBAAOC,SAAP,CAAiBC,WAAjB,CAA6BmB,KAAG,CAAhC,EAAmCI,KAAG,CAAtC,EAAyCtB,YAAzC,CAAsD,aAAtD,EAAqEvB,WAArE,GAAiF,KAAKA,WAAtF;AACH;AACJ,KAhLI;AAiLL;AACAuD,cAAU,kBAAUC,WAAV,EAAuBC,MAAvB,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,QAAvC,EAAiD;AACvD;AACA,YAAID,KAAK,EAAT,EAAa;AACT,iBAAKE,MAAL,GAAc,IAAd;AACH;AACD,gBAAQL,WAAR;AACI,iBAAK,GAAL;AACI,oBAAII,YAAY,CAAZ,IAAiBA,YAAY,GAAjC,EAAsC;AAClC,4BAAQH,MAAR;AACI,6BAAK,CAAL;AACIhE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AAZR;;AAeA,wBAAI,KAAKjD,IAAL,IAAa,CAAjB,EAAoB;AAChB,6BAAKuB,SAAL;AACH,qBAFD,MAGK;AACD,4BAAIwB,UAAU,CAAd,EAAiB;AACb,gCAAI,KAAKI,MAAT,EAAiB;AACb;AACH;;AAED,iCAAKtD,WAAL,GAAmB,IAAnB;AACA;AACA,iCAAKD,cAAL,GAAsB,CAAtB;AACH;AACJ;AACJ,iBA9BD,MA+BK,IAAIsD,YAAY,EAAhB,EAAoB;AACrB,4BAAQH,MAAR;AACI,6BAAK,CAAL;AACIhE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AARR;;AAWA,wBAAI,KAAKjD,IAAL,IAAa,CAAjB,EAAoB;AAChB,6BAAKuB,SAAL;AACH,qBAFD,MAGK;AACD,4BAAIwB,UAAU,CAAd,EAAiB;AACb,gCAAI,KAAKI,MAAT,EAAiB;AACb;AACH;;AAED,iCAAKtD,WAAL,GAAmB,IAAnB;AACA;AACA,iCAAKD,cAAL,GAAsB,CAAtB;AACH;AACJ;AAEJ,iBA3BI,MA4BA,IAAIsD,YAAY,GAAhB,EAAqB;AACtB,4BAAQH,MAAR;AACI,6BAAK,CAAL;AACIhE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AAZR;;AAeA,wBAAI,KAAKjD,IAAL,IAAa,CAAjB,EAAoB;AAChB,6BAAKuB,SAAL;AACH,qBAFD,MAGK;AACD,4BAAIwB,UAAU,CAAd,EAAiB;AACb,gCAAI,KAAKI,MAAT,EAAiB;AACb;AACH;;AAED,iCAAKtD,WAAL,GAAmB,IAAnB;AACA;AACA,iCAAKD,cAAL,GAAsB,CAAtB;AACH;AACJ;AACJ,iBA9BI,MA+BA;AACD,4BAAQmD,MAAR;AACI,6BAAK,CAAL;AACIhE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AARR;;AAWA,wBAAI,KAAKjD,IAAL,IAAa,CAAjB,EAAoB;AAChB,6BAAKuB,SAAL;AACH,qBAFD,MAGK;AACD,4BAAIwB,UAAU,CAAd,EAAiB;AACb,gCAAI,KAAKI,MAAT,EAAiB;AACb;AACH;;AAED,iCAAKtD,WAAL,GAAmB,IAAnB;AACA;AACA,iCAAKD,cAAL,GAAsB,CAAtB;AACH;AACJ;AACJ;AACD;AACJ,iBAAK,MAAL;AACI,oBAAIsD,YAAY,CAAZ,IAAiBA,YAAY,GAAjC,EAAsC;AAClC,4BAAQH,MAAR;AACI,6BAAK,CAAL;AACIhE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA,kCAAO;AACX,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AAhBR;AAkBA,wBAAI,KAAKjD,IAAL,IAAa,CAAjB,EAAoB;AAChB,6BAAKuB,SAAL;AAEH,qBAHD,MAIK;AACD,4BAAIwB,UAAU,CAAd,EAAiB;AACb,gCAAI,KAAKI,MAAT,EAAiB;AACb;AACH;;AAED,iCAAKtD,WAAL,GAAmB,IAAnB;AACA;AACA,iCAAKD,cAAL,GAAsB,CAAtB;AACH;AACJ;AACJ,iBAlCD,MAmCK,IAAIsD,YAAY,EAAhB,EAAoB;AACrB,wBAAIH,UAAU,CAAd,EAAiB;AACbhE,2BAAGgC,GAAH,CAAOgC,MAAP;AACA,6BAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACH;AACD,wBAAI,KAAKjD,IAAL,IAAa,CAAjB,EAAoB;AAChB,6BAAKuB,SAAL;AACH,qBAFD,MAGK;AACD,4BAAIwB,UAAU,CAAd,EAAiB;AACb,gCAAI,KAAKI,MAAT,EAAiB;AACb;AACH;;AAED,iCAAKtD,WAAL,GAAmB,IAAnB;AACA;AACA,iCAAKD,cAAL,GAAsB,CAAtB;AACH;AACJ;AAEJ,iBApBI,MAqBA,IAAIsD,YAAY,GAAhB,EAAqB;AACtB,4BAAQH,MAAR;AACI,6BAAK,CAAL;AACIhE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AAhBR;AAkBA,wBAAI,KAAKjD,IAAL,IAAa,CAAjB,EAAoB;AAChB,6BAAKuB,SAAL;AAEH,qBAHD,MAIK;AACD,4BAAIwB,UAAU,CAAd,EAAiB;AACb,gCAAI,KAAKI,MAAT,EAAiB;AACb;AACH;;AAED,iCAAKtD,WAAL,GAAmB,IAAnB;AACA;AACA,iCAAKD,cAAL,GAAsB,CAAtB;AACH;AACJ;AACJ,iBAlCI,MAmCA;AACD,wBAAImD,UAAU,CAAd,EAAiB;AACbhE,2BAAGgC,GAAH,CAAOgC,MAAP;AACA,6BAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACH;AACD,wBAAI,KAAKjD,IAAL,IAAa,CAAjB,EAAoB;AAChB,6BAAKuB,SAAL;AACH,qBAFD,MAGK;AACD,4BAAIwB,UAAU,CAAd,EAAiB;AACb,gCAAI,KAAKI,MAAT,EAAiB;AACb;AACH;;AAED,iCAAKtD,WAAL,GAAmB,IAAnB;AACA;AACA,iCAAKD,cAAL,GAAsB,CAAtB;AACH;AACJ;AAEJ;AACD;AACJ,iBAAK,QAAL;AACI,wBAAQmD,MAAR;AACI,yBAAK,CAAL;AACIhE,2BAAGgC,GAAH,CAAOgC,MAAP;AACA,6BAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,yBAAK,CAAL;AACIlE,2BAAGgC,GAAH,CAAOgC,MAAP;AACA,6BAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AARR;AAUA,oBAAI,KAAKjD,IAAL,IAAa,CAAjB,EAAoB;AAChB,yBAAKuB,SAAL;AACH,iBAFD,MAGK;AACD,wBAAIwB,UAAU,CAAd,EAAiB;AACb,4BAAI,KAAKI,MAAT,EAAiB;AACb;AACH;;AAED,6BAAKtD,WAAL,GAAmB,IAAnB;AACA;AACA,6BAAKD,cAAL,GAAsB,CAAtB;AACH;AACJ;AACD;AACJ,iBAAK,GAAL;AACI,oBAAIsD,YAAY,CAAZ,IAAiBA,YAAY,GAAjC,EAAsC;AAClC,4BAAQH,MAAR;AACI,6BAAK,CAAL;AACIhE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;;AAZR;;AAgBA,wBAAI,KAAKjD,IAAL,IAAa,CAAjB,EAAoB;AAChB,6BAAKuB,SAAL;AACH,qBAFD,MAGK;AACD,4BAAIwB,UAAU,CAAd,EAAiB;AACb,gCAAI,KAAKI,MAAT,EAAiB;AACb;AACH;;AAED,iCAAKtD,WAAL,GAAmB,IAAnB;AACA;AACA,iCAAKD,cAAL,GAAsB,CAAtB;AACH;AACJ;AACJ,iBA/BD,MAgCK,IAAIsD,YAAY,EAAhB,EAAoB;AACrB,4BAAQH,MAAR;AACI,6BAAK,CAAL;AACIhE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AARR;;AAWA,wBAAI,KAAKjD,IAAL,IAAa,CAAjB,EAAoB;;AAEhB,6BAAKuB,SAAL;AACH,qBAHD,MAIK;AACD,4BAAIwB,UAAU,CAAd,EAAiB;AACb,gCAAI,KAAKI,MAAT,EAAiB;AACb;AACH;;AAED,iCAAKtD,WAAL,GAAmB,IAAnB;AACA;AACA,iCAAKD,cAAL,GAAsB,CAAtB;AACH;AACJ;AAEJ,iBA5BI,MA6BA,IAAIsD,YAAY,GAAhB,EAAqB;AACtB,4BAAQH,MAAR;AACI,6BAAK,CAAL;AACIhE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AAZR;;AAeA,wBAAI,KAAKjD,IAAL,IAAa,CAAjB,EAAoB;AAChB,6BAAKuB,SAAL;AACH,qBAFD,MAGK;AACD,4BAAIwB,UAAU,CAAd,EAAiB;AACb,gCAAI,KAAKI,MAAT,EAAiB;AACb;AACH;;AAED,iCAAKtD,WAAL,GAAmB,IAAnB;AACA;AACA,iCAAKD,cAAL,GAAsB,CAAtB;AACH;AACJ;AAEJ,iBA/BI,MAgCA;AACD,4BAAQmD,MAAR;AACI,6BAAK,CAAL;AACIhE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AARR;;AAWA,wBAAI,KAAKjD,IAAL,IAAa,CAAjB,EAAoB;AAChB,6BAAKuB,SAAL;AACH,qBAFD,MAGK;AACD,4BAAIwB,UAAU,CAAd,EAAiB;AACb,gCAAI,KAAKI,MAAT,EAAiB;AACb;AACH;;AAED,iCAAKtD,WAAL,GAAmB,IAAnB;AACA;AACA,iCAAKD,cAAL,GAAsB,CAAtB;AACH;AACJ;AACJ;AACD;AACJ,iBAAK,GAAL;AACI,oBAAIsD,YAAY,CAAZ,IAAiBA,YAAY,GAAjC,EAAsC;AAClC,4BAAQH,MAAR;AACI,6BAAK,CAAL;AACIhE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AAZR;AAcA,wBAAI,KAAKjD,IAAL,IAAa,CAAjB,EAAoB;AAChB,6BAAKuB,SAAL;AACH,qBAFD,MAGK;AACD,4BAAIwB,UAAU,CAAd,EAAiB;AACb,gCAAI,KAAKI,MAAT,EAAiB;AACb;AACH;;AAED,iCAAKtD,WAAL,GAAmB,IAAnB;AACA;AACA,iCAAKD,cAAL,GAAsB,CAAtB;AACH;AACJ;AACJ,iBA7BD,MA8BK,IAAIsD,YAAY,EAAhB,EAAoB;AACrB,4BAAQH,MAAR;AACI,6BAAK,CAAL;AACIhE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AARR;AAUA,wBAAI,KAAKjD,IAAL,IAAa,CAAjB,EAAoB;AAChB,6BAAKuB,SAAL;AACH,qBAFD,MAGK;;AAED,4BAAIwB,UAAU,CAAd,EAAiB;AACb,gCAAI,KAAKI,MAAT,EAAiB;AACb;AACH;;AAED,iCAAKtD,WAAL,GAAmB,IAAnB;AACA;AACA,iCAAKD,cAAL,GAAsB,CAAtB;AACH;AACJ;AAEJ,iBA3BI,MA4BA,IAAIsD,YAAY,GAAhB,EAAqB;AACtB,4BAAQH,MAAR;AACI,6BAAK,CAAL;AACIhE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AAZR;AAcA,wBAAI,KAAKjD,IAAL,IAAa,CAAjB,EAAoB;AAChB,6BAAKuB,SAAL;AACH,qBAFD,MAGK;AACD,4BAAIwB,UAAU,CAAd,EAAiB;AACb,gCAAI,KAAKI,MAAT,EAAiB;AACb;AACH;;AAED,iCAAKtD,WAAL,GAAmB,IAAnB;AACA;AACA,iCAAKD,cAAL,GAAsB,CAAtB;AACH;AACJ;AACJ,iBA7BI,MA8BA;AACD,4BAAQmD,MAAR;AACI,6BAAK,CAAL;AACIhE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AACJ,6BAAK,CAAL;AACIlE,+BAAGgC,GAAH,CAAOgC,MAAP;AACA,iCAAKxC,YAAL,CAAkByC,EAAlB,EAAsBC,EAAtB;AACA;AARR;AAUA,wBAAI,KAAKjD,IAAL,IAAa,CAAjB,EAAoB;AAChB,6BAAKuB,SAAL;AACH,qBAFD,MAGK;AACD,4BAAIwB,UAAU,CAAd,EAAiB;AACb,gCAAI,KAAKI,MAAT,EAAiB;AACb;AACH;;AAED,iCAAKtD,WAAL,GAAmB,IAAnB;AACA;AACA,iCAAKD,cAAL,GAAsB,CAAtB;AACH;AACJ;AACJ;AACD;AAjfR;AAmfH,KA1qBI;AA2qBL;AACAwD,eAAW,qBAAY;AACnB;AACA,YAAIC,SAAS,IAAb;AACA;AACA,YAAI3B,aAAa,KAAKC,IAAL,CAAUC,WAAV,EAAjB;AACA;AACA;AACA;AACA,aAAK,IAAIE,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;AACzB,gBAAIK,KAAK,CAACT,WAAWI,CAAX,EAAcM,YAAd,KAA+B,KAAKT,IAAL,CAAUS,YAAV,EAA/B,GAA0DrD,GAAGkD,IAAH,CAAQ,cAAR,EAAwBG,YAAxB,EAA3D,IAAqG1B,OAAOwB,MAA5G,GAAqH,CAA9H;AACA,gBAAIC,MAAM,EAAV,EAAc;AACVkB,yBAAS,KAAT;AACH;AACJ;AACD,YAAIA,UAAU,KAAd,EAAqB;AACjB;AACA,gBAAIC,YAAY,EAAhB;AACA;AACA,gBAAIC,UAAU,EAAd;AACA;AACA,gBAAIC,UAAU,EAAd;AACA;AACA,iBAAK,IAAI1B,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;AACzB;AACA,oBAAIC,KAAK,CAACL,WAAWI,CAAX,EAAcE,YAAd,KAA+B,KAAKL,IAAL,CAAUK,YAAV,EAA/B,GAA0DjD,GAAGkD,IAAH,CAAQ,cAAR,EAAwBD,YAAxB,EAA3D,IAAqGtB,OAAOwB,MAA5G,GAAqH,CAA9H;AACA,oBAAIC,KAAK,CAACT,WAAWI,CAAX,EAAcM,YAAd,KAA+B,KAAKT,IAAL,CAAUS,YAAV,EAA/B,GAA0DrD,GAAGkD,IAAH,CAAQ,cAAR,EAAwBG,YAAxB,EAA3D,IAAqG1B,OAAOwB,MAA5G,GAAqH,CAA9H;AACAnD,mBAAGgC,GAAH,CAAOgB,EAAP;AACAhD,mBAAGgC,GAAH,CAAOoB,EAAP;AACA,oBAAIA,MAAM,EAAV,EAAc;;AAEV,wBAAIzB,OAAOC,SAAP,CAAiBC,WAAjB,CAA6BmB,KAAK,CAAlC,EAAqCI,KAAK,CAA1C,EAA6CtB,YAA7C,CAA0D,aAA1D,EAAyEC,KAA7E,EAAoF;AAChF/B,2BAAGgC,GAAH,CAAO,cAAYoB,EAAnB;AACApD,2BAAGgC,GAAH;AACA,6BAAKd,UAAL,GAAkB,IAAlB;AACA;AACH,qBALD,MAMK;AACDqD,kCAAUjB,IAAV,CAAeP,CAAf;AACAyB,gCAAQlB,IAAR,CAAaN,EAAb;AACAyB,gCAAQnB,IAAR,CAAaF,EAAb;AACH;AACJ;AACD,oBAAIL,KAAK,CAAL,IAAU,KAAK7B,UAAL,IAAmB,KAAjC,EAAwC;AACpC;AACA,yBAAK4B,eAAL,GAAuB,EAAvB;AACA,yBAAKF,IAAL,CAAUgB,CAAV,IAAejC,OAAOwB,MAAtB;AACA,wBAAIoB,UAAUG,MAAV,IAAoB,CAAxB,EAA2B;AACvB,6BAAK,IAAInB,IAAI,CAAb,EAAgBA,KAAKgB,UAAUG,MAAV,GAAmB,CAAxC,EAA2CnB,GAA3C,EAAgD;AAC5C;AACA;AACA,iCAAKT,eAAL,CAAqBQ,IAArB,CAA0B,EAAE,OAAOmB,QAAQlB,CAAR,IAAa,CAAtB,EAAyB,OAAOiB,QAAQjB,CAAR,IAAa,CAA7C,EAAgD,SAAS,KAAKhD,WAA9D,EAA1B;AACH;AACJ;AACD,wBAAIgE,UAAUG,MAAV,IAAoB,CAAxB,EAA2B;AACvB1E,2BAAGgC,GAAH,CAAOwC,QAAQ,CAAR,IAAa,CAApB;AACAxE,2BAAGgC,GAAH,CAAOyC,QAAQ,CAAR,IAAa,CAApB;AACAzE,2BAAGgC,GAAH,CAAOL,OAAOC,SAAP,CAAiBC,WAAjB,CAA6B2C,QAAQ,CAAR,IAAa,CAA1C,EAA6CC,QAAQ,CAAR,IAAa,CAA1D,EAA6D3C,YAA7D,CAA0E,aAA1E,EAAyFvB,WAAhG;AACA;AACA,6BAAKuC,eAAL,CAAqBQ,IAArB,CAA0B,EAAE,OAAOmB,QAAQ,CAAR,IAAa,CAAtB,EAAyB,OAAOD,QAAQ,CAAR,IAAa,CAA7C,EAAgD,SAAS,KAAKjE,WAA9D,EAA1B;AACH;AACD;AACA,yBAAKI,SAAL,GAAiB,CAAjB;AACA,yBAAKU,WAAL,GAAmB,IAAnB;AACH;AACJ;AACJ,SAnDD,MAoDK;;AAED;AACA;AACA;AACA;AACA,gBAAIoB,YAAY,EAAhB;AACA;AACA,gBAAIC,aAAa,EAAjB;AACA;AACA,iBAAK,IAAIK,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;AACzB;AACA,oBAAIC,KAAK,CAACL,WAAWI,CAAX,EAAcE,YAAd,KAA+B,KAAKL,IAAL,CAAUK,YAAV,EAA/B,GAA0DjD,GAAGkD,IAAH,CAAQ,cAAR,EAAwBD,YAAxB,EAA3D,IAAqGtB,OAAOwB,MAA5G,GAAqH,CAA9H;AACA,oBAAIC,KAAK,CAACT,WAAWI,CAAX,EAAcM,YAAd,KAA+B,KAAKT,IAAL,CAAUS,YAAV,EAA/B,GAA0DrD,GAAGkD,IAAH,CAAQ,cAAR,EAAwBG,YAAxB,EAA3D,IAAqG1B,OAAOwB,MAA5G,GAAqH,CAA9H;AACAT,2BAAWY,IAAX,CAAgBN,EAAhB;AACAP,0BAAUa,IAAV,CAAeF,EAAf;AACH;AACD;AACA,iBAAK,IAAIG,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;AACzB,oBAAIA,KAAK,CAAT,EAAY;AACR,yBAAK,IAAIC,IAAID,IAAI,CAAjB,EAAoBC,KAAK,CAAzB,EAA4BA,GAA5B,EAAiC;AAC7B,4BAAIf,UAAUe,CAAV,IAAef,UAAUc,CAAV,CAAnB,EAAiC;AAC7B,gCAAIE,QAAQhB,UAAUc,CAAV,CAAZ;AACAd,sCAAUc,CAAV,IAAed,UAAUe,CAAV,CAAf;AACAf,sCAAUe,CAAV,IAAeC,KAAf;AACA,gCAAIC,QAAQhB,WAAWa,CAAX,CAAZ;AACAb,uCAAWa,CAAX,IAAgBb,WAAWc,CAAX,CAAhB;AACAd,uCAAWc,CAAX,IAAgBE,KAAhB;AACH;AACJ;AACJ;AACJ;AACD;AACA;AACA;AACA;AACA,gBAAI,KAAKxC,UAAL,IAAmB,KAAvB,EAA8B;AAC1B,oBAAIuB,UAAU,CAAV,KAAgB,CAApB,EAAuB;AACnBzC,uBAAGgC,GAAH,CAAO,4EAAP;;AAEA;AACA,yBAAKlB,WAAL,GAAmB,IAAnB;AACA;AACH,iBAND,MAOK;AACD,yBAAKsD,MAAL,GAAc,KAAd;AACA,yBAAK,IAAIrB,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;AACzB,4BAAI,KAAK7B,UAAT,EAAqB;AACjB;AACH;AACD;AACA,4BAAI8B,KAAK,CAACL,WAAWI,CAAX,EAAcE,YAAd,KAA+B,KAAKL,IAAL,CAAUK,YAAV,EAA/B,GAA0DjD,GAAGkD,IAAH,CAAQ,cAAR,EAAwBD,YAAxB,EAA3D,IAAqGtB,OAAOwB,MAA5G,GAAqH,CAA9H;AACA,4BAAIC,KAAK,CAACT,WAAWI,CAAX,EAAcM,YAAd,KAA+B,KAAKT,IAAL,CAAUS,YAAV,EAA/B,GAA0DrD,GAAGkD,IAAH,CAAQ,cAAR,EAAwBG,YAAxB,EAA3D,IAAqG1B,OAAOwB,MAA5G,GAAqH,CAA9H;AACA,4BAAIJ,KAAK,CAAT,EAAY;AACR,iCAAK9B,IAAL,GAAY,CAAZ;AACA,iCAAKE,MAAL,GAAc,KAAd;AACH;AACD,6BAAK2C,QAAL,CAAc,KAAKrD,iBAAnB,EAAsCsC,CAAtC,EAAyCC,EAAzC,EAA6CI,EAA7C,EAAiD,KAAK1C,YAAtD;AACA,4BAAIqC,KAAK,CAAT,EAAY;AACR,iCAAKpC,SAAL,GAAiB,CAAjB;AACH;AACJ;AACJ;AAEJ;AACJ;AACJ,KAhzBI;AAizBL;AACAgE,sBAAkB,0BAAUC,UAAV,EAAsB;AACpC;AACA,YAAIC,UAAU,KAAKC,UAAL,CAAgBJ,MAA9B;AACA;AACA,YAAIK,WAAW,EAAf;AACA/E,WAAGgC,GAAH,CAAO4C,aAAa,YAApB;AACA,aAAK,IAAIrB,IAAI,CAAb,EAAgBA,KAAKsB,UAAU,CAA/B,EAAkCtB,GAAlC,EAAuC;AACnCvD,eAAGgC,GAAH,CAAO,KAAK8C,UAAL,CAAgBvB,CAAhB,EAAmBF,YAAnB,EAAP;AACH;AACD;AACA;AACA,aAAK,IAAIN,IAAI,CAAb,EAAgBA,KAAK8B,UAAU,CAA/B,EAAkC9B,GAAlC,EAAuC;AACnC;AACA,gBAAI,KAAK+B,UAAL,CAAgB/B,CAAhB,EAAmBM,YAAnB,MAAqCuB,UAAzC,EAAqD;AACjD;AACA,qBAAKE,UAAL,CAAgB/B,CAAhB,EAAmBiC,OAAnB;AACH;AACJ;AACJ,KAp0BI;AAq0BLC,UAr0BK,kBAq0BEC,EAr0BF,EAq0BM;AACP,YAAI,KAAK9D,MAAL,IAAe,KAAf,IAAwB,KAAKZ,WAA7B,IAA4C,KAAKU,UAAL,IAAmB,KAAnE,EAA0E;AACtE;AACA,gBAAIyB,aAAa,KAAKC,IAAL,CAAUC,WAAV,EAAjB;AACA,gBAAIsC,WAAW,KAAf;AACA,iBAAK,IAAIpC,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;AACzB,oBAAIK,KAAK,CAACT,WAAWI,CAAX,EAAcM,YAAd,KAA+B,KAAKT,IAAL,CAAUS,YAAV,EAA/B,GAA0DrD,GAAGkD,IAAH,CAAQ,cAAR,EAAwBG,YAAxB,EAA3D,IAAqG1B,OAAOwB,MAA5G,GAAqH,CAA9H;AACA,oBAAIC,MAAM,EAAN,IAAYA,MAAM,EAAtB,EAA0B;AACtB+B,+BAAW,IAAX;AACAxC,+BAAWI,CAAX,EAAcqC,MAAd,GAAuB,KAAvB;AACH,iBAHD,MAIK;AACDzC,+BAAWI,CAAX,EAAcqC,MAAd,GAAuB,IAAvB;AACH;AACD,oBAAIrC,KAAK,CAAL,IAAUoC,YAAY,KAA1B,EAAiC;AAC7B,yBAAK/D,MAAL,GAAc,IAAd;AACH;AACJ;AACJ;AACD,YAAI,KAAKZ,WAAL,IAAoB,KAAKU,UAAL,IAAmB,KAA3C,EAAkD;AAC9C;AACA,iBAAKP,SAAL,IAAkBuE,EAAlB;AACA,gBAAI,KAAKvE,SAAL,IAAkBgB,OAAO0D,YAAzB,IAAyC,KAAKzE,YAAL,IAAqB,KAAlE,EAAyE;AACrE;AACA;AACA,qBAAKyD,SAAL;AACH;AACD,gBAAI,KAAKvD,WAAL,IAAoB,KAAKI,UAAL,IAAmB,KAA3C,EAAkD;AAC9C,oBAAIyB,aAAa,KAAKC,IAAL,CAAUC,WAAV,EAAjB;AACA;AACA,qBAAK,IAAIE,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;AACzB,wBAAIK,KAAK,CAACT,WAAWI,CAAX,EAAcM,YAAd,KAA+B,KAAKT,IAAL,CAAUS,YAAV,EAA/B,GAA0DrD,GAAGkD,IAAH,CAAQ,cAAR,EAAwBG,YAAxB,EAA3D,IAAqG1B,OAAOwB,MAA5G,GAAqH,CAA9H;AACA,wBAAIC,KAAG,EAAP,EAAW;AACP,6BAAKlC,UAAL,GAAgB,IAAhB;AACA;AACH;AACJ;AACD,qBAAK2C,YAAL;AACA,qBAAKjD,YAAL,GAAoB,IAApB;AACA,qBAAKE,WAAL,GAAmB,KAAnB;AACH;AACJ;AACJ;AA/2BI,CAAT","file":"OperateBlock.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Game1","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        // //获取地板附体\r\n        // getGroundParent:{\r\n        //     default:null,\r\n        //     type:cc.Node\r\n        // },\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        //判断玩家是否碰撞过一次\r\n        this.bCollisionOne = false;\r\n\r\n        //初始化俄罗斯方块的颜色\r\n        this.stringColor = \"\";\r\n        //初始化俄罗斯方块是否可以下落\r\n        this.isStartDown = false;\r\n        //初始化俄罗斯方块的形状\r\n        this.stringBoloekShape = \"\";\r\n        //初始化俄罗斯方块的旋转角度\r\n        this.nRotateAngle = 0;\r\n        //初始化旋转次数\r\n        // this.nRotate=0;\r\n        //初始化物体下落计时器\r\n        this.fDownTime = 0;\r\n        //判断下落方块是否固定\r\n        this.isStationary = false;\r\n        //初始化物体触底，触碰方块计时器\r\n        this.fCollisionTime = 0;\r\n        //判断物体是否和底部或 方块触碰\r\n        this.isCollision = false;\r\n        //判断俄罗斯方块最低点物体的下面是否有方块或者触碰底部\r\n        this.isHasBox = false;\r\n        //判断是否改变父体结束\r\n        this.isChangeParent = false;\r\n        // //判断俄罗斯方块是否有一个方块进入游戏场景\r\n        // this.isJoin=false;\r\n        //初始化方块下面为false的方块个数\r\n        this.nBox = 0;\r\n        //初始化游戏结束\r\n        this.isGameOver = false;\r\n        //判断在四次for循环中是否下落过一次\r\n        this.isDown = false;\r\n        //判断俄罗斯方块是否显示完全\r\n        this.isShow = false;\r\n        //  cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        //判断俄罗斯方块是否下落改变状态\r\n        this.isDownState = false;\r\n        //初始化俄罗斯方块第一次碰撞后的帧数\r\n        this.nUpdate = 0;\r\n    },\r\n    start() {\r\n    },\r\n    //计算方块下面为false的方块的个数\r\n    AddBoxNumber: function (a, b) {\r\n        if (Global.game1Main.groundChild[a - 1][b - 2].getComponent(\"PrefabState\").isBox == false) {\r\n            this.nBox++;\r\n        }\r\n        else {\r\n            if (b-2 == 19) {\r\n                cc.log(\"0-------------------------------------\");\r\n                this.isGameOver = true;\r\n                return;\r\n            }\r\n        }\r\n    },\r\n    onKeyUp: function (event) {\r\n        switch (event.keyCode) {\r\n            case cc.KEY.a:\r\n                console.log('release a key');\r\n                break;\r\n            case cc.KEY.d:\r\n                break;\r\n            case cc.KEY.s:\r\n                break;\r\n        }\r\n    },\r\n    //下落物体并将物体的false置为true\r\n    DownBlock: function () {\r\n        if (this.isDown == false) {\r\n            //存取俄罗斯方块的行数\r\n            var nArrayRow = [];\r\n            //存取俄罗斯方块的列数\r\n            var nArrayList = [];\r\n            //获取节点子节点数组\r\n            var blockChild = this.node.getChildren();\r\n            this.arrayChangeNode = [];\r\n            for (var i = 0; i <= 3; i++) {\r\n                //获取此时组成俄罗斯方块元素的行列\r\n                var nX = (blockChild[i].getPositionX() + this.node.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n                var nY = (blockChild[i].getPositionY() + this.node.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n                nArrayList.push(nX);\r\n                nArrayRow.push(nY);\r\n                //   this.blockChild[i].y -=65;\r\n                //获取下落后的行列\r\n                if (i == 3) {\r\n                    //从小到大排序行数\r\n                    for (var j = 0; j <= 3; j++) {\r\n                        if (j <= 2) {\r\n                            for (var k = j + 1; k <= 3; k++) {\r\n                                if (nArrayRow[k] < nArrayRow[j]) {\r\n                                    var nOldY = nArrayRow[j];\r\n                                    nArrayRow[j] = nArrayRow[k];\r\n                                    nArrayRow[k] = nOldY;\r\n                                    var nOldX = nArrayList[j];\r\n                                    nArrayList[j] = nArrayList[k];\r\n                                    nArrayList[k] = nOldX;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    for (var l = 0; l <= 3; l++) {\r\n                        if (nArrayRow[l] == 21) {\r\n                            this.arrayChangeNode.push({ \"row\": nArrayRow[l] - 2, \"col\": nArrayList[l] - 1, \"color\": this.stringColor });\r\n                            // Global.game1Main.groundChild[nArrayList[l] - 1][nArrayRow[l] - 2].getComponent(\"PrefabState\").isBox = true;\r\n                            // Global.game1Main.groundChild[nArrayList[l] - 1][nArrayRow[l] - 2].getComponent(\"PrefabState\").stringColor = this.stringColor;\r\n                        }\r\n                        else {\r\n                            if (nArrayRow[0] == 1) {\r\n                                this.arrayChangeNode.push({ \"row\": nArrayRow[l] - 1, \"col\": nArrayList[l] - 1, \"color\": \"white\" });\r\n                                // Global.game1Main.groundChild[nArrayList[l] - 1][nArrayRow[l] - 1].getComponent(\"PrefabState\").isBox = false;\r\n                                this.arrayChangeNode.push({ \"row\": nArrayRow[l] - 2, \"col\": nArrayList[l] - 1, \"color\": this.stringColor });\r\n                                // Global.game1Main.groundChild[nArrayList[l] - 1][nArrayRow[l] - 1].getComponent(\"PrefabState\").isBox = true;\r\n                                Global.game1Main.groundChild[nArrayList[l] - 1][nArrayRow[l] - 1].getComponent(\"PrefabState\").stringColor = this.stringColor;\r\n                                this.isCollision = true;\r\n                        \r\n                                cc.log(\"ssssssssssssssssssssssssssssssssssssssssssssss\");\r\n                              \r\n                            }\r\n                            else {\r\n                                this.arrayChangeNode.push({ \"row\": nArrayRow[l] - 1, \"col\": nArrayList[l] - 1, \"color\": \"white\" });\r\n                                // Global.game1Main.groundChild[nArrayList[l] - 1][nArrayRow[l] - 1].getComponent(\"PrefabState\").isBox = false;\r\n                                this.arrayChangeNode.push({ \"row\": nArrayRow[l] - 2, \"col\": nArrayList[l] - 1, \"color\": this.stringColor });\r\n                                // Global.game1Main.groundChild[nArrayList[l] - 1][nArrayRow[l] - 2].getComponent(\"PrefabState\").isBox = true;\r\n                                // Global.game1Main.groundChild[nArrayList[l] - 1][nArrayRow[l] - 2].getComponent(\"PrefabState\").stringColor = this.stringColor;\r\n                            }\r\n                        }\r\n                    }\r\n                    this.node.y -= Global.nWidth;\r\n                    this.isDownState = true;\r\n                }\r\n            }\r\n        }\r\n        this.isDown = true;\r\n    },\r\n    //遍历数组并将方格的属性置为true\r\n    TravelOnloda:function(){\r\n        var blockChild = this.node.getChildren();\r\n        //  //判断俄罗斯方块是否结束地面\r\n        //  var isCollisionGround=false;\r\n        for (var i = 0; i <= 3; i++) {\r\n            var nY = (blockChild[i].getPositionY() + this.node.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n            var nX=(blockChild[i].getPositionX() + this.node.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n            Global.game1Main.groundChild[nX-1][nY-1].getComponent(\"PrefabState\").isBox=true;\r\n            Global.game1Main.groundChild[nX-1][nY-1].getComponent(\"PrefabState\").stringColor=this.stringColor;\r\n        }\r\n    },\r\n    //根据形状判断俄罗斯方块下落时是否可以下落\r\n    GetShape: function (stringBlock, nArray, nx, ny, nRotate1) {\r\n        //判断下落快中是否有行数大于20行的\r\n        if (ny > 20) {\r\n            this.isOver = true;\r\n        }\r\n        switch (stringBlock) {\r\n            case \"L\":\r\n                if (nRotate1 == 0 || nRotate1 == 360) {\r\n                    switch (nArray) {\r\n                        case 0:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 1:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 2:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                    }\r\n\r\n                    if (this.nBox == 3) {\r\n                        this.DownBlock();\r\n                    }\r\n                    else {\r\n                        if (nArray == 3) {\r\n                            if (this.isOver) {\r\n                                //  this.isGameOver=true;\r\n                            }\r\n                          \r\n                            this.isCollision = true;\r\n                            //初始化触碰1秒计时\r\n                            this.fCollisionTime = 0;\r\n                        }\r\n                    }\r\n                }\r\n                else if (nRotate1 == 90) {\r\n                    switch (nArray) {\r\n                        case 0:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 3:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                    }\r\n\r\n                    if (this.nBox == 2) {\r\n                        this.DownBlock();\r\n                    }\r\n                    else {\r\n                        if (nArray == 3) {\r\n                            if (this.isOver) {\r\n                                // this.isGameOver=true;\r\n                            }\r\n                         \r\n                            this.isCollision = true;\r\n                            //初始化触碰1秒计时\r\n                            this.fCollisionTime = 0;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                else if (nRotate1 == 180) {\r\n                    switch (nArray) {\r\n                        case 0:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 1:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 3:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                    }\r\n\r\n                    if (this.nBox == 3) {\r\n                        this.DownBlock();\r\n                    }\r\n                    else {\r\n                        if (nArray == 3) {\r\n                            if (this.isOver) {\r\n                                // this.isGameOver=true;\r\n                            }\r\n                      \r\n                            this.isCollision = true;\r\n                            //初始化触碰1秒计时\r\n                            this.fCollisionTime = 0;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    switch (nArray) {\r\n                        case 2:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 3:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                    }\r\n\r\n                    if (this.nBox == 2) {\r\n                        this.DownBlock();\r\n                    }\r\n                    else {\r\n                        if (nArray == 3) {\r\n                            if (this.isOver) {\r\n                                // this.isGameOver=true;\r\n                            }\r\n                       \r\n                            this.isCollision = true;\r\n                            //初始化触碰1秒计时\r\n                            this.fCollisionTime = 0;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case \"Long\":\r\n                if (nRotate1 == 0 || nRotate1 == 360) {\r\n                    switch (nArray) {\r\n                        case 0:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 1:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 2:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break; ``\r\n                        case 3:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                    }\r\n                    if (this.nBox == 4) {\r\n                        this.DownBlock();\r\n\r\n                    }\r\n                    else {\r\n                        if (nArray == 3) {\r\n                            if (this.isOver) {\r\n                                // this.isGameOver=true;\r\n                            }\r\n                        \r\n                            this.isCollision = true;\r\n                            //初始化触碰1秒计时\r\n                            this.fCollisionTime = 0;\r\n                        }\r\n                    }\r\n                }\r\n                else if (nRotate1 == 90) {\r\n                    if (nArray == 3) {\r\n                        cc.log(nArray);\r\n                        this.AddBoxNumber(nx, ny);\r\n                    }\r\n                    if (this.nBox == 1) {\r\n                        this.DownBlock();\r\n                    }\r\n                    else {\r\n                        if (nArray == 3) {\r\n                            if (this.isOver) {\r\n                                // this.isGameOver=true;\r\n                            }\r\n                     \r\n                            this.isCollision = true;\r\n                            //初始化触碰1秒计时\r\n                            this.fCollisionTime = 0;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                else if (nRotate1 == 180) {\r\n                    switch (nArray) {\r\n                        case 0:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 1:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 2:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 3:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                    }\r\n                    if (this.nBox == 4) {\r\n                        this.DownBlock();\r\n\r\n                    }\r\n                    else {\r\n                        if (nArray == 3) {\r\n                            if (this.isOver) {\r\n                                // this.isGameOver=true;\r\n                            }\r\n                        \r\n                            this.isCollision = true;\r\n                            //初始化触碰1秒计时\r\n                            this.fCollisionTime = 0;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (nArray == 0) {\r\n                        cc.log(nArray);\r\n                        this.AddBoxNumber(nx, ny);\r\n                    }\r\n                    if (this.nBox == 1) {\r\n                        this.DownBlock();\r\n                    }\r\n                    else {\r\n                        if (nArray == 3) {\r\n                            if (this.isOver) {\r\n                                // this.isGameOver=true;\r\n                            }\r\n                     \r\n                            this.isCollision = true;\r\n                            //初始化触碰1秒计时\r\n                            this.fCollisionTime = 0;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"Square\":\r\n                switch (nArray) {\r\n                    case 0:\r\n                        cc.log(nArray);\r\n                        this.AddBoxNumber(nx, ny);\r\n                        break;\r\n                    case 1:\r\n                        cc.log(nArray);\r\n                        this.AddBoxNumber(nx, ny);\r\n                        break;\r\n                }\r\n                if (this.nBox == 2) {\r\n                    this.DownBlock();\r\n                }\r\n                else {\r\n                    if (nArray == 3) {\r\n                        if (this.isOver) {\r\n                            // this.isGameOver=true;\r\n                        }\r\n                    \r\n                        this.isCollision = true;\r\n                        //初始化触碰1秒计时\r\n                        this.fCollisionTime = 0;\r\n                    }\r\n                }\r\n                break;\r\n            case \"T\":\r\n                if (nRotate1 == 0 || nRotate1 == 360) {\r\n                    switch (nArray) {\r\n                        case 0:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 2:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 3:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n\r\n                    }\r\n\r\n                    if (this.nBox == 3) {\r\n                        this.DownBlock();\r\n                    }\r\n                    else {\r\n                        if (nArray == 3) {\r\n                            if (this.isOver) {\r\n                                // this.isGameOver=true;\r\n                            }\r\n                         \r\n                            this.isCollision = true;\r\n                            //初始化触碰1秒计时\r\n                            this.fCollisionTime = 0;\r\n                        }\r\n                    }\r\n                }\r\n                else if (nRotate1 == 90) {\r\n                    switch (nArray) {\r\n                        case 2:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 3:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                    }\r\n\r\n                    if (this.nBox == 2) {\r\n\r\n                        this.DownBlock();\r\n                    }\r\n                    else {\r\n                        if (nArray == 3) {\r\n                            if (this.isOver) {\r\n                                // this.isGameOver=true;\r\n                            }\r\n                         \r\n                            this.isCollision = true;\r\n                            //初始化触碰1秒计时\r\n                            this.fCollisionTime = 0;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                else if (nRotate1 == 180) {\r\n                    switch (nArray) {\r\n                        case 0:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 1:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 3:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                    }\r\n\r\n                    if (this.nBox == 3) {\r\n                        this.DownBlock();\r\n                    }\r\n                    else {\r\n                        if (nArray == 3) {\r\n                            if (this.isOver) {\r\n                                // this.isGameOver=true;\r\n                            }\r\n                       \r\n                            this.isCollision = true;\r\n                            //初始化触碰1秒计时\r\n                            this.fCollisionTime = 0;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    switch (nArray) {\r\n                        case 0:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 2:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                    }\r\n\r\n                    if (this.nBox == 2) {\r\n                        this.DownBlock();\r\n                    }\r\n                    else {\r\n                        if (nArray == 3) {\r\n                            if (this.isOver) {\r\n                                // this.isGameOver=true;\r\n                            }\r\n                       \r\n                            this.isCollision = true;\r\n                            //初始化触碰1秒计时\r\n                            this.fCollisionTime = 0;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case \"Z\":\r\n                if (nRotate1 == 0 || nRotate1 == 360) {\r\n                    switch (nArray) {\r\n                        case 0:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 2:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 3:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                    }\r\n                    if (this.nBox == 3) {\r\n                        this.DownBlock();\r\n                    }\r\n                    else {\r\n                        if (nArray == 3) {\r\n                            if (this.isOver) {\r\n                                // this.isGameOver=true;\r\n                            }\r\n                          \r\n                            this.isCollision = true;\r\n                            //初始化触碰1秒计时\r\n                            this.fCollisionTime = 0;\r\n                        }\r\n                    }\r\n                }\r\n                else if (nRotate1 == 90) {\r\n                    switch (nArray) {\r\n                        case 1:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 3:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                    }\r\n                    if (this.nBox == 2) {\r\n                        this.DownBlock();\r\n                    }\r\n                    else {\r\n\r\n                        if (nArray == 3) {\r\n                            if (this.isOver) {\r\n                                // this.isGameOver=true;\r\n                            }\r\n                        \r\n                            this.isCollision = true;\r\n                            //初始化触碰1秒计时\r\n                            this.fCollisionTime = 0;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                else if (nRotate1 == 180) {\r\n                    switch (nArray) {\r\n                        case 0:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 1:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 3:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                    }\r\n                    if (this.nBox == 3) {\r\n                        this.DownBlock();\r\n                    }\r\n                    else {\r\n                        if (nArray == 3) {\r\n                            if (this.isOver) {\r\n                                // this.isGameOver=true;\r\n                            }\r\n                          \r\n                            this.isCollision = true;\r\n                            //初始化触碰1秒计时\r\n                            this.fCollisionTime = 0;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    switch (nArray) {\r\n                        case 0:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                        case 2:\r\n                            cc.log(nArray);\r\n                            this.AddBoxNumber(nx, ny);\r\n                            break;\r\n                    }\r\n                    if (this.nBox == 2) {\r\n                        this.DownBlock();\r\n                    }\r\n                    else {\r\n                        if (nArray == 3) {\r\n                            if (this.isOver) {\r\n                                // this.isGameOver=true;\r\n                            }\r\n                          \r\n                            this.isCollision = true;\r\n                            //初始化触碰1秒计时\r\n                            this.fCollisionTime = 0;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    },\r\n    //俄罗斯方块下落\r\n    BlockDown: function () {\r\n        //判断俄罗斯方块是否移动过一次\r\n        var isMove = true;\r\n        //获取节点子节点数组\r\n        var blockChild = this.node.getChildren();\r\n        //  //判断俄罗斯方块是否结束地面\r\n        //  var isCollisionGround=false;\r\n        //判断俄罗斯方块中是否含有22行\r\n        for (var i = 0; i <= 3; i++) {\r\n            var nY = (blockChild[i].getPositionY() + this.node.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n            if (nY == 22) {\r\n                isMove = false;\r\n            }\r\n        }\r\n        if (isMove == false) {\r\n            //初始化俄罗斯方块中第21行方块的数组下表\r\n            var nBoxArray = [];\r\n            //初始化俄罗斯方块中第21行方块的数组列\r\n            var nXArray = [];\r\n            //初始化俄罗斯方块中第21行方块的数组行\r\n            var nYArray = [];\r\n            //遍历俄罗斯方块并并判断第21行的下面是否为true\r\n            for (var i = 0; i <= 3; i++) {\r\n                //获取此时组成俄罗斯方块元素的行列\r\n                var nX = (blockChild[i].getPositionX() + this.node.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n                var nY = (blockChild[i].getPositionY() + this.node.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n                cc.log(nX);\r\n                cc.log(nY);\r\n                if (nY == 21) {\r\n                     \r\n                    if (Global.game1Main.groundChild[nX - 1][nY - 2].getComponent(\"PrefabState\").isBox) {\r\n                        cc.log(\"BlockDown\"+nY);\r\n                        cc.log();\r\n                        this.isGameOver = true;\r\n                        return;\r\n                    }\r\n                    else {\r\n                        nBoxArray.push(i);\r\n                        nXArray.push(nX);\r\n                        nYArray.push(nY);\r\n                    }\r\n                }\r\n                if (i == 3 && this.isGameOver == false) {\r\n                    //初始化变化方块数组\r\n                    this.arrayChangeNode = [];\r\n                    this.node.y -= Global.nWidth;\r\n                    if (nBoxArray.length >= 2) {\r\n                        for (var j = 0; j <= nBoxArray.length - 1; j++) {\r\n                            // Global.game1Main.groundChild[nXArray[j] - 1][nYArray[j] - 2].getComponent(\"PrefabState\").stringColor = this.stringColor;\r\n                            // Global.game1Main.groundChild[nXArray[j] - 1][nYArray[j] - 2].getComponent(\"PrefabState\").isBox = true;\r\n                            this.arrayChangeNode.push({ \"row\": nYArray[j] - 2, \"col\": nXArray[j] - 1, \"color\": this.stringColor });\r\n                        }\r\n                    }\r\n                    if (nBoxArray.length == 1) {\r\n                        cc.log(nXArray[0] - 1);\r\n                        cc.log(nYArray[0] - 2);\r\n                        cc.log(Global.game1Main.groundChild[nXArray[0] - 1][nYArray[0] - 2].getComponent(\"PrefabState\").stringColor);\r\n                        // Global.game1Main.groundChild[nXArray[0] - 1][nYArray[0] - 2].getComponent(\"PrefabState\").isBox = true;\r\n                        this.arrayChangeNode.push({ \"row\": nYArray[0] - 2, \"col\": nXArray[0] - 1, \"color\": this.stringColor });\r\n                    }\r\n                    //初始化计时器\r\n                    this.fDownTime = 0;\r\n                    this.isDownState = true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n\r\n            //     //获取此时组成俄罗斯方块元素的行列\r\n            //    var nX=(blockChild[i].getPositionX()+this.node.getPositionX()-cc.find(\"GroundParent\").getPositionX())/65+1;\r\n            //    var nY=(blockChild[i].getPositionY()+this.node.getPositionY()-cc.find(\"GroundParent\").getPositionY())/65+1; \r\n            //存取俄罗斯方块的行数\r\n            var nArrayRow = [];\r\n            //存取俄罗斯方块的列数\r\n            var nArrayList = [];\r\n            //将俄罗斯方块的行列存入数组中\r\n            for (var i = 0; i <= 3; i++) {\r\n                //获取此时组成俄罗斯方块元素的行列\r\n                var nX = (blockChild[i].getPositionX() + this.node.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n                var nY = (blockChild[i].getPositionY() + this.node.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n                nArrayList.push(nX);\r\n                nArrayRow.push(nY);\r\n            }\r\n            //从小到大排序行数\r\n            for (var j = 0; j <= 3; j++) {\r\n                if (j <= 2) {\r\n                    for (var k = j + 1; k <= 3; k++) {\r\n                        if (nArrayRow[k] < nArrayRow[j]) {\r\n                            var nOldY = nArrayRow[j];\r\n                            nArrayRow[j] = nArrayRow[k];\r\n                            nArrayRow[k] = nOldY;\r\n                            var nOldX = nArrayList[j];\r\n                            nArrayList[j] = nArrayList[k];\r\n                            nArrayList[k] = nOldX;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            //    if(Global.game1Main.groundChild[nArrayList[0]-1][nArrayRow[0]-2].getComponent(\"PrefabState\").isBox&&nArrayRow[3]>20)\r\n            //    {\r\n            //        this.isGameOver=true;\r\n            //    }\r\n            if (this.isGameOver == false) {\r\n                if (nArrayRow[0] == 1) {\r\n                    cc.log(\"==========================================================================\");\r\n                   \r\n                    //    this.fCollisionTime=0;\r\n                    this.isCollision = true;\r\n                    return;\r\n                }\r\n                else {\r\n                    this.isOver = false;\r\n                    for (var i = 0; i <= 3; i++) {\r\n                        if (this.isGameOver) {\r\n                            return;\r\n                        }\r\n                        //获取此时组成俄罗斯方块元素的行列\r\n                        var nX = (blockChild[i].getPositionX() + this.node.getPositionX() - cc.find(\"GroundParent\").getPositionX()) / Global.nWidth + 1;\r\n                        var nY = (blockChild[i].getPositionY() + this.node.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n                        if (i == 0) {\r\n                            this.nBox = 0;\r\n                            this.isDown = false;\r\n                        }\r\n                        this.GetShape(this.stringBoloekShape, i, nX, nY, this.nRotateAngle);\r\n                        if (i == 3) {\r\n                            this.fDownTime = 0;\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    },\r\n    //遍历全局字块数组并消除整行方块isBox都为true的节点\r\n    TraversalNodeBox: function (nPositionY) {\r\n        // var boxParent1=this.boxParent.getChildren();\r\n        var nLength = this.boxParent1.length;\r\n        //存储被销毁的俄罗斯方块数组的下标\r\n        var nDestroy = [];\r\n        cc.log(nPositionY + \"nPositionY\");\r\n        for (var j = 0; j <= nLength - 1; j++) {\r\n            cc.log(this.boxParent1[j].getPositionY());\r\n        }\r\n        //    cc.log(boxParent1[0].getPositionY());\r\n        //    cc.log(nPositionY);\r\n        for (var i = 0; i <= nLength - 1; i++) {\r\n            // var boxParent1=this.boxParent.getChildren();\r\n            if (this.boxParent1[i].getPositionY() == nPositionY) {\r\n                //销毁该俄罗斯方块自方块\r\n                this.boxParent1[i].destroy();\r\n            }\r\n        }\r\n    },\r\n    update(dt) {\r\n        if (this.isShow == false && this.isStartDown && this.isGameOver == false) {\r\n            //获取节点子节点数组\r\n            var blockChild = this.node.getChildren();\r\n            var isActive = false;\r\n            for (var i = 0; i <= 3; i++) {\r\n                var nY = (blockChild[i].getPositionY() + this.node.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n                if (nY == 22 || nY == 21) {\r\n                    isActive = true;\r\n                    blockChild[i].active = false;\r\n                }\r\n                else {\r\n                    blockChild[i].active = true;\r\n                }\r\n                if (i == 3 && isActive == false) {\r\n                    this.isShow = true;\r\n                }\r\n            }\r\n        }\r\n        if (this.isStartDown && this.isGameOver == false) {\r\n            //物体下落,开始计时\r\n            this.fDownTime += dt;\r\n            if (this.fDownTime >= Global.nTimeInteval && this.isStationary == false) {\r\n                //  cc.log(this.stringBoloekShape);\r\n                //  cc.log(this.nRotateAngle);\r\n                this.BlockDown();\r\n            }\r\n            if (this.isCollision && this.isGameOver == false) {\r\n                var blockChild = this.node.getChildren();\r\n                //判断俄罗斯方块中是否有大于20行的\r\n                for (var i = 0; i <= 3; i++) {\r\n                    var nY = (blockChild[i].getPositionY() + this.node.getPositionY() - cc.find(\"GroundParent\").getPositionY()) / Global.nWidth + 1;\r\n                    if (nY>20) {\r\n                        this.isGameOver=true;\r\n                        return;\r\n                    }\r\n                }\r\n                this.TravelOnloda();\r\n                this.isStationary = true;\r\n                this.isCollision = false;\r\n            }\r\n        }\r\n    },\r\n});\r\n"]}